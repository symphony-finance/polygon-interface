{"version":3,"sources":["webpack:///./src/assets/images/dropdown.svg?d0dc","components/TokenLogo/index.js","components/CurrencyInputPanel/index.js","components/OversizedPanel/index.js","assets/svg/SVGArrowDown.js","assets/svg/SVGClose.js","assets/svg/SVGDiv.js","state/multicall/hooks.js","hooks/trade.js","utils/rate.js","components/Row/index.jsx","components/Column/index.jsx","components/TransactionConfirmationModal/index.js","utils/gas.js","contexts/supportedTokens.js","components/ExchangePage/index.jsx","components/OrderCard/index.js","components/PastOrderCard/index.jsx","components/OrdersHistory/index.js","components/Orders/index.jsx","pages/Swap/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","stroke","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","BAD_IMAGES","Image","styled","img","size","Emoji","span","TokenLogo","address","logoURI","rest","useState","error","setError","path","style","lineHeight","role","aria-label","undefined","isAddress","TOKEN_ICON_API","alt","src","onError","GAS_MARGIN","ethers","BigNumber","from","SubCurrencySelect","button","theme","flexRowNoWrap","zumthorBlue","royalGreen","InputRow","div","Input","BorderlessInput","salmonRed","inputBackground","StyledBorderlessInput","concreteGray","CurrencySelect","selected","textColor","mercuryGray","darken","Aligner","StyledDropDown","DropDown","InputPanel","flexColumnNoWrap","transparentize","shadowColor","Container","malibuGreen","LabelRow","doveGray","LabelContainer","ErrorSpan","TokenModal","ModalHeader","CloseColor","Close","CloseIcon","SearchContainer","TokenModalInfo","TokenList","TokenModalRow","doveGrey","tokenRowHover","mediaWidth","upToMedium","TokenRowLeft","TokenSymbolGroup","TokenFullName","chaliceGray","TokenRowBalance","TokenRowUsd","TokenRowRight","StyledTokenName","SpinnerWrapper","Spinner","CurrencyInputPanel","onValueChange","allBalances","renderInput","onCurrencySelected","description","extraText","extraTextClickHander","errorMessage","disableUnlock","disableTokenSelect","selectedTokenAddress","showUnlock","value","showCurrencySelector","t","useTranslation","modalIsOpen","setModalIsOpen","tokenContract","useTokenContract","selectedTokenExchangeAddress","useTokenDetails","exchangeAddress","pendingApproval","usePendingApproval","addTransaction","useTransactionAdder","allTokens","useAllTokenDetails","data-tip","onClick","label","background","color","border","borderRadius","padding","marginTop","type","min","placeholder","step","onChange","e","onKeyPress","which","keyCode","preventDefault","stopPropagation","a","estimate","approve","constants","MaxUint256","estimatedGas","gasLimit","calculateGasMargin","then","response","approval","symbol","CurrencySelectModal","isOpen","onDismiss","onTokenSelect","searchQuery","setSearchQuery","name","ethPrice","useUSDPrice","_usdAmounts","map","k","ethRate","isNaN","balance","USDRate","times","toString","pow","decimals","usdAmounts","reduce","accumulator","currentValue","tokenList","useMemo","filter","sort","b","aSymbol","toLowerCase","bSymbol","aBalance","bBalance","gt","usdBalance","formatEthBalance","formatTokenBalance","filteredTokenList","tokenEntry","tokenEntryKey","match","RegExp","escapeStringRegex","some","m","inputRef","useRef","clearInputAndDismiss","Modal","minHeight","initialFocusRef","isMobile","SearchIcon","event","input","checksummedInput","_onTokenSelect","id","Circle","lt","formatToUsd","Panel","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","SVGArrowDown","SVGDiv","version","x1","y1","x2","y2","strokeWidth","SVGClose","isMethodArg","x","INVALID_RESULT","valid","blockNumber","data","INVALID_CALL_STATE","result","loading","syncing","LOADING_CALL_STATE","useMultipleContractSingleData","addresses","contractInterface","methodName","callInputs","options","fragment","getFunction","callData","Array","isArray","every","y","isValidMethodArgs","encodeFunctionData","results","calls","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","res","c","Boolean","toCallKey","JSON","stringify","console","log","message","useEffect","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","useCallsData","latestBlockNumber","useBlockNumber","callResult","success","decodeFunctionResult","debug","toCallState","PairState","ETHER","PAIR_INTERFACE","Interface","PAIR_ABI","useAllCommonPairs","currencyA","currencyB","allPairs","useV2Pairs","tokenA","tokenB","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","t0","t1","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","equals","useAllCurrencyCombinations","values","memo","curr","liquidityToken","currencies","tokens","wrapped","FACTORY_ADDRESS","computePairAddress","factoryAddress","reserves","_reserve0","_reserve1","sortsBefore","token0","token1","Pair","CurrencyAmount","fromRawAmount","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","inputAmount","currency","outputAmount","Error","equalTo","executionPrice","lessThan","asFraction","multiply","add","ONE_HUNDRED_PERCENT","tryParseAmount","typedValueParsed","parseUnits","JSBI","BigInt","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","mul","Row","Box","align","justify","RowBetween","gap","Column","AutoColumn","Wrapper","Section","BottomSection","bg2","Text","p","TransactionErrorModal","maxHeight","fontWeight","fontSize","textAlign","Button","getGasPrice","gasPrice","Promise","all","getGasStation","resGasStation","toNumber","fetch","json","Math","ceil","standard","SUPPORTED_ASSETS","DownArrowBackground","DownArrow","clickable","active","RateIcon","RateIconSVG","icon","ExchangeRateWrapper","ExchangeRate","Flex","getInitialSwapState","outputCurrency","independentValue","dependentValue","independentField","prevIndependentField","inputCurrency","rateOp","inputRateValue","stoplossValue","swapStateReducer","action","rate","utils","flipped","amountFormatter","flipRate","payload","field","newInputCurrency","newOutputCurrency","Number","exchangeRateDiff","exchangeRateA","exchangeRateB","sub","ExchangePage","outputValueFormatted","outputValueParsed","rateRaw","initialCurrency","useWeb3React","account","library","showConfirm","setShowConfirm","orderErrorMessage","setOrderErrorMessage","useReducer","swapState","dispatchSwapState","symphonyContract","useSymphonyContract","wethGatewayContract","useWETHGatewayContract","inputError","setInputError","swapType","getSwapType","inputSymbol","outputSymbol","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","isInteger","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","inputValueParsed","inputValueFormatted","bestTradeExactIn","currencyAddressIn","currencyAmountIn","currencyAddressOut","maxHops","currencyIn","currencyOutDetail","currencyOut","Token","currencyInputAmount","allowedPairs","Trade","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","useTradeExactIn","toExact","number","units","margin","safeParseUnits","exchangeRate","applyExchangeRateTo","toSignificant","rateFormatted","inverseRateInputSymbol","inverseRateOutputSymbol","inverseRate","usedInput","realInputValue","executionRate","limitSlippage","limitExecution","independentError","setIndependentError","executionRateDelta","executionRateNegative","Zero","executionRateWarning","abs","parsedValue","lte","gte","setShowUnlock","inputValueCalculation","inverted","setInverted","exchangeRateInverted","rateDelta","highSlippageWarning","rateDeltaFormatted","isValid","estimatedText","formatBalance","ReactGA","category","minimumReturn","stoplossAmount","fromCurrency","WETH_ADDRESSES","toCurrency","includes","order","recipient","inputToken","outputToken","minReturnAmount","orderId","getOrderId","orderHash","ZERO_BYTES32","estimateGas","createMaticOrder","getTokenAllowance","SYMPHONY_ADDRESSES","getERC20Contract","tx","wait","createOrder","hash","ACTION_PLACE_ORDER","customSlippageError","useFetchAllBalances","valueToSet","parseEther","selectedTokens","rateValue","className","disabled","warning","startsWith","CancelButton","Order","Spacer","RightArrow","transform","OrderCard","inputAssetDetails","ETH_ADDRESS","getAddress","fromSymbol","fromDecimals","toSymbol","toDecimals","useOrderPendingState","last","canceling","ACTION_CANCEL_ORDER","pending","orderEncodedData","cancelOrder","creationAmount","currentOrderValue","totalFunds","shares","totalShares","yieldEarned","explorerLink","getEtherscanLink","rateFromTo","rateToFrom","status","onCancel","CUSTOM_DATA","rel","href","PastOrderCard","cancelled","executed","cancelledTxHash","executedTxHash","Date","updatedAt","toLocaleDateString","OrdersHistory","orders","setState","fetchUserPastOrders","usePastOrders","ORDER_GRAPH","method","headers","body","query","variables","owner","warn","lsKey","getSavedOrders","raw","ls","fetchUserOrders","allOrders","openOrders","getAllAssetsDetail","assetDetails","Orders","setOrders","setLoading","pendingOrders","useAllPendingOrders","pendingCancelOrders","useAllPendingCancelOrders","local","deps","o","useSavedOrders","graph","setTimeout","allAssetDetails","useGraphOrders","asset","Swap"],"mappings":"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","file":"static/js/8.cbb27f80.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#AEAEAE\"\n});\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.7d32d2fa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from '../../utils'\n\n// import { ReactComponent as EthereumLogo } from '../../assets/images/ethereum-logo.svg'\n\nconst TOKEN_ICON_API = address =>\n  `https://raw.githubusercontent.com/sushiswap/assets/master/blockchains/polygon/assets/${isAddress(address)}/logo.png`\nconst BAD_IMAGES = {}\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 1rem;\n`\n\nconst Emoji = styled.span`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\n// const StyledEthereumLogo = styled(EthereumLogo)`\n//   width: ${({ size }) => size};\n//   height: ${({ size }) => size};\n// `\n\nexport default function TokenLogo({ address, logoURI, size = '1rem', ...rest }) {\n  const [error, setError] = useState(false)\n\n  let path = ''\n  if (address === 'ETH') {\n    // return <StyledEthereumLogo size={size} />\n    path = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0/logo.png\"\n  } else if (!error && !BAD_IMAGES[address]) {\n    path = logoURI === \"\" || logoURI === undefined ? TOKEN_ICON_API(address) : logoURI;\n  } else {\n    return (\n      <Emoji {...rest} size={size}>\n        <span style={{ lineHeight: 0 }} role=\"img\" aria-label=\"Thinking\">\n          🌕\n        </span>\n      </Emoji>\n    )\n  }\n\n  return (\n    <Image\n      {...rest}\n      alt={address}\n      src={path}\n      size={size}\n      onError={() => {\n        BAD_IMAGES[address] = true\n        setError(true)\n      }}\n    />\n  )\n}\n","import React, { useState, useRef, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport escapeStringRegex from 'escape-string-regexp'\nimport { darken } from 'polished'\nimport Tooltip from '@reach/tooltip'\nimport '@reach/tooltip/styles.css'\nimport { isMobile } from 'react-device-detect'\n\nimport { BorderlessInput } from '../../theme'\nimport { useTokenContract } from '../../hooks'\nimport { isAddress, calculateGasMargin, formatToUsd, formatTokenBalance, formatEthBalance } from '../../utils'\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport Modal from '../Modal'\nimport TokenLogo from '../TokenLogo'\nimport SearchIcon from '../../assets/images/magnifying-glass.svg'\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions'\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { transparentize } from 'polished'\nimport { Spinner } from '../../theme'\nimport Circle from '../../assets/images/circle-grey.svg'\nimport { useUSDPrice } from '../../contexts/Application'\n\nconst GAS_MARGIN = ethers.BigNumber.from(1000)\n\nconst SubCurrencySelect = styled.button`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 4px 50px 4px 15px;\n  margin-right: -40px;\n  line-height: 0;\n  height: 2rem;\n  align-items: center;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  background: ${({ theme }) => theme.zumthorBlue};\n  border: 1px solid ${({ theme }) => theme.royalGreen};\n  color: ${({ theme }) => theme.royalGreen};\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  background-color: ${({ theme }) => theme.inputBackground};\n  -moz-appearance: textfield;\n`\n\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 2.5rem;\n  flex-shrink: 0;\n  text-align: left;\n  padding-left: 1.6rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport const CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalGreen)};\n  height: 2rem;\n  border: 1px solid ${({ selected, theme }) => (selected ? theme.mercuryGray : theme.royalGreen)};\n  border-radius: 2.5rem;\n  background-color: #fafafa;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({ selected, theme }) => (selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalGreen))};\n  }\n\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.1, theme.royalGreen)};\n  }\n`\n\nexport const Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalGreen)};\n  }\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n  :focus-within {\n    border: 1px solid ${({ theme }) => theme.malibuGreen};\n  }\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.doveGray)};\n  }\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst ErrorSpan = styled.span`\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({ error, theme }) => error && darken(0.1, theme.salmonRed)};\n  }\n`\n\nconst TokenModal = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  width: 100%;\n`\n\nconst ModalHeader = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 0px 0px 1rem;\n  height: 60px;\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.textColor};\n  }\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst SearchContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: flex-start;\n  padding: 0.5rem 1.5rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst TokenModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`\n\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst TokenModalRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({ theme }) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.tokenRowHover};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0.8rem 1rem;`}\n`\n\nconst TokenRowLeft = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items : center;\n`\n\nconst TokenSymbolGroup = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  margin-left: 1rem;\n`\n\nconst TokenFullName = styled.div`\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowBalance = styled.div`\n  font-size: 1rem;\n  line-height: 20px;\n`\n\nconst TokenRowUsd = styled.div`\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowRight = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: flex-end;\n`\n\nexport const StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n  color: ${({ theme }) => theme.chaliceGray};\n  opacity: 0.6;\n`\n\nexport default function CurrencyInputPanel({\n  onValueChange = () => { },\n  allBalances,\n  renderInput,\n  onCurrencySelected = () => { },\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => { },\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value,\n  showCurrencySelector = true\n}) {\n  const { t } = useTranslation()\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const tokenContract = useTokenContract(selectedTokenAddress)\n  const { exchangeAddress: selectedTokenExchangeAddress } = useTokenDetails(selectedTokenAddress)\n\n  const pendingApproval = usePendingApproval(selectedTokenAddress)\n\n  const addTransaction = useTransactionAdder()\n\n  const allTokens = useAllTokenDetails()\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null\n    } else {\n      if (!pendingApproval) {\n        return (\n          <SubCurrencySelect\n            onClick={async () => {\n              const estimatedGas = await tokenContract.estimate.approve(\n                selectedTokenExchangeAddress,\n                ethers.constants.MaxUint256\n              )\n              tokenContract\n                .approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256, {\n                  gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n                })\n                .then(response => {\n                  addTransaction(response, { approval: selectedTokenAddress })\n                })\n            }}\n          >\n            {t('unlock')}\n          </SubCurrencySelect>\n        )\n      } else {\n        return <SubCurrencySelect>{t('pending')}</SubCurrencySelect>\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput()\n    }\n\n    return (\n      <InputRow>\n        <Input\n          type=\"number\"\n          min=\"0\"\n          error={!!errorMessage}\n          placeholder=\"0.0\"\n          step=\"0.000000000000000001\"\n          onChange={e => onValueChange(e.target.value)}\n          onKeyPress={e => {\n            const charCode = e.which ? e.which : e.keyCode\n\n            // Prevent 'minus' character\n            if (charCode === 45) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n          }}\n          value={value}\n        />\n        {renderUnlockButton()}\n        {showCurrencySelector ? (\n          <CurrencySelect\n            selected={!!selectedTokenAddress}\n            onClick={() => {\n              if (!disableTokenSelect) {\n                setModalIsOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {selectedTokenAddress ? <TokenLogo address={selectedTokenAddress} logoURI={allTokens[selectedTokenAddress].logoURI} /> : null}\n              {\n                <StyledTokenName>\n                  {(allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol) || t('selectToken')}\n                </StyledTokenName>\n              }\n              {!disableTokenSelect && <StyledDropDown selected={!!selectedTokenAddress} />}\n            </Aligner>\n          </CurrencySelect>\n        ) : null}\n      </InputRow>\n    )\n  }\n\n  return (\n    <InputPanel>\n      <Container error={!!errorMessage}>\n        <LabelRow>\n          <LabelContainer>\n            <span>{title}</span> <span>{description}</span>\n          </LabelContainer>\n\n          <ErrorSpan\n            data-tip={'Enter max'}\n            error={!!errorMessage}\n            onClick={() => {\n              extraTextClickHander()\n            }}\n          >\n            <Tooltip\n              label=\"Enter Max\"\n              style={{\n                background: 'hsla(0, 0%, 0%, 0.75)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '24px',\n                padding: '0.5em 1em',\n                marginTop: '-64px'\n              }}\n            >\n              <span>{extraText}</span>\n            </Tooltip>\n          </ErrorSpan>\n        </LabelRow>\n        {_renderInput()}\n      </Container>\n      {!disableTokenSelect && (\n        <CurrencySelectModal\n          isOpen={modalIsOpen}\n          // isOpen={true}\n          onDismiss={() => {\n            setModalIsOpen(false)\n          }}\n          onTokenSelect={onCurrencySelected}\n          allBalances={allBalances}\n        />\n      )}\n    </InputPanel>\n  )\n}\n\nfunction CurrencySelectModal({ isOpen, onDismiss, onTokenSelect, allBalances }) {\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const { name } = useTokenDetails(searchQuery)\n\n  const allTokens = useAllTokenDetails()\n\n  // BigNumber.js instance\n  const ethPrice = useUSDPrice()\n\n  const _usdAmounts = Object.keys(allTokens).map(k => {\n    if (\n      ethPrice &&\n      allBalances &&\n      allBalances[k] &&\n      allBalances[k].ethRate &&\n      !allBalances[k].ethRate.isNaN() &&\n      allBalances[k].balance\n    ) {\n      const USDRate = ethPrice.times(allBalances[k].ethRate)\n      const balanceBigNumber = ethers.BigNumber.from(allBalances[k].balance.toString())\n      const usdBalance = balanceBigNumber.times(USDRate).div(ethers.BigNumber.from(10).pow(allTokens[k].decimals))\n      return usdBalance\n    } else {\n      return null\n    }\n  })\n  const usdAmounts =\n    _usdAmounts &&\n    Object.keys(allTokens).reduce(\n      (accumulator, currentValue, i) => Object.assign({ [currentValue]: _usdAmounts[i] }, accumulator),\n      {}\n    )\n\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens)\n      .filter(k => allTokens[k].symbol)\n      .sort((a, b) => {\n        const aSymbol = allTokens[a].symbol.toLowerCase()\n        const bSymbol = allTokens[b].symbol.toLowerCase()\n\n        if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n          return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1\n        }\n\n        // if (aSymbol === 'WETH'.toLowerCase() || bSymbol === 'WETH'.toLowerCase()) {\n        //   return aSymbol === bSymbol ? 0 : aSymbol === 'WETH'.toLowerCase() ? -1 : 1\n        // }\n\n        if (allBalances) {\n          const aBalance = allBalances[a] ? allBalances[a].balance : null\n          const bBalance = allBalances[b] ? allBalances[b].balance : null\n\n          if (aBalance && !bBalance) {\n            return -1\n          } else if (!aBalance && bBalance) {\n            return 1\n          }\n\n          if (aBalance && aBalance) {\n            if (aBalance.gt(bBalance)) {\n              return -1\n            } else {\n              return 1\n            }\n          }\n        }\n\n        return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0\n      })\n      .map(k => {\n        let balance\n        let usdBalance\n        // only update if we have data\n        if (k === 'ETH' && allBalances && allBalances[k]) {\n          balance = formatEthBalance(allBalances[k].balance)\n          usdBalance = usdAmounts[k]\n        } else if (allBalances && allBalances[k]) {\n          balance = formatTokenBalance(allBalances[k].balance, allTokens[k].decimals)\n          usdBalance = usdAmounts[k]\n        }\n        return {\n          name: allTokens[k].name,\n          symbol: allTokens[k].symbol,\n          address: k,\n          balance: balance,\n          usdBalance: usdBalance,\n          logoURI: allTokens[k].logoURI,\n        }\n      })\n  }, [allBalances, allTokens, usdAmounts])\n\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return (\n          typeof tokenEntry[tokenEntryKey] === 'string' &&\n          !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\n        )\n      })\n\n      return regexMatches.some(m => m)\n    })\n  }, [tokenList, searchQuery])\n\n  function _onTokenSelect(address) {\n    setSearchQuery('')\n    onTokenSelect(address)\n    onDismiss()\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && name === undefined) {\n      return <TokenModalInfo>Searching for Exchange...</TokenModalInfo>\n    }\n    if (!filteredTokenList.length) {\n      return <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n    }\n\n    return filteredTokenList.map(({ address, symbol, name, balance, usdBalance, logoURI }) => {\n      return (\n        <TokenModalRow key={address} onClick={() => _onTokenSelect(address)}>\n          <TokenRowLeft>\n            <TokenLogo address={address} logoURI={logoURI} size={'2rem'} />\n            <TokenSymbolGroup>\n              <span id=\"symbol\">{symbol}</span>\n              <TokenFullName>{name}</TokenFullName>\n            </TokenSymbolGroup>\n          </TokenRowLeft>\n          <TokenRowRight>\n            {balance ? (\n              <TokenRowBalance>{balance && (balance > 0 || balance === '<0.0001') ? balance : '-'}</TokenRowBalance>\n            ) : (\n              <SpinnerWrapper src={Circle} alt=\"loader\" />\n            )}\n            <TokenRowUsd>\n              {usdBalance ? (usdBalance.lt(0.01) ? '<$0.01' : '$' + formatToUsd(usdBalance)) : ''}\n            </TokenRowUsd>\n          </TokenRowRight>\n        </TokenModalRow>\n      )\n    })\n  }\n\n  // manage focus on modal show\n  const inputRef = useRef()\n\n  function onInput(event) {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }\n\n  function clearInputAndDismiss() {\n    setSearchQuery('')\n    onDismiss()\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={clearInputAndDismiss}\n      minHeight={60}\n      initialFocusRef={isMobile ? undefined : inputRef}\n    >\n      <TokenModal>\n        <ModalHeader>\n          <p>Select Token</p>\n          <CloseIcon onClick={clearInputAndDismiss}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n        </ModalHeader>\n        <SearchContainer>\n          <img src={SearchIcon} alt=\"search\" />\n          <StyledBorderlessInput\n            ref={inputRef}\n            type=\"text\"\n            placeholder={isMobile ? t('searchOrPasteMobile') : t('searchOrPaste')}\n            onChange={onInput}\n          />\n        </SearchContainer>\n        <TokenList>{renderTokenList()}</TokenList>\n      </TokenModal>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React from 'react'\n\nconst SVGDiv = props => (\n  <svg version=\"1.1\" style={{ padding: '13px', width: '11px', height: '11px' }} {...props}>\n    <line x1=\"1\" y1=\"9\" x2=\"9\" y2=\"1\" strokeWidth=\"1\" />\n    <line x1=\"1\" y1=\"1\" x2=\"9\" y2=\"9\" strokeWidth=\"1\" />\n  </svg>\n)\n\nexport default SVGDiv\n","import React from 'react'\n\nconst SVGClose = props => (\n  <svg version=\"1.1\" style={{ padding: '13px', width: '11px', height: '11px' }} {...props}>\n    <line x1=\"1\" y1=\"9\" x2=\"9\" y2=\"1\" strokeWidth=\"1\" />\n  </svg>\n)\n\nexport default SVGClose\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React, useBlockNumber } from '../../hooks'\n\nimport { addMulticallListeners, removeMulticallListeners, parseCallKey, toCallKey } from './actions'\n\nfunction isMethodArg(x) {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x) {\n  return (\n    x === undefined || (Array.isArray(x) && x.every(y => isMethodArg(y) || (Array.isArray(y) && y.every(isMethodArg))))\n  )\n}\n\nconst INVALID_RESULT = { valid: false, blockNumber: undefined, data: undefined }\nconst INVALID_CALL_STATE = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(callResult, contractInterface, fragment, latestBlockNumber) {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ? blockNumber : 0) < latestBlockNumber\n  let result = undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result: result,\n    error: !success\n  }\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls, options) {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector(state => state.multicall.callResults)\n  const dispatch = useDispatch()\n\n  const serializedCallKeys = useMemo(() => {\n    try {\n      const res = calls\n        .filter(c => Boolean(c))\n        .map(toCallKey)\n        .sort()\n\n      return JSON.stringify(res ? res : [])\n    } catch (e) {\n      console.log('error ', e.message)\n      return undefined\n    }\n  }, [calls])\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    if (!serializedCallKeys) {\n      return\n    }\n    const callKeys = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return\n    const calls = callKeys.map(key => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options\n      })\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options\n        })\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map(call => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId] ? callResults[chainId][toCallKey(call)] : undefined\n        let data\n        if (result && result.data && result.data !== '0x') {\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result ? result.blockNumber : undefined }\n      }),\n    [callResults, calls, chainId]\n  )\n}\n\nexport function useMultipleContractSingleData(addresses, contractInterface, methodName, callInputs, options) {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n\n  const callData = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map(address => {\n            return address && callData\n              ? {\n                  address,\n                  callData\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map(result => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n","import { Trade, Token, JSBI, Pair, CurrencyAmount, FACTORY_ADDRESS, computePairAddress } from '@sushiswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\nimport { Interface } from '@ethersproject/abi'\nimport { parseUnits } from '@ethersproject/units'\n\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, BETTER_TRADE_LESS_HOPS_THRESHOLD, CUSTOM_BASES, ONE_HUNDRED_PERCENT, ZERO_PERCENT } from '../constants'\nimport PAIR_ABI from '../constants/abis/pair.json'\nimport { useActiveWeb3React } from './index'\nimport { useTokenDetails } from '../contexts/Tokens'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\n\nexport const PairState = {\n  LOADING: 'LOADING',\n  NOT_EXISTS: 'NOT_EXISTS',\n  EXISTS: 'EXISTS',\n  INVALID: 'INVALID'\n}\n\nconst ETHER = {\n  address: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n  chainId: 137,\n  decimals: 18,\n  isNative: false,\n  isToken: true,\n  name: \"Matic Token\",\n  symbol: \"MATIC\"\n}\n\nconst PAIR_INTERFACE = new Interface(PAIR_ABI)\n\nfunction useAllCommonPairs(currencyA, currencyB) {\n  const allCurrencyCombinations = useAllCurrencyCombinations(currencyA, currencyB)\n\n  const allPairs = useV2Pairs(allCurrencyCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result) => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(\n  currencyAddressIn,\n  currencyAmountIn,\n  currencyAddressOut,\n  { maxHops = MAX_HOPS } = {}\n) {\n  const currencyIn = useTokenDetails(currencyAddressIn)\n\n  const currencyOutDetail = useTokenDetails(currencyAddressOut)\n  const currencyOut = currencyAddressOut && currencyOutDetail && currencyOutDetail.decimals\n    ? currencyAddressOut === 'ETH'\n      ? new Token(ETHER.chainId, ETHER.address, ETHER.decimals, ETHER.symbol, ETHER.name)\n      : new Token(\n        currencyOutDetail.chainId,\n        currencyAddressOut,\n        currencyOutDetail.decimals,\n        currencyOutDetail.symbol,\n        currencyOutDetail.name\n      )\n    : undefined\n\n  const currencyInputAmount = tryParseAmount(\n    currencyAmountIn,\n    currencyAddressIn\n      ? currencyAddressIn === 'ETH'\n        ? new Token(ETHER.chainId, ETHER.address, ETHER.decimals, ETHER.symbol, ETHER.name)\n        : new Token(currencyIn.chainId, currencyAddressIn, currencyIn.decimals, currencyIn.symbol, currencyIn.name)\n      : undefined\n  )\n\n  const allowedPairs = useAllCommonPairs(currencyInputAmount ? currencyInputAmount.currency : undefined, currencyOut)\n\n  return useMemo(() => {\n    if (currencyInputAmount && currencyOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyInputAmount, currencyOut, {\n            maxHops: 1,\n            maxNumResults: 1,\n          })[0] ?? null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar = null\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade =\n          Trade.bestTradeExactIn(allowedPairs, currencyInputAmount, currencyOut, {\n            maxHops: i,\n            maxNumResults: 1,\n          })[0] ?? null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyOut, maxHops, currencyInputAmount])\n}\n\nexport function useV2Pairs(currencies) {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          FACTORY_ADDRESS[tokenA.chainId]\n          ? computePairAddress({\n            factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n            tokenA,\n            tokenB,\n          })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { _reserve0, _reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, _reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, _reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA, tokenB) {\n  const inputs = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n\nexport function useAllCurrencyCombinations(currencyA, currencyB) {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId ? [currencyA, currencyB] : [undefined, undefined]\n\n  const bases = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs = useMemo(\n    () => flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase])),\n    [bases]\n  )\n\n  return useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n          // the direct pair\n          [tokenA, tokenB],\n          // token A against all bases\n          ...bases.map((base) => [tokenA, base]),\n          // token B against all bases\n          ...bases.map((base) => [tokenB, base]),\n          // each base against all bases\n          ...basePairs,\n        ]\n          .filter(([t0, t1]) => t0.address !== t1.address)\n          .filter(([tokenA, tokenB]) => {\n            if (!chainId) return true\n            const customBases = CUSTOM_BASES[chainId]\n\n            const customBasesA = customBases?.[tokenA.address]\n            const customBasesB = customBases?.[tokenB.address]\n\n            if (!customBasesA && !customBasesB) return true\n\n            if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n            if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n            return true\n          })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n}\n\nexport function isTradeBetter(\n  tradeA,\n  tradeB,\n  minimumDelta = ZERO_PERCENT\n) {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeB.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Comparing incomparable trades')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  } else {\n    return tradeA.executionPrice.asFraction\n      .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n      .lessThan(tradeB.executionPrice)\n  }\n}\n\nexport function tryParseAmount(value, currency) {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n","import { ethers } from 'ethers'\n\nexport function getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from '../Row'\nimport { AlertTriangle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { ButtonPrimary } from '../Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport Modal from '../Modal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport function ConfirmationModalContent({\n  title,\n  onDismiss,\n  message\n}) {\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            {title}\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        {message}\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorModal({ message, isOpen, onDismiss }) {\n  const { chainId } = useActiveWeb3React()\n\n  console.log(message);\n\n  if (!chainId) return null\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      <Wrapper>\n        <Section>\n          <RowBetween>\n            <Text fontWeight={500} fontSize={20}>\n              Error\n          </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n            <AlertTriangle color='#FD4040' style={{ strokeWidth: 1.5 }} size={64} />\n            <p fontWeight={500} fontSize={16} color='#FD4040' style={{ textAlign: 'center', width: '85%' }}>\n              {message}\n            </p>\n          </AutoColumn>\n        </Section>\n        <BottomSection gap=\"12px\">\n          <ButtonPrimary onClick={onDismiss}>Dismiss</ButtonPrimary>\n        </BottomSection>\n      </Wrapper>\n    </Modal>\n  )\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  content\n}) {\n  console.log(content())\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {(\n        content()\n      )}\n    </Modal>\n  )\n}","import fetch from 'isomorphic-fetch'\nimport { BigNumber } from 'ethers'\n\nexport async function getGasPrice() {\n    let gasPrice = BigNumber.from(0)\n\n    try {\n        const [resGasStation] = await Promise.all([\n            getGasStation(),\n        ]);\n        gasPrice = BigNumber.from(resGasStation.toNumber());\n\n        if (gasPrice.toNumber() > 200000000000) {\n            return BigNumber.from(0)\n        }\n    } catch (e) {\n        console.log('Error when fetching gas data:', e.message)\n    }\n    return gasPrice\n}\n\nasync function getGasStation() {\n    let gasPrice = BigNumber.from(0)\n\n    try {\n        const res = await fetch('https://gasstation-mainnet.matic.network')\n        const data = await res.json()\n        gasPrice = BigNumber.from(Math.ceil(data.standard) + 1)\n    } catch (e) {\n        console.log('Error when fetching gas data:', e.message)\n    }\n\n    return gasPrice.mul(BigNumber.from(1e9))\n}\n","export const SUPPORTED_ASSETS = [\n    \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\", // USDC\n    \"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063\", // DAI\n    \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\", // USDT\n    \"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619\", // WETH\n    \"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6\", // WBTC\n    \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\", // WMATIC\n    \"0xd6df932a45c0f255f85145f286ea0b292b21c90b\", // AAVE\n    \"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57\", // LUNA\n]\n","import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\n// import * as ls from 'local-storage'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport OversizedPanel from '../OversizedPanel'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport SVGClose from '../../assets/svg/SVGClose'\nimport SVGDiv from '../../assets/svg/SVGDiv'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { useTradeExactIn } from '../../hooks/trade'\nimport { getExchangeRate } from '../../utils/rate'\n// import { useGasPrice } from '../../contexts/GasPrice'\nimport { TransactionErrorModal } from '../TransactionConfirmationModal'\nimport { useSymphonyContract, useWETHGatewayContract } from '../../hooks'\nimport { ACTION_PLACE_ORDER, useTransactionAdder } from '../../contexts/Transactions'\nimport { amountFormatter, getERC20Contract, getTokenAllowance, getOrderId } from '../../utils'\nimport {\n  // ETH_ADDRESS,\n  WETH_ADDRESSES,\n  SYMPHONY_ADDRESSES,\n  // GENERIC_GAS_LIMIT_ORDER_EXECUTE,\n  ZERO_BYTES32,\n} from '../../constants'\n\nimport './ExchangePage.css'\nimport { getGasPrice } from '../../utils/gas'\nimport { SUPPORTED_ASSETS } from '../../contexts/supportedTokens'\n\n// Use to detach input from output\nlet inputValue\n\nconst INPUT = 0\nconst OUTPUT = 1\nconst RATE = 2\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// Denominated in bips\nconst SLIPPAGE_WARNING = '30' // [30+%\nconst EXECUTION_WARNING = '3' // [10+%\n\nconst RATE_OP_MULT = 'x'\nconst RATE_OP_DIV = '/'\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\nconst DownArrow = styled(WrappedArrowDown)`\n  color: ${({ theme, active }) => (active ? theme.royalGreen : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst WrappedRateIcon = ({ RateIconSVG, clickable, active, icon, ...rest }) => <RateIconSVG {...rest} />\n\nconst RateIcon = styled(WrappedRateIcon)`\n  stroke: ${({ theme, active }) => (active ? theme.royalGreen : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\n// ///\n// Local storage\n// ///\n// const LS_ORDERS = 'orders_'\n\n// function lsKey(key, account, chainId) {\n//   return key + account.toString() + chainId\n// }\n\n// function saveOrder(account, orderData, chainId) {\n//   if (!account) return\n\n//   const key = lsKey(LS_ORDERS, account, chainId)\n//   const prev = ls.get(key)\n\n//   if (prev === null) {\n//     ls.set(key, [orderData])\n//   } else {\n//     if (prev.indexOf(orderData) === -1) {\n//       prev.push(orderData)\n//       ls.set(key, prev)\n//     }\n//   }\n// }\n\n// ///\n// Helpers\n// ///\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\nfunction getInitialSwapState(outputCurrency) {\n  return {\n    independentValue: '', // this is a user input\n    dependentValue: '', // this is a calculated number\n    independentField: INPUT,\n    prevIndependentField: OUTPUT,\n    inputCurrency: 'ETH',\n    outputCurrency: outputCurrency ? outputCurrency : '',\n    rateOp: RATE_OP_MULT,\n    inputRateValue: '',\n    stoplossValue: '',\n  }\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: INPUT,\n        independentValue: '',\n        inputRateValue: '',\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency,\n        stoplossValue: '',\n      }\n    }\n    case 'FLIP_RATE_OP': {\n      const { rateOp, inputRateValue } = state\n\n      const rate = inputRateValue ? ethers.BigNumber.from(ethers.utils.parseUnits(inputRateValue, 18)) : undefined\n      const flipped = rate ? amountFormatter(flipRate(rate), 18, 18, false) : ''\n\n      return {\n        ...state,\n        inputRateValue: flipped,\n        rateOp: rateOp === RATE_OP_DIV ? RATE_OP_MULT : RATE_OP_DIV,\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : '',\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency,\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue, independentField, prevIndependentField, inputRateValue } = state\n\n      return {\n        ...state,\n        independentValue: field !== RATE ? value : independentValue,\n        dependentValue: Number(value) === Number(independentValue) ? dependentValue : '',\n        independentField: field,\n        inputRateValue: field === RATE ? value : inputRateValue,\n        prevIndependentField: independentField === field ? prevIndependentField : independentField,\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload === null ? inputValue : action.payload,\n      }\n    }\n    case 'UPDATE_STOPLOSS': {\n      return {\n        ...state,\n        stoplossValue: action.payload === null ? inputValue : !action.payload ? 0 : action.payload,\n      }\n    }\n    default: {\n      return getInitialSwapState()\n    }\n  }\n}\n\nfunction applyExchangeRateTo(inputValue, exchangeRate, inputDecimals, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      exchangeRate &&\n      (inputDecimals || inputDecimals === 0) &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(exchangeRate)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      } else {\n        return exchangeRate\n          .mul(inputValue)\n          .div(factor)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction exchangeRateDiff(exchangeRateA, exchangeRateB) {\n  try {\n    if (exchangeRateA && exchangeRateB) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n      const deltaRaw = factor.mul(exchangeRateA).div(exchangeRateB)\n\n      if (false && deltaRaw < factor) {\n        return factor.sub(deltaRaw)\n      } else {\n        return deltaRaw.sub(factor)\n      }\n    }\n  } catch {}\n}\n\nfunction flipRate(rate) {\n  try {\n    if (rate) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n      return factor.mul(factor).div(rate)\n    }\n  } catch {}\n}\n\nfunction safeParseUnits(number, units) {\n  try {\n    return ethers.utils.parseUnits(number, units)\n  } catch {\n    const margin = units * 8\n    const decimals = ethers.utils.parseUnits(number, margin)\n    return decimals.div(ethers.BigNumber.from(10).pow(margin - units))\n  }\n}\n\nexport default function ExchangePage({ initialCurrency }) {\n  const { t } = useTranslation()\n  const { account, library, chainId } = useWeb3React()\n\n  let [showConfirm, setShowConfirm] = useState(false)\n  let [orderErrorMessage, setOrderErrorMessage] = useState('')\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialCurrency, getInitialSwapState)\n\n  let {\n    independentValue,\n    independentField,\n    inputCurrency,\n    outputCurrency,\n    rateOp,\n    inputRateValue,\n    stoplossValue,\n  } = swapState\n\n  const symphonyContract = useSymphonyContract()\n  const wethGatewayContract = useWETHGatewayContract()\n  const [inputError, setInputError] = useState()\n\n  const addTransaction = useTransactionAdder()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange address for each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals } = useTokenDetails(inputCurrency)\n  const { symbol: outputSymbol, decimals: outputDecimals } = useTokenDetails(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT || independentField === RATE ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : inputValue\n  const inputValueFormatted =\n    independentField === INPUT ? independentValue : amountFormatter(inputValue, inputDecimals, inputDecimals, false)\n\n  let outputValueFormatted\n  let outputValueParsed\n  let rateRaw\n\n  const bestTradeExactIn = useTradeExactIn(\n    inputCurrency,\n    independentField === INPUT ? independentValue : inputValueFormatted,\n    outputCurrency\n  )\n\n  if (bestTradeExactIn) {\n    inputValue = ethers.BigNumber.from(ethers.utils.parseUnits(bestTradeExactIn.inputAmount.toExact(), inputDecimals))\n  } else if (independentField === INPUT && independentValue) {\n    inputValue = ethers.BigNumber.from(ethers.utils.parseUnits(independentValue, inputDecimals))\n  }\n\n  switch (independentField) {\n    case OUTPUT:\n      outputValueParsed = independentValueParsed\n      outputValueFormatted = independentValue\n      rateRaw = getExchangeRate(\n        inputValueParsed,\n        inputDecimals,\n        outputValueParsed,\n        outputDecimals,\n        rateOp === RATE_OP_DIV\n      )\n      break\n    case RATE:\n      if (!inputRateValue || Number(inputRateValue) === 0) {\n        outputValueParsed = ''\n        outputValueFormatted = ''\n      } else {\n        rateRaw = safeParseUnits(inputRateValue, 18)\n        outputValueParsed = applyExchangeRateTo(\n          inputValueParsed,\n          rateRaw,\n          inputDecimals,\n          outputDecimals,\n          rateOp === RATE_OP_DIV\n        )\n        outputValueFormatted = amountFormatter(\n          outputValueParsed,\n          dependentDecimals,\n          Math.min(4, dependentDecimals),\n          false\n        )\n      }\n      break\n    case INPUT:\n      outputValueParsed = bestTradeExactIn\n        ? ethers.utils.parseUnits(bestTradeExactIn.outputAmount.toExact(), dependentDecimals)\n        : null\n      outputValueFormatted = bestTradeExactIn ? bestTradeExactIn.outputAmount.toSignificant(6) : ''\n      stoplossValue = stoplossValue !== '' ? stoplossValue : outputValueFormatted\n      rateRaw = getExchangeRate(\n        inputValueParsed,\n        inputDecimals,\n        outputValueParsed,\n        outputDecimals,\n        rateOp === RATE_OP_DIV\n      )\n      break\n    default:\n      break\n  }\n\n  // rate info\n  const rateFormatted = independentField === RATE ? inputRateValue : amountFormatter(rateRaw, 18, 4, false)\n  const inverseRateInputSymbol = rateOp === RATE_OP_DIV ? inputSymbol : outputSymbol\n  const inverseRateOutputSymbol = rateOp === RATE_OP_DIV ? outputSymbol : inputSymbol\n  const inverseRate = flipRate(rateRaw)\n\n  // load required gas\n  // const gasPrice = useGasPrice()\n  // const gasLimit = GENERIC_GAS_LIMIT_ORDER_EXECUTE\n  // const requiredGas = gasPrice?.mul(gasLimit)\n\n  // const gasInInputTokens = useTradeExactIn('ETH', amountFormatter(requiredGas, 18, 18), inputCurrency)\n\n  let usedInput = ethers.BigNumber.from(0)\n  // if (inputSymbol === 'ETH') {\n  //   usedInput = requiredGas\n  // } else if (gasInInputTokens) {\n  //   usedInput = ethers.utils.parseUnits(gasInInputTokens.outputAmount.toExact(), inputDecimals)\n  // }\n\n  const realInputValue = usedInput && inputValueParsed?.sub(usedInput)\n  const executionRate =\n    realInputValue &&\n    getExchangeRate(realInputValue, inputDecimals, outputValueParsed, outputDecimals, rateOp === RATE_OP_DIV)\n\n  const limitSlippage = ethers.BigNumber.from(SLIPPAGE_WARNING).mul(\n    ethers.BigNumber.from(10).pow(ethers.BigNumber.from(16))\n  )\n\n  const limitExecution = ethers.BigNumber.from(EXECUTION_WARNING).mul(\n    ethers.BigNumber.from(10).pow(ethers.BigNumber.from(16))\n  )\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n\n  const executionRateDelta = executionRate && exchangeRateDiff(executionRate, rateRaw)\n  const executionRateNegative = executionRate?.lt(ethers.constants.Zero)\n  const executionRateWarning = executionRateNegative || executionRateDelta?.abs()?.gt(limitExecution)\n\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // validate input balance\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = inputValueParsed\n    if (inputBalance && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n    }\n  }, [inputBalance, inputCurrency, t, inputValueParsed])\n\n  // calculate dependent value\n  useEffect(() => {\n    if (independentField === OUTPUT || independentField === RATE) {\n      return () => {\n        dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: null })\n      }\n    }\n  }, [independentField])\n\n  const [inverted, setInverted] = useState(false)\n\n  const marketRate = getExchangeRate(\n    inputValueParsed,\n    inputDecimals,\n    bestTradeExactIn ? ethers.utils.parseUnits(bestTradeExactIn.outputAmount.toExact(), outputDecimals) : null,\n    outputDecimals,\n    rateOp === RATE_OP_DIV\n  )\n\n  const exchangeRate = marketRate\n  const exchangeRateInverted = flipRate(exchangeRate)\n\n  const rateDelta =\n    rateOp === RATE_OP_DIV\n      ? exchangeRateDiff(inverseRate, exchangeRateInverted)\n      : exchangeRateDiff(rateRaw, exchangeRate)\n\n  const highSlippageWarning = rateDelta && rateDelta.lt(ethers.BigNumber.from(0).sub(limitSlippage))\n  const rateDeltaFormatted = amountFormatter(rateDelta, 16, 2, true)\n\n  const isValid = outputValueParsed && !inputError && !independentError\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  async function onPlace() {\n    let fromCurrency, toCurrency, inputAmount, minimumReturn, stoplossAmount\n    ReactGA.event({\n      category: 'place',\n      action: 'place',\n    })\n\n    inputAmount = inputValueParsed\n    minimumReturn = outputValueParsed\n    stoplossAmount = stoplossValue\n      ? ethers.BigNumber.from(ethers.utils.parseUnits(stoplossValue, outputDecimals))\n      : ethers.BigNumber.from(0)\n\n    if (swapType === ETH_TO_TOKEN) {\n      fromCurrency = WETH_ADDRESSES[chainId]\n      toCurrency = outputCurrency\n    } else if (swapType === TOKEN_TO_ETH) {\n      fromCurrency = inputCurrency\n      toCurrency = WETH_ADDRESSES[chainId]\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      fromCurrency = inputCurrency\n      toCurrency = outputCurrency\n    }\n\n    if (!SUPPORTED_ASSETS.includes(toCurrency.toLowerCase())) {\n      setOrderErrorMessage(\n        'Output asset is not supported !! You can reach in Discord if you think this should be added.'\n      )\n      setShowConfirm(true)\n      return\n    }\n\n    if (fromCurrency.toLowerCase() === toCurrency.toLowerCase()) {\n      setOrderErrorMessage(\"Input and output asset shouldn't be same !!\")\n      setShowConfirm(true)\n      return\n    }\n\n    try {\n      let order = {\n        recipient: account.toLowerCase(),\n        inputToken: fromCurrency.toLowerCase(),\n        outputToken: toCurrency.toLowerCase(),\n        inputAmount: inputAmount,\n        minReturnAmount: minimumReturn,\n        stoplossAmount: stoplossAmount,\n      }\n\n      const orderId = getOrderId(order)\n      const orderHash = await symphonyContract.orderHash(orderId)\n\n      if (orderHash === ZERO_BYTES32) {\n        let res\n        let gasLimit = ethers.BigNumber.from(50000)\n        const gasPrice = await getGasPrice()\n\n        if (swapType === ETH_TO_TOKEN) {\n          gasLimit = gasLimit.add(\n            await wethGatewayContract.estimateGas.createMaticOrder(\n              account.toLowerCase(),\n              toCurrency.toLowerCase(),\n              minimumReturn,\n              stoplossAmount,\n              {\n                value: inputAmount,\n                gasPrice,\n              }\n            )\n          )\n\n          res = await wethGatewayContract.createMaticOrder(\n            account.toLowerCase(),\n            toCurrency.toLowerCase(),\n            minimumReturn,\n            stoplossAmount,\n            {\n              value: inputAmount,\n              gasLimit,\n              gasPrice,\n            }\n          )\n        } else {\n          const allowance = await getTokenAllowance(\n            account.toLowerCase(),\n            fromCurrency,\n            SYMPHONY_ADDRESSES[chainId],\n            library\n          )\n\n          if (allowance.lt(inputAmount)) {\n            const tokenContract = await getERC20Contract(fromCurrency, library, account)\n\n            gasLimit = gasLimit.add(\n              await tokenContract.estimateGas.approve(SYMPHONY_ADDRESSES[chainId], ethers.constants.MaxUint256, {\n                gasPrice,\n              })\n            )\n\n            const tx = await tokenContract.approve(SYMPHONY_ADDRESSES[chainId], ethers.constants.MaxUint256, {\n              gasLimit,\n              gasPrice,\n            })\n            await tx.wait()\n          }\n\n          gasLimit = gasLimit.add(\n            await symphonyContract.estimateGas.createOrder(\n              account.toLowerCase(),\n              fromCurrency.toLowerCase(),\n              toCurrency.toLowerCase(),\n              inputAmount,\n              minimumReturn,\n              stoplossAmount,\n              {\n                gasPrice,\n              }\n            )\n          )\n\n          res = await symphonyContract.createOrder(\n            account.toLowerCase(),\n            fromCurrency.toLowerCase(),\n            toCurrency.toLowerCase(),\n            inputAmount,\n            minimumReturn,\n            stoplossAmount,\n            {\n              gasLimit,\n              gasPrice,\n            }\n          )\n        }\n\n        if (res.hash) {\n          order.orderId = orderId\n          // saveOrder(account, order, chainId)\n          addTransaction(res, { action: ACTION_PLACE_ORDER, order: order })\n        }\n      } else {\n        setOrderErrorMessage('There is already an order with same order id')\n        setShowConfirm(true)\n      }\n    } catch (e) {\n      setOrderErrorMessage(e.data ? e.data.message : e.message)\n      setShowConfirm(true)\n    }\n  }\n\n  const [customSlippageError] = useState('')\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        allBalances={allBalances}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT },\n              })\n            }\n          }\n        }}\n        onCurrencySelected={(inputCurrency) => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\n        }}\n        onValueChange={(inputValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n\n      <OversizedPanel>\n        <DownArrowBackground>\n          <RateIcon\n            RateIconSVG={rateOp === RATE_OP_MULT ? SVGClose : SVGDiv}\n            icon={rateOp}\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_RATE_OP' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n\n      <CurrencyInputPanel\n        title={t('rate')}\n        showCurrencySelector={false}\n        extraText={\n          inverseRateInputSymbol && inverseRate && inverseRateOutputSymbol\n            ? `1 ${inverseRateInputSymbol} = ${amountFormatter(inverseRate, 18, 4, false)} ${inverseRateOutputSymbol}`\n            : '-'\n        }\n        extraTextClickHander={() => {\n          dispatchSwapState({ type: 'FLIP_RATE_OP' })\n        }}\n        value={rateFormatted || ''}\n        onValueChange={(rateValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: rateValue, field: RATE } })\n        }}\n      />\n\n      <OversizedPanel>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted((inverted) => !inverted)\n          }}\n        >\n          {/* <ExchangeRate>\n            Execution rate at {gasPrice ? amountFormatter(gasPrice, 9, 0, false) : '...'} GWEI\n          </ExchangeRate> */}\n          {executionRateNegative ? (\n            'Never executes'\n          ) : rateOp !== RATE_OP_DIV ? (\n            <span>\n              {executionRate\n                ? `1 ${inputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : rateOp !== RATE_OP_DIV ? (\n            <span>\n              {executionRate\n                ? `1 ${inputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {executionRate\n                ? `1 ${outputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n\n      <CurrencyInputPanel\n        title={t('output')}\n        allBalances={allBalances}\n        description={estimatedText}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={(outputCurrency) => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValueFormatted, field: INPUT } })\n        }}\n        onValueChange={(outputValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n\n      <div className=\"stop-loss\">\n        <div className=\"sc-cQFLBn gigTmf\"></div>\n        <div className=\"sc-gojNiO OVrhN\"></div>\n      </div>\n\n      <CurrencyInputPanel\n        title={t('Stop Loss')}\n        showCurrencySelector={false}\n        onValueChange={(outputValue) => {\n          dispatchSwapState({ type: 'UPDATE_STOPLOSS', payload: outputValue })\n        }}\n        value={stoplossValue}\n        disableUnlock\n      >\n        {' '}\n      </CurrencyInputPanel>\n\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted((inverted) => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n\n      <Flex>\n        <Button\n          disabled={!account || !isValid || customSlippageError === 'invalid'}\n          onClick={onPlace}\n          warning={highSlippageWarning || executionRateWarning || customSlippageError === 'warning'}\n        >\n          {customSlippageError === 'warning' ? t('placeAnyway') : t('place')}\n        </Button>\n      </Flex>\n      {rateDeltaFormatted && (\n        <div className=\"market-delta-info\">\n          {rateDeltaFormatted.startsWith('-')\n            ? t('placeBelow', { rateDelta: rateDeltaFormatted })\n            : t('placeAbove', { rateDelta: rateDeltaFormatted })}\n        </div>\n      )}\n      {/* {highSlippageWarning && (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          {t('highSlippageWarning')}\n        </div>\n      )}\n      {executionRateWarning && (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          Order too small, extreme execution rate\n        </div>\n      )} */}\n\n      {orderErrorMessage ? (\n        <TransactionErrorModal\n          isOpen={showConfirm}\n          onDismiss={() => {\n            setOrderErrorMessage('')\n            setShowConfirm(false)\n          }}\n          message={orderErrorMessage}\n        />\n      ) : null}\n    </>\n  )\n}\n","import React from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\n// import Tooltip from '@reach/tooltip'\nimport { getEtherscanLink } from '../../utils'\nimport { CurrencySelect, Aligner, StyledTokenName } from '../CurrencyInputPanel'\nimport TokenLogo from '../TokenLogo'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter } from '../../utils'\nimport { useSymphonyContract } from '../../hooks'\n// import { useTradeExactIn } from '../../hooks/trade'\nimport { useTokenDetails } from '../../contexts/Tokens'\n// import { useGasPrice } from '../../contexts/GasPrice'\nimport {\n  ACTION_PLACE_ORDER,\n  ACTION_CANCEL_ORDER,\n  useTransactionAdder,\n  useOrderPendingState\n} from '../../contexts/Transactions'\nimport { ETH_ADDRESS } from '../../constants'\nimport { getExchangeRate } from '../../utils/rate'\n\nimport './OrderCard.css'\nimport { getGasPrice } from '../../utils/gas'\n\nconst CancelButton = styled.div`\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.textColor)};\n  padding: 0px 6px 0px 6px;\n  font-size: 0.85rem;\n`\n\nconst Order = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-radius: 1.25rem;\n  z-index: 1;\n  padding: 20px;\n  margin-bottom: 40px;\n  border: ${({ theme }) => `1px solid ${theme.mercuryGray}`};\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`\nconst WrappedArrowRight = ({ clickable, active, ...rest }) => <ArrowDown {...rest} transform=\"rotate(-90)\" />\n\nconst RightArrow = styled(WrappedArrowRight)`\n  color: ${({ theme }) => theme.royalGreen};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n`\n\nexport function OrderCard(props) {\n  const { t } = useTranslation()\n  const { chainId } = useWeb3React()\n\n  const order = props.order\n  const inputAssetDetails = props.inputAssetDetails[0]\n\n  const inputToken = order.inputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.inputToken)\n  const outputToken =\n    order.outputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.outputToken)\n\n  const { symbol: fromSymbol, decimals: fromDecimals } = useTokenDetails(inputToken)\n  const { symbol: toSymbol, decimals: toDecimals } = useTokenDetails(outputToken)\n  const { state, last } = useOrderPendingState(order)\n\n  const canceling = state === ACTION_CANCEL_ORDER\n  const pending = state === ACTION_PLACE_ORDER\n\n  const symphonyContract = useSymphonyContract()\n  const addTransaction = useTransactionAdder()\n\n  async function onCancel(order, pending) {\n    const { orderId, orderEncodedData } = order\n    const gasPrice = await getGasPrice();\n    let gasLimit = await symphonyContract.estimateGas.cancelOrder(\n      orderId,\n      orderEncodedData,\n      {\n        gasPrice\n      }\n    );\n    gasLimit = gasLimit.add(ethers.BigNumber.from(50000))\n\n    symphonyContract\n      .cancelOrder(\n        orderId,\n        orderEncodedData,\n        {\n          gasLimit,\n          gasPrice,\n        }\n      )\n      .then(response => {\n        addTransaction(response, { action: ACTION_CANCEL_ORDER, order: order })\n      });\n  }\n\n  const inputAmount = ethers.BigNumber.from(\n    order.inputAmount !== '0' || !order.creationAmount ? order.inputAmount : order.creationAmount\n  )\n  const minReturnAmount = ethers.BigNumber.from(order.minReturnAmount)\n  const stoplossAmount = ethers.BigNumber.from(order.stoplossAmount)\n\n  const currentOrderValue = Number(inputAssetDetails.totalFunds) > 0 ?\n    ethers.BigNumber.from(order.shares)\n      .mul(ethers.BigNumber.from(inputAssetDetails.totalFunds))\n      .div(ethers.BigNumber.from(inputAssetDetails.totalShares))\n    : ethers.BigNumber.from(\"0\");\n\n  const yieldEarned = currentOrderValue.gt(0) ? currentOrderValue.sub(inputAmount) : ethers.BigNumber.from(\"0\");\n\n  const explorerLink = last ? getEtherscanLink(chainId, last.response.hash, 'transaction') : undefined\n\n  const rateFromTo = getExchangeRate(inputAmount, fromDecimals, minReturnAmount, toDecimals, false)\n  const rateToFrom = getExchangeRate(inputAmount, fromDecimals, minReturnAmount, toDecimals, true)\n\n  // const gasPrice = useGasPrice()\n  // const gasLimit = GENERIC_GAS_LIMIT_ORDER_EXECUTE\n  // const requiredGas = gasPrice?.mul(gasLimit)\n\n  // const gasInInputTokens = useTradeExactIn('ETH', amountFormatter(requiredGas, 18, 18), inputToken)\n\n  // let tooltipText = ''\n  // let executionRateText = ''\n\n  // try {\n  //   const [virtualRateFromTo, virtualRateToFrom] = useMemo(() => {\n  //     if (!gasPrice) return [undefined, undefined]\n\n  //     let usedInput\n\n  //     try {\n  //       if (inputToken === 'ETH') {\n  //         usedInput = requiredGas\n  //       } else if (!gasInInputTokens || !requiredGas) {\n  //         return [undefined, undefined]\n  //       } else {\n  //         usedInput = ethers.utils.parseUnits(gasInInputTokens.outputAmount.toExact(), fromDecimals)\n  //       }\n\n  //       return [\n  //         getExchangeRate(inputAmount.sub(usedInput), fromDecimals, minReturnAmount, toDecimals, false),\n  //         getExchangeRate(inputAmount.sub(usedInput), fromDecimals, minReturnAmount, toDecimals, true)\n  //       ]\n  //     } catch {\n  //       return [undefined, undefined]\n  //     }\n  //   }, [fromDecimals, inputAmount, minReturnAmount, requiredGas, toDecimals, inputToken, gasInInputTokens, gasPrice])\n\n  //   if (virtualRateFromTo?.gt(ethers.constants.Zero)) {\n  //     executionRateText = `Execution rate: ${virtualRateFromTo ? amountFormatter(virtualRateFromTo, 18, 3) : '...'\n  //       } ${fromSymbol}/${toSymbol} -\n  //       ${virtualRateToFrom ? amountFormatter(virtualRateToFrom, 18, 3) : '...'} ${toSymbol}/${fromSymbol}* `\n  //   } else if (virtualRateFromTo) {\n  //     executionRateText = 'Execution rate: never executes'\n  //   } else {\n  //     executionRateText = ''\n  //   }\n\n  //   tooltipText = `Required rate to execute order assuming gas price of ${gasPrice ? amountFormatter(gasPrice, 9, 2) : '...'\n  //     } GWEI`\n  // } catch (e) {\n  //   console.warn('Error computing virtual rate', e)\n  // }\n  return (\n    <Order className={`order ${order.status}`}>\n      <div className=\"tokens\">\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={inputToken} logoURI=\"\" />}\n            {<StyledTokenName>{fromSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Aligner>\n          <RightArrow transform=\"rotate(-90)\" />\n        </Aligner>\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={outputToken} logoURI=\"\" />}\n            {<StyledTokenName>{toSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Spacer />\n        <CurrencySelect\n          selected={true}\n          disabled={canceling}\n          onClick={() => onCancel(order, pending)}\n        >\n          <CancelButton>{\n            canceling &&\n              last &&\n              last.response.CUSTOM_DATA.order.orderId === order.orderId\n              ? 'Cancelling ...'\n              : t('cancel')}\n          </CancelButton>\n        </CurrencySelect>\n      </div>{' '}\n      <p>\n        {`Sell: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n      </p>\n      {yieldEarned.gt(0) ?\n        <p>\n          {`Yield Earned: ${amountFormatter(yieldEarned, fromDecimals, 6)}`} {fromSymbol}\n        </p>\n        : null}\n      <p>\n        {`Receive: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n      </p>\n      <p>\n        {`Stoploss: ${amountFormatter(stoplossAmount, toDecimals, 6)}`} {toSymbol}\n      </p>\n      <p>\n        {`Rate: ${amountFormatter(rateFromTo, 18, 6)}`} {fromSymbol}/{toSymbol} - {amountFormatter(rateToFrom, 18, 6)}{' '}\n        {toSymbol}/{fromSymbol}\n      </p>\n      {/* <Tooltip\n        label={tooltipText}\n        style={{\n          background: 'hsla(0, 0%, 0%, 0.75)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '24px',\n          padding: '0.5em 1em',\n          marginTop: '-64px'\n        }}\n      >\n        <p>{executionRateText}</p>\n      </Tooltip> */}\n      <p>\n        {last &&\n          last.response.CUSTOM_DATA.order.orderId === order.orderId\n          && (\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n              Pending transaction...\n            </a>\n          )}\n      </p>\n    </Order>\n  )\n}\n","import React from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { getEtherscanLink } from '../../utils'\nimport { CurrencySelect, Aligner, StyledTokenName } from '../CurrencyInputPanel'\nimport TokenLogo from '../TokenLogo'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter } from '../../utils'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { ETH_ADDRESS } from '../../constants'\n\nimport './OrderCard.css'\n\nconst Order = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-radius: 1.25rem;\n  z-index: 1;\n  padding: 20px;\n  margin-bottom: 40px;\n  border: ${({ theme }) => `1px solid ${theme.mercuryGray}`};\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`\nconst WrappedArrowRight = ({ clickable, active, ...rest }) => <ArrowDown {...rest} transform=\"rotate(-90)\" />\n\nconst RightArrow = styled(WrappedArrowRight)`\n  color: ${({ theme }) => theme.royalGreen};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n`\n\nexport function PastOrderCard(props) {\n  const { chainId } = useWeb3React()\n\n  const order = props.data\n\n  const inputToken = order.inputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.inputToken)\n  const outputToken =\n    order.outputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.outputToken)\n\n  const { symbol: fromSymbol, decimals: fromDecimals } = useTokenDetails(inputToken)\n  const { symbol: toSymbol, decimals: toDecimals } = useTokenDetails(outputToken)\n\n  const cancelled = order.status === 'CANCELLED'\n  const executed = order.status === 'EXECUTED'\n  // const bought = ethers.BigNumber.from(executed ? order.bought : 0)\n  const inputAmount = ethers.BigNumber.from(order.inputAmount)\n  const minReturnAmount = ethers.BigNumber.from(order.minReturnAmount)\n\n  const explorerLink = getEtherscanLink(\n    chainId,\n    cancelled ? order.cancelledTxHash : order.executedTxHash,\n    'transaction'\n  )\n\n  return (\n    <Order className={`order ${order.status}`}>\n      <div className=\"tokens\">\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={inputToken} logoURI=\"\" />}\n            {<StyledTokenName>{fromSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Aligner>\n          <RightArrow transform=\"rotate(-90)\" />\n        </Aligner>\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={outputToken} logoURI=\"\" />}\n            {<StyledTokenName>{toSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Spacer />\n      </div>\n      {executed && (\n        <>\n          <p>\n            {`Sold: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n          </p>\n          {/* <p>\n            {`Expected: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n          </p>\n          <p>\n            {`Received: ${amountFormatter(bought, toDecimals, 6)}`} {toSymbol}\n          </p> */}\n          <p>{`Date: ${new Date(order.updatedAt * 1000).toLocaleDateString()}`}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n            Executed\n          </a>\n        </>\n      )}\n      {cancelled && (\n        <>\n          <p>\n            {`Sell: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n          </p>\n          <p>\n            {`Expected: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n          </p>\n          <p>{`Date: ${new Date(order.updatedAt * 1000).toLocaleDateString()}`}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n            Cancelled\n          </a>\n        </>\n      )}\n    </Order>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { PastOrderCard } from '../PastOrderCard'\nimport { isAddress } from '../../utils'\nimport { ORDER_GRAPH } from '../../constants'\n\nexport function OrdersHistory() {\n  const { account, chainId } = useWeb3React()\n  const orders = usePastOrders(account, chainId)\n  return orders.length > 0 ? (\n    <>\n      <p style={{ marginTop: '40px', fontSize: '24px' }}>History</p>\n      {orders.map(order => (\n        <PastOrderCard key={order.id} data={order} />\n      ))}\n    </>\n  ) : null\n}\n\nfunction usePastOrders(account, chainId) {\n  const [state, setState] = useState([])\n\n  useEffect(() => {\n    if (account && isAddress(account)) {\n      fetchUserPastOrders(account, chainId).then(orders => {\n        setState(orders)\n      })\n    }\n  }, [account, chainId])\n\n  return state\n}\n\nasync function fetchUserPastOrders(account, chainId) {\n  const query = `\n  query GetOrdersByOwner($owner: String) {\n    orders(\n      where:{recipient:$owner,status_not:ACTIVE},\n      orderBy: updatedAt, \n      orderDirection: desc\n    ) {\n      id\n      inputToken\n      outputToken\n      inputAmount\n      minReturnAmount\n      stoplossAmount\n      status\n      updatedAt\n      executedTxHash\n      cancelledTxHash\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query, variables: { owner: account.toLowerCase() } })\n    })\n\n    const { data } = await res.json()\n    return data.orders\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return []\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\nimport * as ls from 'local-storage'\nimport styled from 'styled-components'\n\nimport { isAddress } from '../../utils'\nimport { OrderCard } from '../OrderCard'\nimport Circle from '../../assets/images/circle.svg'\nimport { useSymphonyContract } from '../../hooks'\nimport { OrdersHistory } from '../OrdersHistory'\nimport { Spinner } from '../../theme'\nimport { useAllPendingOrders, useAllPendingCancelOrders } from '../../contexts/Transactions'\nimport { ORDER_GRAPH } from '../../constants'\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\n// ///\n// Local storage\n// ///\nconst LS_ORDERS = 'orders_'\n\nfunction lsKey(key, account, chainId) {\n  return key + account.toString() + chainId\n}\n\nfunction getSavedOrders(account, chainId) {\n  if (!account) return []\n\n  console.log('Loading saved orders from storage location', account, lsKey(LS_ORDERS, account, chainId))\n  const raw = ls.get(lsKey(LS_ORDERS, account, chainId))\n  return raw == null ? [] : raw\n}\n\nasync function fetchUserOrders(account, chainId) {\n  const query = `\n  query GetOrdersByOwner($owner: String) {\n    orders(\n      where:{recipient:$owner,status:ACTIVE},\n      orderBy: createdAtBlock, \n      orderDirection: desc\n    ) {\n      id\n      orderId\n      recipient {\n        id\n      }\n      inputToken\n      outputToken\n      inputAmount\n      minReturnAmount\n      stoplossAmount\n      inputTokenSymbol\n      outputTokenSymbol\n      decodedInputAmount\n      decodedMinReturnAmount\n      decodedStoplossAmount\n      orderEncodedData\n      shares\n      createdAtBlock\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query, variables: { owner: account.toLowerCase() } }),\n    })\n\n    const { data } = await res.json()\n\n    return {\n      allOrders: [],\n      openOrders: data.orders,\n    }\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return {\n      allOrders: [],\n      openOrders: [],\n    }\n  }\n}\n\nasync function getAllAssetsDetail(chainId) {\n  const query = `\n  query {\n    assetDetails {\n      asset\n      totalFunds\n      totalShares\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query }),\n    })\n\n    const { data } = await res.json()\n\n    return data.assetDetails\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return []\n  }\n}\n\nfunction useGraphOrders(account, chainId, deps = []) {\n  const [state, setState] = useState({ openOrders: [], allOrders: [], assetDetails: [] })\n\n  useEffect(() => {\n    console.log(`Requesting load orders from the graph`)\n    if (account && isAddress(account)) {\n      setTimeout(() => {\n        fetchUserOrders(account, chainId).then(async (orders) => {\n          console.log(`Fetched ${orders.allOrders.length} ${orders.openOrders.length} orders from the graph`)\n          const allAssetDetails = await getAllAssetsDetail(chainId)\n          setState({\n            allAssetDetails,\n            allOrders: orders.allOrders,\n            openOrders: orders.openOrders,\n          })\n        })\n      }, 4000)\n    }\n    // eslint-disable-next-line\n  }, [...deps, account, chainId])\n\n  return state\n}\n\nfunction useSavedOrders(account, chainId, symphonyContract, deps = []) {\n  const [state, setState] = useState({ allOrders: [], openOrders: [] })\n\n  useEffect(() => {\n    console.log(`Requesting load orders from storage`)\n    if (isAddress(account)) {\n      const allOrders = getSavedOrders(account, chainId)\n      // console.log(`Loaded ${allOrders.length} orders from local storage`)\n      if (allOrders.length > 0) {\n        setState({\n          allOrders: allOrders,\n          openOrders: allOrders.filter((o) => o.inputAmount !== '0'),\n        })\n      }\n    }\n    // eslint-disable-next-line\n  }, [...deps, account, chainId, symphonyContract])\n\n  return state\n}\n\nexport default function Orders() {\n  const { t } = useTranslation()\n  const { account, chainId } = useWeb3React()\n  const symphonyContract = useSymphonyContract()\n  const [orders, setOrders] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(!account)\n  }, [account])\n\n  const pendingOrders = useAllPendingOrders()\n  const pendingCancelOrders = useAllPendingCancelOrders()\n\n  // Get locally saved orders and the graph orders\n  const local = useSavedOrders(account, chainId, symphonyContract, [pendingOrders.length, pendingCancelOrders.length])\n\n  // TODO: Remove deps if necessary\n  const graph = useGraphOrders(account, chainId, [pendingOrders.length, pendingCancelOrders.length])\n\n  // Define orders to show as openOrders + pending orders\n  useEffect(() => {\n    // Aggregate graph and local orders, local orders have priority\n    // const allOrders = local.allOrders.concat(\n    //   graph.allOrders.filter((o) => !local.allOrders.find((c) => c.orderId === o.orderId))\n    // )\n    // const openOrders = local.openOrders.concat(\n    //   graph.openOrders.filter((o) => !local.allOrders.find((c) => c.orderId === o.orderId))\n    // )\n\n    // setOrders(openOrders.concat(allOrders.filter((o) => pendingOrders.find((p) => p.orderId === o.orderId))))\n    setOrders(graph.openOrders)\n    // eslint-disable-next-line\n  }, [\n    local.allOrders.length,\n    local.openOrders.length,\n    // graph.allOrders.length,\n    graph.openOrders.length,\n    pendingOrders.length,\n  ])\n\n  return (\n    <>\n      {account && (\n        <>\n          <>\n            <p className=\"orders-title\">{`${t('Orders')} ${orders.length > 0 ? `(${orders.length})` : ''}`}</p>\n            {loading && (\n              <>\n                <SpinnerWrapper src={Circle} alt=\"loader\" /> Loading ...\n                <br />\n                <br />\n              </>\n            )}\n            {orders.length === 0 && !loading && <p>{t('noOpenOrders')}</p>}\n            {\n              <div>\n                {orders.map((order) => (\n                  <OrderCard\n                    key={order.orderId}\n                    order={order}\n                    inputAssetDetails={graph.allAssetDetails.filter(\n                      (assetDetails) => assetDetails.asset.toLowerCase() === order.inputToken.toLowerCase()\n                    )}\n                  />\n                ))}\n              </div>\n            }\n          </>\n          <OrdersHistory />\n        </>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport ExchangePage from '../../components/ExchangePage'\nimport Orders from '../../components/Orders'\n\nexport default function Swap({ initialCurrency }) {\n  return <>\n    <ExchangePage initialCurrency={initialCurrency} />\n    <Orders />\n  </>\n}\n"],"sourceRoot":""}