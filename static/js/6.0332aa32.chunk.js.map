{"version":3,"sources":["webpack:///./src/assets/images/dropdown.svg?d0dc","components/TokenLogo/index.js","components/CurrencyInputPanel/index.js","components/OversizedPanel/index.js","assets/svg/SVGArrowDown.js","assets/svg/SVGClose.js","assets/svg/SVGDiv.js","state/multicall/hooks.js","hooks/trade.js","utils/rate.js","components/Row/index.jsx","components/Column/index.jsx","components/TransactionConfirmationModal/index.js","utils/gas.js","components/ExchangePage/index.jsx","contexts/supportedTokens.js","components/OrderCard/index.js","components/PastOrderCard/index.jsx","components/OrdersHistory/index.js","components/Orders/index.jsx","pages/Swap/index.js"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","width","height","viewBox","fill","ref","d","stroke","ForwardRef","forwardRef","BAD_IMAGES","Image","styled","img","size","Emoji","span","TokenLogo","address","logoURI","rest","useState","error","setError","path","style","lineHeight","role","aria-label","undefined","isAddress","TOKEN_ICON_API","alt","src","onError","GAS_MARGIN","ethers","BigNumber","from","SubCurrencySelect","button","theme","flexRowNoWrap","zumthorBlue","royalGreen","InputRow","div","Input","BorderlessInput","salmonRed","inputBackground","StyledBorderlessInput","concreteGray","CurrencySelect","selected","textColor","mercuryGray","darken","Aligner","StyledDropDown","DropDown","InputPanel","flexColumnNoWrap","transparentize","shadowColor","Container","malibuGreen","LabelRow","doveGray","LabelContainer","ErrorSpan","TokenModal","ModalHeader","CloseColor","Close","CloseIcon","SearchContainer","TokenModalInfo","TokenList","TokenModalRow","doveGrey","tokenRowHover","mediaWidth","upToMedium","TokenRowLeft","TokenSymbolGroup","TokenFullName","chaliceGray","TokenRowBalance","TokenRowUsd","TokenRowRight","StyledTokenName","SpinnerWrapper","Spinner","CurrencyInputPanel","onValueChange","allBalances","renderInput","onCurrencySelected","description","extraText","extraTextClickHander","errorMessage","disableUnlock","disableTokenSelect","selectedTokenAddress","showUnlock","value","showCurrencySelector","orderValue","t","useTranslation","modalIsOpen","setModalIsOpen","tokenContract","useTokenContract","selectedTokenExchangeAddress","useTokenDetails","exchangeAddress","pendingApproval","usePendingApproval","addTransaction","useTransactionAdder","allTokens","useAllTokenDetails","data-tip","onClick","label","background","color","border","borderRadius","padding","marginTop","type","min","placeholder","step","onChange","e","onKeyPress","which","keyCode","preventDefault","stopPropagation","a","estimate","approve","constants","MaxUint256","estimatedGas","gasLimit","calculateGasMargin","then","response","approval","symbol","paddingTop","fontSize","CurrencySelectModal","isOpen","onDismiss","onTokenSelect","searchQuery","setSearchQuery","name","ethPrice","useUSDPrice","_usdAmounts","map","k","ethRate","isNaN","balance","USDRate","times","toString","pow","decimals","usdAmounts","reduce","accumulator","currentValue","tokenList","useMemo","filter","sort","b","aSymbol","toLowerCase","bSymbol","aBalance","bBalance","gt","usdBalance","formatEthBalance","formatTokenBalance","filteredTokenList","tokenEntry","tokenEntryKey","match","RegExp","escapeStringRegex","some","m","inputRef","useRef","clearInputAndDismiss","Modal","minHeight","initialFocusRef","isMobile","SearchIcon","event","input","checksummedInput","_onTokenSelect","id","Circle","lt","formatToUsd","Panel","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","SVGArrowDown","SVGDiv","version","x1","y1","x2","y2","strokeWidth","SVGClose","isMethodArg","x","INVALID_RESULT","valid","blockNumber","data","INVALID_CALL_STATE","result","loading","syncing","LOADING_CALL_STATE","useMultipleContractSingleData","addresses","contractInterface","methodName","callInputs","options","fragment","getFunction","callData","Array","isArray","every","y","isValidMethodArgs","encodeFunctionData","results","calls","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","res","c","Boolean","toCallKey","JSON","stringify","console","log","message","useEffect","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","useCallsData","latestBlockNumber","useBlockNumber","callResult","success","decodeFunctionResult","debug","toCallState","PairState","ETHER","PAIR_INTERFACE","Interface","PAIR_ABI","useAllCommonPairs","currencyA","currencyB","allPairs","useV2Pairs","tokenA","tokenB","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","otherBase","t0","t1","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","equals","useAllCurrencyCombinations","values","memo","curr","liquidityToken","currencies","tokens","wrapped","FACTORY_ADDRESS","computePairAddress","factoryAddress","reserves","_reserve0","_reserve1","sortsBefore","token0","token1","Pair","CurrencyAmount","fromRawAmount","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","inputAmount","currency","outputAmount","Error","equalTo","executionPrice","lessThan","asFraction","multiply","add","ONE_HUNDRED_PERCENT","tryParseAmount","typedValueParsed","parseUnits","JSBI","BigInt","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","mul","Row","Box","align","justify","RowBetween","gap","Column","AutoColumn","Wrapper","Section","BottomSection","bg2","Text","p","TransactionErrorModal","maxHeight","fontWeight","textAlign","Button","getGasPrice","provider","gasPrice","getBlockMeanGas","getGasTracker","fetch","json","Math","ceil","standardgaspricegwei","Promise","resolve","reject","getBlockWithTransactions","transactions","txLength","SUPPORTED_ASSETS","DownArrowBackground","DownArrow","clickable","active","RateIcon","RateIconSVG","icon","ExchangeRateWrapper","ExchangeRate","Flex","getInitialSwapState","outputCurrency","independentValue","dependentValue","independentField","prevIndependentField","inputCurrency","rateOp","inputRateValue","stoplossValue","swapStateReducer","action","rate","utils","flipped","amountFormatter","flipRate","payload","field","newInputCurrency","newOutputCurrency","Number","exchangeRateDiff","exchangeRateA","exchangeRateB","sub","ExchangePage","outputValueFormatted","outputValueParsed","rateRaw","initialCurrency","useWeb3React","account","library","showConfirm","setShowConfirm","orderErrorMessage","setOrderErrorMessage","useReducer","swapState","dispatchSwapState","symphonyContract","useSymphonyContract","wethGatewayContract","useWETHGatewayContract","wethContract","useWETHContract","inputError","setInputError","swapType","getSwapType","inputSymbol","outputSymbol","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","isInteger","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","inputValueParsed","inputValueFormatted","bestTradeExactIn","currencyAddressIn","currencyAmountIn","currencyAddressOut","maxHops","currencyIn","currencyOutDetail","currencyOut","Token","currencyInputAmount","allowedPairs","Trade","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","useTradeExactIn","toExact","number","units","margin","safeParseUnits","exchangeRate","applyExchangeRateTo","toSignificant","rateFormatted","inverseRateInputSymbol","inverseRateOutputSymbol","inverseRate","usedInput","realInputValue","executionRate","limitSlippage","limitExecution","independentError","setIndependentError","executionRateDelta","executionRateNegative","Zero","executionRateWarning","abs","parsedValue","lte","gte","setShowUnlock","inputValueCalculation","showApprove","setShowApprove","isApproving","setIsApproving","setOrderValue","minValueWarning","setMinValueWarning","orderMinValue","process","getTokenAllowance","SYMPHONY_ADDRESSES","allowance","getTokenValueInUsd","WETH_ADDRESSES","getAddress","inputValueUsd","fetchData","inverted","setInverted","exchangeRateInverted","rateDelta","highSlippageWarning","rateDeltaFormatted","isValid","estimatedText","formatBalance","isPlacing","setIsPlacing","ReactGA","category","minimumReturn","stoplossAmount","fromCurrency","toCurrency","String","estimateGas","withdraw","includes","order","recipient","inputToken","outputToken","minReturnAmount","orderId","getOrderId","orderHash","ZERO_BYTES32","createMaticOrder","getERC20Contract","tx","wait","createOrder","hash","ACTION_PLACE_ORDER","customSlippageError","useFetchAllBalances","valueToSet","parseEther","toFixed","selectedTokens","rateValue","className","disabled","warning","startsWith","marginLeft","InfoIcon","CancelButton","Order","Spacer","RightArrow","transform","OrderCard","ETH_ADDRESS","fromSymbol","fromDecimals","toSymbol","toDecimals","useOrderPendingState","last","canceling","ACTION_CANCEL_ORDER","pending","orderEncodedData","cancelOrder","creationAmount","explorerLink","getEtherscanLink","rateFromTo","rateToFrom","yieldEarned","setYieldEarned","checkYield","getTotalFunds","totalFunds","totalAssetShares","totalShares","currentOrderValue","shares","status","onCancel","CUSTOM_DATA","cursor","textDecoration","rel","href","PastOrderCard","cancelled","executed","cancelledTxHash","executedTxHash","Date","updatedAt","toLocaleDateString","OrdersHistory","orders","setState","fetchUserPastOrders","usePastOrders","ORDER_GRAPH","method","headers","body","query","variables","owner","warn","fetchUserOrders","allOrders","openOrders","Orders","setOrders","setLoading","pendingOrders","useAllPendingOrders","pendingCancelOrders","useAllPendingCancelOrders","graph","deps","assetDetails","setTimeout","useGraphOrders","Swap"],"mappings":"kQAAIA,E,sMAEAC,EAAY,CAAC,SAAU,SAE3B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,I,IAAI,EAAc,SAAqBoB,GACrC,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQZ,EAAyBS,EAAMxB,GAE3C,OAAoB,IAAM4B,cAAc,MAAO3B,EAAS,CACtD4B,MAAO,GACPC,OAAQ,EACRC,QAAS,WACTC,KAAM,OACNC,IAAKR,GACJE,GAAQD,EAAqB,IAAME,cAAc,QAAS,KAAMF,GAAS,KAAM3B,IAAUA,EAAqB,IAAM6B,cAAc,OAAQ,CAC3IM,EAAG,gCACHC,OAAQ,eAIRC,EAA0B,IAAMC,YAAW,SAAUV,EAAOM,GAC9D,OAAoB,IAAML,cAAc,EAAa3B,EAAS,CAC5DwB,OAAQQ,GACPN,O,GAEU,I,uCC1BTW,EAAa,GAEbC,EAAQC,UAAOC,IAAV,+GACA,qBAAGC,QACF,qBAAGA,QAKTC,EAAQH,UAAOI,KAAV,2DACA,qBAAGF,QACF,qBAAGA,QAQA,SAASG,EAAT,GAAkE,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,QAAmC,IAA1BL,YAA0B,MAAnB,OAAmB,EAARM,EAAQ,iBAC9E,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEIC,EAAO,GACX,GAAgB,QAAZN,EAEFM,EAAO,kJACF,IAAKF,GAAUZ,EAAWQ,GAG/B,OACE,kBAACH,EAAD,iBAAWK,EAAX,CAAiBN,KAAMA,IACrB,0BAAMW,MAAO,CAAEC,WAAY,GAAKC,KAAK,MAAMC,aAAW,YAAtD,iBAJJJ,EAAmB,KAAZL,QAA8BU,IAAZV,EA7BN,SAAAD,GAAO,qGAC4DY,YAAUZ,GADtE,aA6BuBa,CAAeb,GAAWC,EAW7E,OACE,kBAACR,EAAD,iBACMS,EADN,CAEEY,IAAKd,EACLe,IAAKT,EACLV,KAAMA,EACNoB,QAAS,WACPxB,EAAWQ,IAAW,EACtBK,GAAS,O,uKC7BXY,GAAaC,IAAOC,UAAUC,KAAK,KAEnCC,GAAoB3B,UAAO4B,OAAV,ySACnB,qBAAGC,MAAkBC,iBAUT,qBAAGD,MAAkBE,eACf,qBAAGF,MAAkBG,cAChC,qBAAGH,MAAkBG,cAG1BC,GAAWjC,UAAOkC,IAAV,kGACV,qBAAGL,MAAkBC,iBAMnBK,GAAQnC,kBAAOoC,IAAPpC,CAAH,0HAEA,gBAAGU,EAAH,EAAGA,MAAOmB,EAAV,EAAUA,MAAV,OAAsBnB,GAASmB,EAAMQ,aAC1B,qBAAGR,MAAkBS,mBAIrCC,GAAwBvC,kBAAOoC,IAAPpC,CAAH,8IAKL,qBAAG6B,MAAkBW,gBAG9BC,GAAiBzC,UAAO4B,OAAV,2VAGhB,gBAAGc,EAAH,EAAGA,SAAUb,EAAb,EAAaA,MAAb,OAA0Ba,EAAWb,EAAMc,UAAYd,EAAMG,cAElD,gBAAGU,EAAH,EAAGA,SAAUb,EAAb,EAAaA,MAAb,OAA0Ba,EAAWb,EAAMe,YAAcf,EAAMG,cAS7E,gBAAGU,EAAH,EAAGA,SAAUb,EAAb,EAAaA,MAAb,OAA0Ba,EAAWG,YAAO,GAAKhB,EAAMe,aAAeC,YAAO,GAAKhB,EAAMG,eAIxE,gBAAGH,EAAH,EAAGA,MAAH,OAAegB,YAAO,GAAKhB,EAAMG,eAI5Cc,GAAU9C,UAAOI,KAAV,yGAMd2C,GAAiB/C,kBAAOgD,EAAPhD,CAAH,6GAKN,gBAAG0C,EAAH,EAAGA,SAAUb,EAAb,EAAaA,MAAb,OAA0Ba,EAAWb,EAAMc,UAAYd,EAAMG,cAIrEiB,GAAajD,UAAOkC,IAAV,8JACZ,qBAAGL,MAAkBqB,oBACG,gBAAGrB,EAAH,EAAGA,MAAH,OAAesB,YAAe,IAAMtB,EAAMuB,gBAGhD,qBAAGvB,MAAkBS,mBAIrCe,GAAYrD,UAAOkC,IAAV,iKAEO,gBAAGxB,EAAH,EAAGA,MAAOmB,EAAV,EAAUA,MAAV,OAAuBnB,EAAQmB,EAAMQ,UAAYR,EAAMe,eAEvD,qBAAGf,MAAkBS,mBAEnB,qBAAGT,MAAkByB,eAIvCC,GAAWvD,UAAOkC,IAAV,6MACV,qBAAGL,MAAkBC,iBAEd,qBAAGD,MAAkB2B,YAMnB,gBAAG3B,EAAH,EAAGA,MAAH,OAAegB,YAAO,GAAKhB,EAAM2B,aAIxCC,GAAiBzD,UAAOkC,IAAV,qIAQdwB,GAAY1D,UAAOI,KAAV,mGACJ,gBAAGM,EAAH,EAAGA,MAAOmB,EAAV,EAAUA,MAAV,OAAsBnB,GAASmB,EAAMQ,aAGnC,gBAAG3B,EAAH,EAAGA,MAAOmB,EAAV,EAAUA,MAAV,OAAsBnB,GAASmC,YAAO,GAAKhB,EAAMQ,cAIxDsB,GAAa3D,UAAOkC,IAAV,mDACZ,qBAAGL,MAAkBqB,oBAInBU,GAAc5D,UAAOkC,IAAV,oKASX2B,GAAa7D,kBAAO8D,KAAP9D,CAAH,+DAEF,qBAAG6B,MAAkBc,aAI7BoB,GAAY/D,UAAOkC,IAAV,8IAUT8B,GAAkBhE,UAAOkC,IAAV,0HACjB,qBAAGL,MAAkBC,iBAGH,qBAAGD,MAAkBW,gBAGrCyB,GAAiBjE,UAAOkC,IAAV,mKAChB,qBAAGL,MAAkBC,iBAQnBoC,GAAYlE,UAAOkC,IAAV,2HAOTiC,GAAgBnE,UAAOkC,IAAV,yPACf,qBAAGL,MAAkBC,iBAQZ,qBAAGD,MAAkBuC,YAIV,qBAAGvC,MAAkBwC,iBAGzC,qBAAGxC,MAAkByC,WAAWC,WAA/B,KAAD,+CAGEC,GAAexE,UAAOkC,IAAV,8DACd,qBAAGL,MAAkBC,iBAInB2C,GAAmBzE,UAAOkC,IAAV,4DAClB,qBAAGL,MAAkBqB,oBAInBwB,GAAgB1E,UAAOkC,IAAV,6CACR,qBAAGL,MAAkB8C,eAG1BC,GAAkB5E,UAAOkC,IAAV,wEAKf2C,GAAc7E,UAAOkC,IAAV,yFAGN,qBAAGL,MAAkB8C,eAG1BG,GAAgB9E,UAAOkC,IAAV,gEACf,qBAAGL,MAAkBqB,oBAIZ6B,GAAkB/E,UAAOI,KAAV,8DAItB4E,GAAiBhF,kBAAOiF,IAAPjF,CAAH,8FAET,qBAAG6B,MAAkB8C,eAIjB,SAASO,GAAT,GAiBX,IAAD,IAhBDC,qBAgBC,MAhBe,aAgBf,EAfDC,EAeC,EAfDA,YACAC,EAcC,EAdDA,YAcC,IAbDC,0BAaC,MAboB,aAapB,EAZDpG,EAYC,EAZDA,MACAqG,EAWC,EAXDA,YACAC,EAUC,EAVDA,UAUC,IATDC,4BASC,MATsB,aAStB,EARDC,EAQC,EARDA,aACAC,EAOC,EAPDA,cACAC,EAMC,EANDA,mBAMC,IALDC,4BAKC,MALsB,GAKtB,EAJDC,EAIC,EAJDA,WACAC,EAGC,EAHDA,MAGC,IAFDC,4BAEC,SADDC,EACC,EADDA,WAEQC,EAAMC,cAAND,EAER,EAAsCzF,oBAAS,GAA/C,mBAAO2F,EAAP,KAAoBC,EAApB,KAEMC,EAAgBC,YAAiBV,GACdW,EAAiCC,aAAgBZ,GAAlEa,gBAEFC,EAAkBC,aAAmBf,GAErCgB,EAAiBC,eAEjBC,EAAYC,eAkFlB,OACE,kBAAC/D,GAAD,KACE,kBAACI,GAAD,CAAW3C,QAASgF,GAClB,kBAACnC,GAAD,KACE,kBAACE,GAAD,KACE,8BAAOvE,GADT,IACuB,8BAAOqG,IAG9B,kBAAC7B,GAAD,CACEuD,WAAU,YACVvG,QAASgF,EACTwB,QAAS,WACPzB,MAGF,kBAAC,IAAD,CACE0B,MAAM,YACNtG,MAAO,CACLuG,WAAY,wBACZC,MAAO,QACPC,OAAQ,OACRC,aAAc,OACdC,QAAS,YACTC,UAAW,UAGb,8BAAOjC,MA3EU,oBAAhBH,EACFA,IAIP,kBAACpD,GAAD,KACE,kBAACE,GAAD,CACEuF,KAAK,SACLC,IAAI,IACJjH,QAASgF,EACTkC,YAAY,MACZC,KAAK,uBACLC,SAAU,SAAAC,GAAC,OAAI5C,EAAc4C,EAAEnK,OAAOmI,QACtCiC,WAAY,SAAAD,GAIO,MAHAA,EAAEE,MAAQF,EAAEE,MAAQF,EAAEG,WAIrCH,EAAEI,iBACFJ,EAAEK,oBAGNrC,MAAOA,KApDTJ,GAAkBG,GAAuC,QAAzBD,GAAmCA,EAGhEc,EAqBI,kBAAChF,GAAD,KAAoBuE,EAAE,YAnB3B,kBAACvE,GAAD,CACEuF,QAAO,sBAAE,4BAAAmB,EAAA,sEACoB/B,EAAcgC,SAASC,QAChD/B,EACAhF,IAAOgH,UAAUC,YAHZ,OACDC,EADC,OAKPpC,EACGiC,QAAQ/B,EAA8BhF,IAAOgH,UAAUC,WAAY,CAClEE,SAAUC,YAAmBF,EAAcnH,MAE5CsH,MAAK,SAAAC,GACJjC,EAAeiC,EAAU,CAAEC,SAAUlD,OAVlC,4CAcRK,EAAE,WAnBF,KAsDJF,EACC,kBAACvD,GAAD,CACEC,WAAYmD,EACZqB,QAAS,WACFtB,GACHS,GAAe,KAInB,kBAACvD,GAAD,KACG+C,EAAuB,kBAACxF,EAAD,CAAWC,QAASuF,EAAsBtF,QAASwG,EAAUlB,GAAsBtF,UAAc,KAEvH,kBAACwE,GAAD,KACIgC,EAAUlB,IAAyBkB,EAAUlB,GAAsBmD,QAAW9C,EAAE,iBAGpFN,GAAsB,kBAAC7C,GAAD,CAAgBL,WAAYmD,MAGtD,MAqCJ,kBAACtC,GAAD,CAAU1C,MAAO,CAAEoI,WAAY,IAC7B,kBAACxF,GAAD,KACE,0BAAM5C,MAAO,CAAEqI,SAAU,WAAajD,OAK1CL,GACA,kBAACuD,GAAD,CACEC,OAAQhD,EAERiD,UAAW,WACThD,GAAe,IAEjBiD,cAAehE,EACfF,YAAaA,KAOvB,SAAS+D,GAAT,GAAiF,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,cAAelE,EAAe,EAAfA,YACvDc,EAAMC,cAAND,EAER,EAAsCzF,mBAAS,IAA/C,mBAAO8I,EAAP,KAAoBC,EAApB,KACQC,EAAShD,aAAgB8C,GAAzBE,KAEF1C,EAAYC,eAGZ0C,EAAWC,eAEXC,EAAclM,OAAOgB,KAAKqI,GAAW8C,KAAI,SAAAC,GAC7C,GACEJ,GACAtE,GACAA,EAAY0E,IACZ1E,EAAY0E,GAAGC,UACd3E,EAAY0E,GAAGC,QAAQC,SACxB5E,EAAY0E,GAAGG,QACf,CACA,IAAMC,EAAUR,EAASS,MAAM/E,EAAY0E,GAAGC,SAG9C,OAFyBvI,IAAOC,UAAUC,KAAK0D,EAAY0E,GAAGG,QAAQG,YAClCD,MAAMD,GAAShI,IAAIV,IAAOC,UAAUC,KAAK,IAAI2I,IAAItD,EAAU+C,GAAGQ,WAGlG,OAAO,QAGLC,EACJX,GACAlM,OAAOgB,KAAKqI,GAAWyD,QACrB,SAACC,EAAaC,EAAc7M,GAA5B,OAAkCH,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAAiBgN,EAAed,EAAY/L,IAAM4M,KACpF,IAGEE,EAAYC,mBAAQ,WACxB,OAAOlN,OAAOgB,KAAKqI,GAChB8D,QAAO,SAAAf,GAAC,OAAI/C,EAAU+C,GAAGd,UACzB8B,MAAK,SAACzC,EAAG0C,GACR,IAAMC,EAAUjE,EAAUsB,GAAGW,OAAOiC,cAC9BC,EAAUnE,EAAUgE,GAAG/B,OAAOiC,cAEpC,GAAID,IAAY,MAAMC,eAAiBC,IAAY,MAAMD,cACvD,OAAOD,IAAYE,EAAU,EAAIF,IAAY,MAAMC,eAAiB,EAAI,EAO1E,GAAI7F,EAAa,CACf,IAAM+F,EAAW/F,EAAYiD,GAAKjD,EAAYiD,GAAG4B,QAAU,KACrDmB,EAAWhG,EAAY2F,GAAK3F,EAAY2F,GAAGd,QAAU,KAE3D,GAAIkB,IAAaC,EACf,OAAQ,EACH,IAAKD,GAAYC,EACtB,OAAO,EAGT,GAAID,GAAYA,EACd,OAAIA,EAASE,GAAGD,IACN,EAED,EAKb,OAAOJ,EAAUE,GAAW,EAAIF,EAAUE,EAAU,EAAI,KAEzDrB,KAAI,SAAAC,GACH,IAAIG,EACAqB,EASJ,MAPU,QAANxB,GAAe1E,GAAeA,EAAY0E,IAC5CG,EAAUsB,YAAiBnG,EAAY0E,GAAGG,SAC1CqB,EAAaf,EAAWT,IACf1E,GAAeA,EAAY0E,KACpCG,EAAUuB,YAAmBpG,EAAY0E,GAAGG,QAASlD,EAAU+C,GAAGQ,UAClEgB,EAAaf,EAAWT,IAEnB,CACLL,KAAM1C,EAAU+C,GAAGL,KACnBT,OAAQjC,EAAU+C,GAAGd,OACrB1I,QAASwJ,EACTG,QAASA,EACTqB,WAAYA,EACZ/K,QAASwG,EAAU+C,GAAGvJ,cAG3B,CAAC6E,EAAa2B,EAAWwD,IAEtBkB,EAAoBb,mBAAQ,WAChC,OAAOD,EAAUE,QAAO,SAAAa,GAStB,OAPqBhO,OAAOgB,KAAKgN,GAAY7B,KAAI,SAAA8B,GAC/C,MACuC,kBAA9BD,EAAWC,MAChBD,EAAWC,GAAeC,MAAM,IAAIC,OAAOC,IAAkBvC,GAAc,SAI7DwC,MAAK,SAAAC,GAAC,OAAIA,UAE/B,CAACrB,EAAWpB,IA0Cf,IAAM0C,EAAWC,mBAQjB,SAASC,IACP3C,EAAe,IACfH,IAGF,OACE,kBAAC+C,EAAA,EAAD,CACEhD,OAAQA,EACRC,UAAW8C,EACXE,UAAW,GACXC,gBAAiBC,gBAAWtL,EAAYgL,GAExC,kBAACtI,GAAD,KACE,kBAACC,GAAD,KACE,2CACA,kBAACG,GAAD,CAAWmD,QAASiF,GAClB,kBAACtI,GAAD,CAAYzC,IAAK,iBAGrB,kBAAC4C,GAAD,KACE,yBAAK3C,IAAKmL,KAAYpL,IAAI,WAC1B,kBAACmB,GAAD,CACE9C,IAAKwM,EACLvE,KAAK,OACLE,YAAa2E,WAAWrG,EAAE,uBAAyBA,EAAE,iBACrD4B,SA/BV,SAAiB2E,GACf,IAAMC,EAAQD,EAAM7O,OAAOmI,MACrB4G,EAAmBzL,YAAUwL,GACnClD,EAAemD,GAAoBD,OA+B/B,kBAACxI,GAAD,KArEAhD,YAAUqI,SAAyBtI,IAATwI,EACrB,kBAACxF,GAAD,kCAEJwH,EAAkB1N,OAIhB0N,EAAkB5B,KAAI,YAA8D,IAA3DvJ,EAA0D,EAA1DA,QAAS0I,EAAiD,EAAjDA,OAAQS,EAAyC,EAAzCA,KAAMQ,EAAmC,EAAnCA,QAASqB,EAA0B,EAA1BA,WAAY/K,EAAc,EAAdA,QAC1E,OACE,kBAAC4D,GAAD,CAAelG,IAAKqC,EAAS4G,QAAS,kBAhB5C,SAAwB5G,GACtBkJ,EAAe,IACfF,EAAchJ,GACd+I,IAagDuD,CAAetM,KACzD,kBAACkE,GAAD,KACE,kBAACnE,EAAD,CAAWC,QAASA,EAASC,QAASA,EAASL,KAAM,SACrD,kBAACuE,GAAD,KACE,0BAAMoI,GAAG,UAAU7D,GACnB,kBAACtE,GAAD,KAAgB+E,KAGpB,kBAAC3E,GAAD,KACGmF,EACC,kBAACrF,GAAD,KAAkBqF,IAAYA,EAAU,GAAiB,YAAZA,GAAyBA,EAAU,KAEhF,kBAACjF,GAAD,CAAgB3D,IAAKyL,KAAQ1L,IAAI,WAEnC,kBAACyD,GAAD,KACGyG,EAAcA,EAAWyB,GAAG,KAAQ,SAAW,IAAMC,YAAY1B,GAAe,SApBlF,kBAACrH,GAAD,KAAiBiC,EAAE,kBC9hBhC,IAAM+G,GAAQjN,UAAOkC,IAAV,2JAEW,qBAAGL,MAAkBW,gBAMrC0K,GAAWlN,UAAOkC,IAAV,6JAOQ,qBAAGL,MAAkBW,gBAGrC2K,GAAcnN,UAAOkC,IAAV,yIAMK,qBAAGL,MAAkBW,gBAG5B,SAAS4K,GAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAC5D,OACE,kBAACN,GAAD,KACGI,GAAW,kBAACH,GAAD,MACXK,EACAD,GAAc,kBAACH,GAAD,OCjCrB,IASeK,GATM,SAAArO,GAAK,OACxB,uCAAKE,MAAM,MAAMC,OAAO,MAAMC,QAAQ,WAAWC,KAAK,gBAAmBL,GACvE,0BACEO,EAAE,mGACFF,KAAK,mBCGIiO,GAPA,SAAAtO,GAAK,OAClB,uCAAKuO,QAAQ,MAAM7M,MAAO,CAAE2G,QAAS,OAAQnI,MAAO,OAAQC,OAAQ,SAAcH,GAChF,0BAAMwO,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,YAAY,MAC9C,0BAAMJ,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,YAAY,QCGnCC,GANE,SAAA7O,GAAK,OACpB,uCAAKuO,QAAQ,MAAM7M,MAAO,CAAE2G,QAAS,OAAQnI,MAAO,OAAQC,OAAQ,SAAcH,GAChF,0BAAMwO,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,YAAY,Q,0ICElD,SAASE,GAAYC,GACnB,OAAmD,IAA5C,CAAC,SAAU,UAAUvP,eAAeuP,GAS7C,IAAMC,GAAiB,CAAEC,OAAO,EAAOC,iBAAapN,EAAWqN,UAAMrN,GAC/DsN,GAAqB,CAAEH,OAAO,EAAOI,YAAQvN,EAAWwN,SAAS,EAAOC,SAAS,EAAOhO,OAAO,GAC/FiO,GAAqB,CAAEP,OAAO,EAAMI,YAAQvN,EAAWwN,SAAS,EAAMC,SAAS,EAAMhO,OAAO,GAkG3F,SAASkO,GAA8BC,EAAWC,EAAmBC,EAAYC,EAAYC,GAClG,IAAMC,EAAWtE,mBAAQ,kBAAMkE,EAAkBK,YAAYJ,KAAa,CAACD,EAAmBC,IAExFK,EAAWxE,mBACf,kBACEsE,GA/GN,SAA2BhB,GACzB,YACQjN,IAANiN,GAAoBmB,MAAMC,QAAQpB,IAAMA,EAAEqB,OAAM,SAAAC,GAAC,OAAIvB,GAAYuB,IAAOH,MAAMC,QAAQE,IAAMA,EAAED,MAAMtB,OA6GtFwB,CAAkBT,GAC1BF,EAAkBY,mBAAmBR,EAAUF,QAC/C/N,IACN,CAAC+N,EAAYF,EAAmBI,IAkB5BS,EAzFR,SAAsBC,EAAOX,GAC3B,IAAQY,EAAYC,cAAZD,QACFE,EAAcC,cAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,eACnDI,EAAWC,eAEXC,EAAqBzF,mBAAQ,WACjC,IACE,IAAM0F,EAAMV,EACT/E,QAAO,SAAA0F,GAAC,OAAIC,QAAQD,MACpB1G,IAAI4G,MACJ3F,OAEH,OAAO4F,KAAKC,UAAUL,GAAY,IAClC,MAAOvI,GAEP,YADA6I,QAAQC,IAAI,SAAU9I,EAAE+I,YAGzB,CAAClB,IA6BJ,OA1BAmB,qBAAU,WACR,GAAKV,EAAL,CAGA,IAAMW,EAAWN,KAAKO,MAAMZ,GAC5B,GAAKR,GAA+B,IAApBmB,EAASjT,OAAzB,CACA,IAAM6R,EAAQoB,EAASnH,KAAI,SAAA5L,GAAG,OAAIiT,aAAajT,MAS/C,OARAkS,EACEgB,aAAsB,CACpBtB,UACAD,QACAX,aAIG,WACLkB,EACEiB,aAAyB,CACvBvB,UACAD,QACAX,kBAIL,CAACY,EAASM,EAAUlB,EAASoB,IAEzBzF,mBACL,kBACEgF,EAAM/F,KAAI,SAAAzL,GACR,IAAKyR,IAAYzR,EAAM,OAAO+P,GAE9B,IACIG,EADEE,EAASuB,EAAYF,GAAWE,EAAYF,GAASY,aAAUrS,SAAS6C,EAM9E,OAJIuN,GAAUA,EAAOF,MAAwB,OAAhBE,EAAOF,OAClCA,EAAOE,EAAOF,MAGT,CAAEF,OAAO,EAAME,OAAMD,YAAaG,EAASA,EAAOH,iBAAcpN,QAE3E,CAAC8O,EAAaH,EAAOC,IA8BPwB,CAfFzG,mBACZ,kBACEsE,GAAYL,GAAaA,EAAU9Q,OAAS,GAAKqR,EAC7CP,EAAUhF,KAAI,SAAAvJ,GACZ,OAAOA,GAAW8O,EACd,CACE9O,UACA8O,iBAEFnO,KAEN,KACN,CAAC4N,EAAWO,EAAUF,IAGYD,GAE9BqC,EAAoBC,cAE1B,OAAO3G,mBAAQ,WACb,OAAO+E,EAAQ9F,KAAI,SAAA2E,GAAM,OA/H7B,SAAqBgD,EAAY1C,EAAmBI,EAAUoC,GAC5D,IAAKE,EAAY,OAAOjD,GACxB,IAAQH,EAA6BoD,EAA7BpD,MAAOE,EAAsBkD,EAAtBlD,KAAMD,EAAgBmD,EAAhBnD,YACrB,IAAKD,EAAO,OAAOG,GACnB,GAAIH,IAAUC,EAAa,OAAOM,GAClC,IAAKG,IAAsBI,IAAaoC,EAAmB,OAAO3C,GAClE,IAAM8C,EAAUnD,GAAQA,EAAKvQ,OAAS,EAChC2Q,GAAWL,GAA4B,GAAKiD,EAC9C9C,OAASvN,EACb,GAAIwQ,GAAWnD,EACb,IACEE,EAASM,EAAkB4C,qBAAqBxC,EAAUZ,GAC1D,MAAO5N,GAEP,OADAkQ,QAAQe,MAAM,6BAA8BzC,EAAUZ,GAC/C,CACLF,OAAO,EACPK,SAAS,EACT/N,OAAO,EACPgO,UACAF,UAIN,MAAO,CACLJ,OAAO,EACPK,SAAS,EACTC,UACAF,OAAQA,EACR9N,OAAQ+Q,GAmGqBG,CAAYpD,EAAQM,EAAmBI,EAAUoC,QAC7E,CAACpC,EAAUS,EAASb,EAAmBwC,ICvIrC,IAAMO,GACF,UADEA,GAEC,aAFDA,GAGH,SAHGA,GAIF,UAGLC,GACK,6CADLA,GAEK,IAFLA,GAGM,GAHNA,GAME,cANFA,GAOI,QAGJC,GAAiB,IAAIC,KAAUC,IAErC,SAASC,GAAkBC,EAAWC,GACpC,IAEMC,EAAWC,GA0IZ,SAAoCH,EAAWC,GACpD,IAAQvC,EAAYC,cAAZD,QAER,EAAyBA,EAAU,CAACsC,EAAWC,GAAa,MAACnR,OAAWA,GAAxE,mBAAOsR,EAAP,KAAeC,EAAf,KAEMC,EAAQ7H,mBAAQ,WAAO,IAAD,UAC1B,IAAKiF,EAAS,MAAO,GAErB,IAAM6C,EAAM,UAAGC,KAA8B9C,UAAjC,QAA6C,GACnD+C,EAAcL,GAAM,oBAAGM,KAAiBhD,UAApB,aAAG,EAA4B0C,EAAOjS,gBAAtC,QAAuD,GAC3EwS,EAAcN,GAAM,oBAAGK,KAAiBhD,UAApB,aAAG,EAA4B2C,EAAOlS,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,oBAAWoS,GAAX,aAAsBE,GAAtB,aAAsCE,MACrC,CAACjD,EAAS0C,EAAQC,IAEfO,EAAYnI,mBAChB,kBAAMoI,KAAQP,GAAO,SAACQ,GAAD,OAAUR,EAAM5I,KAAI,SAACqJ,GAAD,MAAe,CAACD,EAAMC,WAC/D,CAACT,IAGH,OAAO7H,mBACL,kBACE2H,GAAUC,EACN,CAEA,CAACD,EAAQC,IAFT,oBAIGC,EAAM5I,KAAI,SAACoJ,GAAD,MAAU,CAACV,EAAQU,OAJhC,aAMGR,EAAM5I,KAAI,SAACoJ,GAAD,MAAU,CAACT,EAAQS,OANhC,aAQGF,IAEFlI,QAAO,mCAAEsI,EAAF,KAAMC,EAAN,YAAcD,EAAG7S,UAAY8S,EAAG9S,WACvCuK,QAAO,YAAuB,IAAD,mBAApB0H,EAAoB,KAAZC,EAAY,KAC5B,IAAK3C,EAAS,OAAO,EACrB,IAAMwD,EAAcC,KAAazD,GAE3B0D,EAAY,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcd,EAAOjS,SACpCkT,EAAY,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAcb,EAAOlS,SAE1C,OAAKiT,IAAiBC,KAElBD,IAAiBA,EAAaE,MAAK,SAACR,GAAD,OAAUT,EAAOkB,OAAOT,UAC3DO,IAAiBA,EAAaC,MAAK,SAACR,GAAD,OAAUV,EAAOmB,OAAOT,UAIjE,KACN,CAACV,EAAQC,EAAQC,EAAOM,EAAWlD,IA7LL8D,CAA2BxB,EAAWC,IAKtE,OAAOxH,mBACL,kBACElN,OAAOkW,OACLvB,EAEGxH,QAAO,SAAC2D,GAAD,OAAYgC,QAAQhC,EAAO,KAAOqD,IAAoBrD,EAAO,OAEpEhE,QAAO,SAACqJ,EAAD,GAAqB,IAAD,EAAVC,EAAU,oBAE1B,OADAD,EAAKC,EAAKC,eAAezT,SAAzB,UAAoCuT,EAAKC,EAAKC,eAAezT,gBAA7D,QAAyEwT,EAClED,IACN,OAET,CAACxB,IAuEE,SAASC,GAAW0B,GACzB,IAAMC,EAASrJ,mBACb,kBAAMoJ,EAAWnK,KAAI,mCAAEsI,EAAF,KAAaC,EAAb,WAA4B,QAACD,QAAD,IAACA,OAAD,EAACA,EAAW+B,QAAZ,OAAqB9B,QAArB,IAAqBA,OAArB,EAAqBA,EAAW8B,cACjF,CAACF,IAqBGrE,EAAUf,GAlBMhE,mBACpB,kBACEqJ,EAAOpK,KAAI,YAAuB,IAAD,mBAApB0I,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GACLC,GACAD,EAAO1C,UAAY2C,EAAO3C,UACzB0C,EAAOmB,OAAOlB,IACf2B,KAAgB5B,EAAO1C,SACrBuE,aAAmB,CACnBC,eAAgBF,KAAgB5B,EAAO1C,SACvC0C,SACAC,gBAEAvR,OAER,CAACgT,IAG0DlC,GAAgB,eAE7E,OAAOnH,mBAAQ,WACb,OAAO+E,EAAQ9F,KAAI,SAAC2E,EAAQ3Q,GAC1B,IAAgByW,EAAsB9F,EAA9BA,OAAkBC,EAAYD,EAAZC,QACpB8D,EAAS0B,EAAOpW,GAAG,GACnB2U,EAASyB,EAAOpW,GAAG,GACzB,GAAI4Q,EAAS,MAAO,CAACoD,GAAmB,MACxC,IAAKU,IAAWC,GAAUD,EAAOmB,OAAOlB,GAAS,MAAO,CAACX,GAAmB,MAC5E,IAAKyC,EAAU,MAAO,CAACzC,GAAsB,MAC7C,IAAQ0C,EAAyBD,EAAzBC,UAAWC,EAAcF,EAAdE,UACnB,EAAyBjC,EAAOkC,YAAYjC,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOmC,EAAP,KAAeC,EAAf,KACA,MAAO,CACL9C,GACA,IAAI+C,KACFC,KAAeC,cAAcJ,EAAQH,EAAUnK,YAC/CyK,KAAeC,cAAcH,EAAQH,EAAUpK,mBAIpD,CAACuF,EAASsE,IA6DR,SAASc,GACdC,EACAC,GAEC,IADDC,EACA,uDADeC,KAEf,GAAIH,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOI,YAAcH,EAAOG,YAC3BJ,EAAOK,YAAYC,SAAS5B,OAAOuB,EAAOI,YAAYC,YACtDL,EAAOM,aAAaD,SAAS5B,OAAOuB,EAAOM,aAAaD,UAEzD,MAAM,IAAIE,MAAM,iCAGlB,OAAIN,EAAaO,QAAQN,MAChBH,EAAOU,eAAeC,SAASV,EAAOS,gBAEtCV,EAAOU,eAAeE,WAC1BC,SAASX,EAAaY,IAAIC,OAC1BJ,SAASV,EAAOS,iBAIhB,SAASM,GAAejQ,EAAOuP,GACpC,GAAKvP,GAAUuP,EAGf,IACE,IAAMW,EAAmBC,aAAWnQ,EAAOuP,EAAShL,UAAUF,WAC9D,GAAyB,MAArB6L,EACF,OAAOpB,KAAeC,cAAcQ,EAAUa,KAAKC,OAAOH,IAE5D,MAAOvV,GAEPkQ,QAAQe,MAAR,yCAAgD5L,EAAhD,KAA0DrF,ICrQvD,SAAS2V,GAAgBC,EAAYC,EAAeC,EAAaC,GAAiC,IAAjBC,EAAgB,wDACtG,IACE,GACEJ,IACCC,GAAmC,IAAlBA,IAClBC,IACCC,GAAqC,IAAnBA,GACnB,CACA,IAAME,EAASnV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK,KAEnE,OAAIgV,EACKJ,EACJM,IAAID,GACJzU,IAAIsU,GACJI,IAAIpV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK+U,KACxDvU,IAAIV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK6U,KAEpDC,EACJI,IAAID,GACJzU,IAAIoU,GACJM,IAAIpV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK6U,KACxDrU,IAAIV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK+U,MAG/D,W,qDCvBEI,GAAM7W,kBAAO8W,OAAP9W,CAAH,oLACE,gBAAGX,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAG0X,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGxP,WACJ,qBAAGF,UACI,qBAAGC,gBAGT0P,GAAajX,kBAAO6W,GAAP7W,CAAH,iE,IAIAA,UAAOkC,IAAV,0EAKGlC,kBAAO6W,GAAP7W,CAAH,0IAER,gBAAGkX,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGF,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGE,OAIOlX,kBAAO6W,GAAP7W,CAAH,qEAET,gBAAGkX,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,M,OCjC9BC,GAASnX,UAAOkC,IAAV,2GAUCkV,IALepX,kBAAOmX,GAAPnX,CAAH,sEAKCA,UAAOkC,IAAV,sHAGL,gBAAGgV,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGF,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,M,UCPzCK,GAAUrX,UAAOkC,IAAV,8CAGPoV,GAAUtX,kBAAOoX,GAAPpX,CAAH,gDAIPuX,GAAgBvX,kBAAOsX,GAAPtX,CAAH,iIACG,qBAAG6B,MAAkB2V,OAKrCC,GAAOzX,UAAO0X,EAAV,yNAUJ3T,GAAY/D,UAAOkC,IAAV,8IA8BR,SAASyV,GAAT,GAAgE,IAA/B7G,EAA8B,EAA9BA,QAAS1H,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAC/CwG,EAAYC,cAAZD,QAIR,OAFAe,QAAQC,IAAIC,GAEPjB,EAGH,kBAACzD,EAAA,EAAD,CAAOhD,OAAQA,EAAQC,UAAWA,EAAWuO,UAAW,IACtD,kBAACP,GAAD,KACE,kBAACC,GAAD,KACE,kBAACL,GAAD,KACE,kBAACQ,GAAD,CAAMI,WAAY,IAAK3O,SAAU,IAAjC,SAGA,kBAAC,GAAD,CAAWhC,QAASmC,KAEtB,kBAAC+N,GAAD,CAAYvW,MAAO,CAAE4G,UAAW,GAAID,QAAS,UAAY0P,IAAI,OAAOF,QAAQ,UAC1E,kBAAC,iBAAD,CAAe3P,MAAM,UAAUxG,MAAO,CAAEkN,YAAa,KAAO7N,KAAM,KAClE,uBAAG2X,WAAY,IAAK3O,SAAU,GAAI7B,MAAM,UAAUxG,MAAO,CAAEiX,UAAW,SAAUzY,MAAO,QACpFyR,KAIP,kBAACyG,GAAD,CAAeL,IAAI,QACjB,kBAACa,GAAA,EAAD,CAAe7Q,QAASmC,GAAxB,cApBa,K,yCChEhB,SAAe2O,GAAtB,mC,8CAAO,WAA2BC,GAA3B,eAAA5P,EAAA,6DACC6P,EAAWzW,KAAUC,KAAK,MAD3B,kBAKcyW,GAAgBF,GAL9B,6FAQgBxW,KARhB,UAQqC2W,KARrC,oBAUKF,GADAA,GADAA,EARL,KAQ0BxW,KAR1B,iBASyBoU,IAAIrU,KAAUC,KAAK,KACnBkV,IAAInV,KAAUC,KAAK,MAV5C,kDAYKkP,QAAQC,IAAI,gCAAiC,KAAEC,SAZpD,iCAgBIoH,GAhBJ,iE,+BAgCQE,K,8EAAf,gCAAA/P,EAAA,+EAE0BgQ,KACd,mFAHZ,cAEc/H,EAFd,gBAK2BA,EAAIgI,OAL/B,cAKchK,EALd,OAMc4J,EAAWK,KAAKC,KAAKlK,EAAKE,OAAOiK,sBAN/C,kBAOeP,GAPf,yCASQtH,QAAQC,IAAI,iDAAkD,KAAEC,SATxE,kBAUe,GAVf,2D,sBAcA,I,qBCTIwF,GDSE6B,GAAe,uCAAG,WAAOF,GAAP,SAAA5P,EAAA,+EACb,IAAIqQ,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,mBAAAvQ,EAAA,+EAEoB4P,EAASY,yBAAyB,UAFtD,gBAEHC,EAFG,EAEHA,cACFC,EAAWD,EAAa/a,QACf,EACX4a,EAAQG,EAAaP,KAAKC,KAAKO,EAAW,IAAIb,UAE9CU,EAAO,kBAPA,gDAUXA,EAAO,EAAD,IAVK,yDAAZ,0DADa,2CAAH,sDEjDRI,GAAmB,CAC5B,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,8C,mFDiDEC,GAAsBjZ,UAAOkC,IAAV,yFACrB,qBAAGL,MAAkBC,iBAMnBoX,GAAYlZ,mBADO,SAAC,GAAD,EAAGmZ,UAAH,EAAcC,OAAd,IAAyB5Y,EAAzB,yBAAoC,kBAAC,GAAcA,KAC1DR,CAAH,mJACJ,gBAAG6B,EAAH,EAAGA,MAAH,SAAUuX,OAAuBvX,EAAMG,WAAaH,EAAM8C,eAKzD,qBAAGwU,WAA6B,aAKtCE,GAAWrZ,mBAFO,SAAC,GAAD,IAAGsZ,EAAH,EAAGA,YAAyC9Y,GAA5C,EAAgB2Y,UAAhB,EAA2BC,OAA3B,EAAmCG,KAAnC,0BAAuD,kBAACD,EAAgB9Y,KAE/ER,CAAH,6PACF,gBAAG6B,EAAH,EAAGA,MAAH,SAAUuX,OAAuBvX,EAAMG,WAAaH,EAAM8C,eAS1D,qBAAGwU,WAA6B,aAGtCK,GAAsBxZ,UAAOkC,IAAV,6HACrB,qBAAGL,MAAkBC,iBAEd,qBAAGD,MAAkB2B,YAK1BiW,GAAezZ,UAAOI,KAAV,6EAGP,qBAAGyB,MAAkB2B,YAG1BkW,GAAO1Z,UAAOkC,IAAV,wIAUJnC,GAAQC,UAAOC,IAAV,+EACA,qBAAGC,QA6Cd,SAASyZ,GAAoBC,GAC3B,MAAO,CACLC,iBAAkB,GAClBC,eAAgB,GAChBC,iBAxHU,EAyHVC,qBAxHW,EAyHXC,cAAe,MACfL,eAAgBA,GAAkC,GAClDM,OAhHiB,IAiHjBC,eAAgB,GAChBC,cAAe,IAInB,SAASC,GAAiBpK,EAAOqK,GAC/B,OAAQA,EAAO5S,MACb,IAAK,mBACH,IAAQuS,EAAkChK,EAAlCgK,cAAeL,EAAmB3J,EAAnB2J,eACvB,OAAO,2BACF3J,GADL,IAEE6J,eAAgB,GAChBC,iBAzIM,EA0INF,iBAAkB,GAClBM,eAAgB,GAChBF,cAAeL,EACfA,eAAgBK,EAChBG,cAAe,KAGnB,IAAK,eACH,IAAQF,EAA2BjK,EAA3BiK,OAAQC,EAAmBlK,EAAnBkK,eAEVI,EAAOJ,EAAiB3Y,IAAOC,UAAUC,KAAKF,IAAOgZ,MAAMtE,WAAWiE,EAAgB,UAAOlZ,EAC7FwZ,EAAUF,EAAOG,YAAgBC,GAASJ,GAAO,GAAI,IAAI,GAAS,GAExE,OAAO,2BACFtK,GADL,IAEEkK,eAAgBM,EAChBP,OA7IY,MA6IJA,EA9IK,IACD,MAgJhB,IAAK,kBACH,IAAQD,EAAkChK,EAAlCgK,cAAeL,EAAmB3J,EAAnB2J,eACvB,EAA4BU,EAAOM,QAA3BC,EAAR,EAAQA,MAAOvF,EAAf,EAAeA,SAETwF,EAjKE,IAiKiBD,EAAkBvF,EAAW2E,EAChDc,EAjKG,IAiKiBF,EAAmBvF,EAAWsE,EAExD,OAAIkB,IAAqBC,EAChB,2BACF9K,GADL,IAEEgK,cAvKI,IAuKWY,EAAkBvF,EAAW,GAC5CsE,eAvKK,IAuKWiB,EAAmBvF,EAAW,KAGzC,2BACFrF,GADL,IAEEgK,cAAea,EACflB,eAAgBmB,IAItB,IAAK,qBACH,MAAyBT,EAAOM,QAAxBC,EAAR,EAAQA,MAAO9U,EAAf,EAAeA,MACP+T,EAA6F7J,EAA7F6J,eAAgBD,EAA6E5J,EAA7E4J,iBAAkBE,EAA2D9J,EAA3D8J,iBAAkBC,EAAyC/J,EAAzC+J,qBAAsBG,EAAmBlK,EAAnBkK,eAElF,OAAO,2BACFlK,GADL,IAEE4J,iBAtLK,IAsLagB,EAAiB9U,EAAQ8T,EAC3CC,eAAgBkB,OAAOjV,KAAWiV,OAAOnB,GAAoBC,EAAiB,GAC9EC,iBAAkBc,EAClBV,eAzLK,IAyLWU,EAAiB9U,EAAQoU,EACzCH,qBAAsBD,IAAqBc,EAAQb,EAAuBD,IAG9E,IAAK,mBACH,OAAO,2BACF9J,GADL,IAEE6J,eAAmC,OAAnBQ,EAAOM,QAAmBtE,GAAagE,EAAOM,UAGlE,IAAK,kBACH,OAAO,2BACF3K,GADL,IAEEmK,cAAkC,OAAnBE,EAAOM,QAAmBtE,GAAcgE,EAAOM,QAAcN,EAAOM,QAAX,IAG5E,QACE,OAAOjB,MAgCb,SAASsB,GAAiBC,EAAeC,GACvC,IACE,GAAID,GAAiBC,EAAe,CAClC,IAAMxE,EAASnV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK,KAMjE,OALeiV,EAAOC,IAAIsE,GAAehZ,IAAIiZ,GAK7BC,IAAIzE,IAGxB,WAGJ,SAASgE,GAASJ,GAChB,IACE,GAAIA,EAAM,CACR,IAAM5D,EAASnV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK,KACnE,OAAOiV,EAAOC,IAAID,GAAQzU,IAAIqY,IAEhC,WAaW,SAASc,GAAT,GAA4C,IAAD,EAsDpDC,EACAC,EACAC,EAxDiCC,EAAmB,EAAnBA,gBAC7BvV,EAAMC,cAAND,EACR,EAAsCwV,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAAS/L,EAA1B,EAA0BA,QAE1B,EAAoCpP,oBAAS,GAA7C,mBAAKob,EAAL,KAAkBC,EAAlB,KACA,EAAgDrb,mBAAS,IAAzD,mBAAKsb,EAAL,KAAwBC,EAAxB,KAGA,EAAuCC,qBAAW5B,GAAkBoB,EAAiB9B,IAArF,mBAAOuC,EAAP,KAAkBC,EAAlB,KAGEtC,EAOEqC,EAPFrC,iBACAE,EAMEmC,EANFnC,iBACAE,EAKEiC,EALFjC,cACAL,EAIEsC,EAJFtC,eACAM,EAGEgC,EAHFhC,OACAC,EAEE+B,EAFF/B,eACAC,EACE8B,EADF9B,cAGIgC,EAAmBC,cACnBC,EAAsBC,cACtBC,EAAeC,cACrB,EAAoChc,qBAApC,mBAAOic,EAAP,KAAmBC,EAAnB,KAEM9V,EAAiBC,eAGjB8V,EAlMR,SAAqB3C,EAAeL,GAClC,OAAKK,GAAkBL,EAEM,QAAlBK,EAvGQ,EAyGW,QAAnBL,EAxGQ,EACE,EAoGZ,KAgMQiD,CAAY5C,EAAeL,GAG5C,EAAyDnT,aAAgBwT,GAAzD6C,EAAhB,EAAQ9T,OAA+BuN,GAAvC,EAA6BjM,SAC7B,GAA2D7D,aAAgBmT,GAA3DmD,GAAhB,GAAQ/T,OAAgCyN,GAAxC,GAA8BnM,SAGxB0S,GAAeC,aAAkBtB,EAAS1B,GAC1CiD,GAAgBD,aAAkBtB,EAAS/B,GAC3CuD,GAA2BH,IAAgBhC,OAAOoC,UAAU7G,IAC9DmE,YAAgBsC,GAAczG,GAAegC,KAAK5Q,IAAI,EAAG4O,KACzD,GACE8G,GAA4BH,IAAiBlC,OAAOoC,UAAU3G,IAChEiE,YAAgBwC,GAAezG,GAAgB8B,KAAK5Q,IAAI,EAAG8O,KAC3D,GAGE6G,GA3TM,IA2TgBvD,GAzTjB,IAyT+CA,EAA4BxD,GAAgBE,GAChG8G,GA3TO,IA2TaxD,EAA8BxD,GAAgBE,GAGxE,GAA4DhW,qBAA5D,qBAAO+c,GAAP,MAA+BC,GAA/B,MACMC,GAhUM,IAgUa3D,EAA6ByD,GAAyBlH,GACzEqH,GAjUM,IAkUV5D,EAA6BF,EAAmBa,YAAgBpE,GAAYC,GAAeA,IAAe,GAMtGqH,GNvTD,SACLC,EACAC,EACAC,GAEC,IAAD,yDADyB,GACzB,IADEC,eACF,MAVe,EAUf,EACMC,EAAaxX,aAAgBoX,GAE7BK,EAAoBzX,aAAgBsX,GACpCI,EAAcJ,GAAsBG,GAAqBA,EAAkB5T,SACtD,QAAvByT,EACE,IAAIK,KAAMtM,GAAeA,GAAeA,GAAgBA,GAAcA,IACtE,IAAIsM,KACJF,EAAkBrO,QAClBkO,EACAG,EAAkB5T,SAClB4T,EAAkBlV,OAClBkV,EAAkBzU,WAEpBxI,EAEEod,EAAsBrI,GAC1B8H,EACAD,EAC0B,QAAtBA,EACE,IAAIO,KAAMtM,GAAeA,GAAeA,GAAgBA,GAAcA,IACtE,IAAIsM,KAAMH,EAAWpO,QAASgO,EAAmBI,EAAW3T,SAAU2T,EAAWjV,OAAQiV,EAAWxU,WACtGxI,GAGAqd,EAAepM,GAAkBmM,EAAsBA,EAAoB/I,cAAWrU,EAAWkd,GAEvG,OAAOvT,mBAAQ,WACb,GAAIyT,GAAuBF,GAAeG,EAAavgB,OAAS,EAAG,CAC7C,IAAD,EAAnB,GAAgB,IAAZigB,EACF,iBACEO,KAAMX,iBAAiBU,EAAcD,EAAqBF,EAAa,CACrEH,QAAS,EACTQ,cAAe,IACd,UAJL,QAIW,KAKb,IADA,IAAIC,EAAiB,KACZ5gB,EAAI,EAAGA,GAAKmgB,EAASngB,IAAK,CAAC,IAAD,EAC3B6gB,EAAY,UAChBH,KAAMX,iBAAiBU,EAAcD,EAAqBF,EAAa,CACrEH,QAASngB,EACT2gB,cAAe,IACd,UAJa,QAIP,KAEPzJ,GAAc0J,EAAgBC,EAAcC,QAC9CF,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACH,EAAcH,EAAaH,EAASK,IM4PfO,CACvB3E,EAzUU,IA0UVF,EAA6BF,EAAmB8D,GAChD/D,GASF,OANIgE,GACFtH,GAAa9U,IAAOC,UAAUC,KAAKF,IAAOgZ,MAAMtE,WAAW0H,GAAiBvI,YAAYwJ,UAAWtI,KA/UzF,IAgVDwD,GAA8BF,IACvCvD,GAAa9U,IAAOC,UAAUC,KAAKF,IAAOgZ,MAAMtE,WAAW2D,EAAkBtD,MAGvEwD,GACN,KApVW,EAsVTuB,EAAuBzB,EACvB2B,EAAUnF,GACRqH,GACAnH,GAJFgF,EAAoBiC,GAMlB/G,GA/UY,MAgVZyD,GAEF,MACF,KA9VS,EA+VFC,GAA6C,IAA3Ba,OAAOb,IAI5BqB,EAjGR,SAAwBsD,EAAQC,GAC9B,IACE,OAAOvd,IAAOgZ,MAAMtE,WAAW4I,EAAQC,GACvC,SACA,IAAMC,EAAiB,EAARD,EAEf,OADiBvd,IAAOgZ,MAAMtE,WAAW4I,EAAQE,GACjC9c,IAAIV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI2U,EAASD,KA2F7CE,CAAe9E,EAAgB,IACzCoB,EArJR,SAA6BjF,EAAY4I,EAAc3I,EAAeE,GAAiC,IAAjBC,EAAgB,wDACpG,IACE,GACEJ,GACA4I,IACC3I,GAAmC,IAAlBA,KACjBE,GAAqC,IAAnBA,GACnB,CACA,IAAME,EAASnV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK,KAEnE,OAAIgV,EACKJ,EACJM,IAAID,GACJzU,IAAIgd,GACJtI,IAAIpV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK+U,KACxDvU,IAAIV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK6U,KAEpD2I,EACJtI,IAAIN,GACJpU,IAAIyU,GACJC,IAAIpV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK+U,KACxDvU,IAAIV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK6U,MAG/D,WA6HwB4I,CAClBzB,GACAlC,EACAjF,GACAE,GA7VU,MA8VVyD,GAEFoB,EAAuBZ,YACrBa,EACAgC,GACAhF,KAAK5Q,IAAI,EAAG4V,KACZ,KAfFhC,EAAoB,GACpBD,EAAuB,IAiBzB,MACF,KArXU,EAsXRC,EAAoBqC,GAChBpc,IAAOgZ,MAAMtE,WAAW0H,GAAiBrI,aAAasJ,UAAWtB,IACjE,KACJjC,EAAuBsC,GAAmBA,GAAiBrI,aAAa6J,cAAc,GAAK,GAC3FhF,EAAkC,KAAlBA,EAAuBA,EAAgBkB,EACvDE,EAAUnF,GACRqH,GACAnH,GACAgF,EACA9E,GAlXY,MAmXZyD,GAQN,IAAMmF,GAtYK,IAsYWtF,EAA4BI,EAAiBO,YAAgBc,EAAS,GAAI,GAAG,GAC7F8D,GA5XY,MA4XapF,EAAyB4C,EAAcC,GAChEwC,GA7XY,MA6XcrF,EAAyB6C,GAAeD,EAClE0C,GAAc7E,GAASa,GASzBiE,GAAYje,IAAOC,UAAUC,KAAK,GAOhCge,GAAiBD,KAAS,OAAI/B,SAAJ,IAAIA,QAAJ,EAAIA,GAAkBtC,IAAIqE,KACpDE,GACJD,IACArJ,GAAgBqJ,GAAgBnJ,GAAegF,EAAmB9E,GAjZlD,MAiZkEyD,GAE9E0F,GAAgBpe,IAAOC,UAAUC,KAvZhB,MAuZuCkV,IAC5DpV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK,MAGhDme,GAAiBre,IAAOC,UAAUC,KA1ZhB,KA0ZwCkV,IAC9DpV,IAAOC,UAAUC,KAAK,IAAI2I,IAAI7I,IAAOC,UAAUC,KAAK,MAItD,GAAgDjB,qBAAhD,qBAAOqf,GAAP,MAAyBC,GAAzB,MAEMC,GAAqBL,IAAiB1E,GAAiB0E,GAAenE,GACtEyE,GAAqB,OAAGN,SAAH,IAAGA,QAAH,EAAGA,GAAe5S,GAAGvL,IAAOgH,UAAU0X,MAC3DC,GAAuBF,KAAqB,OAAID,SAAJ,IAAIA,IAAJ,UAAIA,GAAoBI,aAAxB,aAAI,EAA2B/U,GAAGwU,KAEpF9O,qBAAU,WACR,GAAI8I,IAAqByD,IAA+C,IAAxBA,IAA4B,CAC1E,IACE,IAAM+C,EAAc7e,IAAOgZ,MAAMtE,WAAW2D,EAAkByD,IAE9D,GAAI+C,EAAYC,IAAI9e,IAAOgH,UAAU0X,OAASG,EAAYE,IAAI/e,IAAOgH,UAAUC,YAC7E,MAAM+M,QAENiI,GAA0B4C,GAC1BN,GAAoB,MAEtB,SACAA,GAAoB7Z,EAAE,kBAGxB,OAAO,WACLuX,KACAsC,SAGH,CAAClG,EAAkByD,GAAqBpX,IAG3C,OAAoCzF,oBAAS,GAA7C,qBAAOqF,GAAP,MAAmB0a,GAAnB,MACAzP,qBAAU,WACR,IAAM0P,EAAwB/C,GAC1BV,IAAgByD,IACdzD,GAAajQ,GAAG0T,GAClB9D,EAAczW,EAAE,yBAEhByW,EAAc,MACd6D,IAAc,OAGjB,CAACxD,GAAc/C,EAAe/T,EAAGwX,KAEpC,OAAsCjd,oBAAS,GAA/C,qBAAOigB,GAAP,MAAoBC,GAApB,MACA,GAAsClgB,oBAAS,GAA/C,qBAAOmgB,GAAP,MAAoBC,GAApB,MAEA,GAAoCpgB,mBAAS,IAA7C,qBAAOwF,GAAP,MAAmB6a,GAAnB,MACA,GAA8CrgB,oBAAS,GAAvD,qBAAOsgB,GAAP,MAAwBC,GAAxB,MACMC,GAAgBjG,OAAOkG,QAA0C,IAEvEnQ,qBAAU,WAAM,4CACd,gCAAA1I,EAAA,0DACMsT,IAAW1B,GAAmC,QAAlBA,EADlC,uBAEUwG,EAAwB/C,GAFlC,SAG4ByD,YACtBxF,EAAQ1Q,cACRgP,EACAmH,KAAmBvR,GACnB+L,GAPN,OAGUyF,EAHV,OAUQrE,IAAgByD,IACdzD,GAAa3R,GAAGgW,GAClBV,IAAe,GAEfA,IAAe,IAdvB,WAmBM1G,IAAiByD,GAnBvB,iCAoBgC4D,aACR,QAAlBrH,EAA0BsH,KAAe1R,GAAWrO,IAAOgZ,MAAMgH,WAAWvH,GAC5EyD,IAtBN,OAoBU+D,EApBV,OAwBIX,GAAcW,GAEVzG,OAAOyG,GAAiBR,GAC1BD,IAAmB,GAEnBA,IAAmB,GA7BzB,wBAgCIA,IAAmB,GACnBF,GAAc,IAjClB,6CADc,uBAAC,WAAD,wBAqCdY,KACC,CAAC1E,GAAc/C,EAAe/T,EAAGwX,GAAkB/B,EAAS9L,EAAS+L,EAASqF,KAGjFlQ,qBAAU,WACR,GAngBW,IAmgBPgJ,GAlgBK,IAkgB0BA,EACjC,OAAO,WACLoC,EAAkB,CAAEzU,KAAM,mBAAoBkT,QAAS,UAG1D,CAACb,IAEJ,OAAgCtZ,oBAAS,GAAzC,qBAAOkhB,GAAP,MAAiBC,GAAjB,MAUM1C,GARa7I,GACjBqH,GACAnH,GACAqH,GAAmBpc,IAAOgZ,MAAMtE,WAAW0H,GAAiBrI,aAAasJ,UAAWpI,IAAkB,KACtGA,GApgBgB,MAqgBhByD,GAII2H,GAAuBlH,GAASuE,IAEhC4C,GA3gBY,MA4gBhB5H,EACIe,GAAiBuE,GAAaqC,IAC9B5G,GAAiBO,EAAS0D,IAE1B6C,GAAsBD,IAAaA,GAAU/U,GAAGvL,IAAOC,UAAUC,KAAK,GAAG0Z,IAAIwE,KAC7EoC,GAAqBtH,YAAgBoH,GAAW,GAAI,GAAG,GAEvDG,GAAU1G,IAAsBmB,IAAeoD,GAE/CoC,GAAa,WAAOhc,EAAE,aAAT,KACnB,SAASic,GAAcpc,GACrB,MAAM,YAAN,OAAmBA,GAErB,OAAkCtF,oBAAS,GAA3C,qBAAO2hB,GAAP,MAAkBC,GAAlB,MAxRwD,8CA0RxD,kDAAAha,EAAA,6DAEEia,IAAQ7V,MAAM,CACZ8V,SAAU,QACVjI,OAAQ,UAGVjF,EAAcqI,GACd8E,EAAgBjH,EAChBkH,EAAiBrI,EACb5Y,IAAOC,UAAUC,KAAKF,IAAOgZ,MAAMtE,WAAWkE,EAAe3D,KAC7DjV,IAAOC,UAAUC,KAAK,GAX5B,SAeQiH,EAAWnH,IAAOC,UAAUC,KAAK,KAfzC,SAgB2BsW,GAAYoE,EAAiBnE,UAhBxD,UAgBUC,EAhBV,OApiBmB,IAsjBX0E,EAlBR,iBAmBM8F,EAAenB,KAAe1R,GAC9B8S,EAAa/I,EApBnB,2BAniBmB,IAwjBJgD,EArBf,oBAsBUgG,OAAO3I,GAAehP,gBAAkBsW,KAAe1R,GAAS5E,cAtB1E,6BAuBmBtC,EAvBnB,UAuBsC6T,EAAaqG,YAAYC,SAASzN,EAAa,CAAE6C,aAvBvF,2BAuBQvP,EAvBR,KAuB4BmN,IAvB5B,0BAwBoB0G,EAAasG,SAASzN,EAAa,CAC7C1M,WACAuP,aA1BV,eAwBQ5H,EAxBR,yCAgCQ0L,EAAqB,mEACrBF,GAAe,GAjCvB,mDAliBqB,IAskBNc,IACT8F,EAAezI,EACf0I,EAAa/I,GAtCnB,WAyCSZ,GAAiB+J,SAASJ,EAAW1X,eAzC9C,wBA0CM+Q,EACE,gGAEFF,GAAe,GA7CrB,8BAiDQ4G,EAAazX,gBAAkB0X,EAAW1X,cAjDlD,wBAkDM+Q,EAAqB,+CACrBF,GAAe,GAnDrB,kCAuDQkH,EAAQ,CACVC,UAAWtH,EAAQ1Q,cACnBiY,WAAYR,EAAazX,cACzBkY,YAAaR,EAAW1X,cACxBoK,YAAaA,EACb+N,gBAAiBZ,EACjBC,eAAgBA,GAGZY,EAAUC,YAAWN,GAhE/B,UAiE4B5G,EAAiBmH,UAAUF,GAjEvD,oBAmEsBG,KAnEtB,oBApiBmB,IAwmBT5G,EApEV,6BAqEmBjU,EArEnB,UAsEgB2T,EAAoBuG,YAAYY,iBACpC9H,EAAQ1Q,cACR0X,EAAW1X,cACXuX,EACAC,EACA,CACE1c,MAAOsP,EACP6C,aA7Ed,2BAqEQvP,EArER,KAqE4BmN,IArE5B,0BAkFoBwG,EAAoBmH,iBAC9B9H,EAAQ1Q,cACR0X,EAAW1X,cACXuX,EACAC,EACA,CACE1c,MAAOsP,EACP1M,WACAuP,aA1FZ,QAkFQ5H,EAlFR,gDA8FgC6Q,YACtBxF,EAAQ1Q,cACRyX,EACAtB,KAAmBvR,GACnB+L,GAlGV,mBAqGsB7O,GAAGsI,GArGzB,kCAsGsCqO,YAAiBhB,EAAc9G,EAASD,GAtG9E,eAsGgBrV,EAtGhB,YAwGqBqC,EAxGrB,UAyGkBrC,EAAcuc,YAAYta,QAAQ6Y,KAAmBvR,GAAUrO,IAAOgH,UAAUC,WAAY,CAChGyP,aA1Gd,2BAwGUvP,EAxGV,KAwG8BmN,IAxG9B,0BA8G2BxP,EAAciC,QAAQ6Y,KAAmBvR,GAAUrO,IAAOgH,UAAUC,WAAY,CAC/FE,WACAuP,aAhHZ,eA8GgByL,EA9GhB,OAkHU9C,IAAe,GAlHzB,UAmHgB8C,EAAGC,OAnHnB,QAoHUjD,IAAe,GACfE,IAAe,GArHzB,oBAwHmBlY,EAxHnB,UAyHgByT,EAAiByG,YAAYgB,YACjClI,EAAQ1Q,cACRyX,EAAazX,cACb0X,EAAW1X,cACXoK,EACAmN,EACAC,EACA,CACEvK,aAjId,2BAwHQvP,EAxHR,KAwH4BmN,IAxH5B,0BAsIoBsG,EAAiByH,YAC3BlI,EAAQ1Q,cACRyX,EAAazX,cACb0X,EAAW1X,cACXoK,EACAmN,EACAC,EACA,CACE9Z,WACAuP,aA/IZ,QAsIQ5H,EAtIR,mBAoJUA,EAAIwT,KApJd,wBAqJQzB,IAAa,GAEbW,EAAMK,QAAUA,EAEhBxc,EAAeyJ,EAAK,CAAEgK,OAAQyJ,KAAoBf,MAAOA,IAzJjE,UA2Jc1S,EAAIsT,OA3JlB,QA4JQvB,IAAa,GA5JrB,gCA+JMrG,EAAqB,gDACrBF,GAAe,GAhKrB,2DAmKIE,EAAqB,KAAE1N,KAAO,KAAEA,KAAKwC,QAAU,KAAEA,SACjDgL,GAAe,GACf+E,IAAe,GACfwB,IAAa,GAtKjB,4DA1RwD,sBAocxD,OAA8B5hB,mBAAS,IAAhCujB,GAAP,qBAEM5e,GAAc6e,eAEpB,OACE,oCACE,kBAAC/e,GAAD,CACEhG,MAAOgH,EAAE,SACTd,YAAaA,GACbI,UAAW2X,IAAyBgF,GAAchF,IAClD1X,qBAAsB,WACpB,GAAIuX,IAAgBzG,GAAe,CACjC,IAAM2N,EAA+B,QAAlBjK,EAA0B+C,GAAa5B,IAAI5Z,IAAOgZ,MAAM2J,WAAW,OAASnH,GAC3FkH,EAAW7Y,GAAG7J,IAAOgH,UAAU0X,OACjC/D,EAAkB,CAChBzU,KAAM,qBACNkT,QAAS,CAAE7U,MAAO2U,YAAgBwJ,EAAY3N,GAAeA,IAAe,GAAQsE,MAluBtF,OAuuBNvV,mBAAoB,SAAC2U,GACnBkC,EAAkB,CAAEzU,KAAM,kBAAmBkT,QAAS,CAAEtF,SAAU2E,EAAeY,MAxuB7E,MA0uBN1V,cAAe,SAACmR,GACd6F,EAAkB,CAAEzU,KAAM,qBAAsBkT,QAAS,CAAE7U,MAAOuQ,EAAYuE,MA3uB1E,MA6uBN5U,WAAYA,GAAa,KAAOA,GAAWme,QAAQ,GAAK,KACxDte,WAAYA,GACZue,eAAgB,CAACpK,EAAeL,GAChC/T,qBAAsBoU,EACtBlU,MAAO4X,GACPjY,aAAcgX,IAlvBR,IAkvBkC3C,EAA6B+F,GAAmB,MAG1F,kBAAC1S,GAAD,KACE,kBAAC6L,GAAD,KACE,kBAACI,GAAD,CACEC,YA5uBS,MA4uBIY,EAA0BlM,GAAWP,GAClD8L,KAAMW,EACNhT,QAAS,WACPiV,EAAkB,CAAEzU,KAAM,kBAE5ByR,WAAS,EACT/X,IAAI,OACJgY,OAAQ6I,OAKd,kBAAC/c,GAAD,CACEhG,MAAOgH,EAAE,QACTF,sBAAsB,EACtBR,UACE8Z,IAA0BE,IAAeD,GAAzC,YACSD,GADT,cACqC5E,YAAgB8E,GAAa,GAAI,GAAG,GADzE,YACmFD,IAC/E,IAEN9Z,qBAAsB,WACpB0W,EAAkB,CAAEzU,KAAM,kBAE5B3B,MAAOsZ,IAAiB,GACxBla,cAAe,SAACmf,GACdnI,EAAkB,CAAEzU,KAAM,qBAAsBkT,QAAS,CAAE7U,MAAOue,EAAWzJ,MA/wB1E,QAmxBP,kBAACzN,GAAD,KACE,kBAACoM,GAAD,CACEtS,QAAS,WACP0a,IAAY,SAACD,GAAD,OAAeA,OAM5B1B,GACC,iBAlxBQ,MAmxBN/F,GAnxBM,MAyxBNA,EALF,8BACGyF,GAAa,YACL7C,EADK,cACYpC,YAAgBiF,GAAe,GAAI,GAAG,GADlD,YAC4D5C,IACtE,OASN,8BACG4C,GAAa,YACL5C,GADK,cACarC,YAAgBiF,GAAe,GAAI,GAAG,GADnD,YAC6D7C,GACvE,QAKV,kBAAC7D,GAAD,KACE,kBAACC,GAAD,CACEhS,QAAS,WACPiV,EAAkB,CAAEzU,KAAM,sBAE5ByR,WAAS,EACT/X,IAAI,OACJgY,OAAQ6I,OAKd,kBAAC/c,GAAD,CACEhG,MAAOgH,EAAE,UACTd,YAAaA,GACbG,YAAa2c,GACb1c,UAAW6X,IAA0B8E,GAAc9E,IACnD/X,mBAAoB,SAACsU,GACnBuC,EAAkB,CAAEzU,KAAM,kBAAmBkT,QAAS,CAAEtF,SAAUsE,EAAgBiB,MAt0B7E,KAu0BLsB,EAAkB,CAAEzU,KAAM,qBAAsBkT,QAAS,CAAE7U,MAAO4X,GAAqB9C,MAx0BnF,MA00BN1V,cAAe,SAACqR,GACd2F,EAAkB,CAAEzU,KAAM,qBAAsBkT,QAAS,CAAE7U,MAAOyQ,EAAaqE,MA10B1E,MA40BPwJ,eAAgB,CAACpK,EAAeL,GAChC/T,qBAAsB+T,EACtB7T,MAAOuV,EACP5V,aA/0BO,IA+0BOqU,EAA8B+F,GAAmB,GAC/Dna,eAAa,IAGf,yBAAK4e,UAAU,aACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBAGjB,kBAACrf,GAAD,CACEhG,MAAOgH,EAAE,aACTF,sBAAsB,EACtBb,cAAe,SAACqR,GACd2F,EAAkB,CAAEzU,KAAM,kBAAmBkT,QAASpE,KAExDzQ,MAAOqU,EACPzU,eAAa,GAEZ,KAGH,kBAACyH,GAAD,CAAgBE,YAAU,GACxB,kBAACkM,GAAD,CACEtS,QAAS,WACP0a,IAAY,SAACD,GAAD,OAAeA,OAG7B,kBAAClI,GAAD,KAAevT,EAAE,iBAChByb,GACC,8BACGzC,GAAY,YACJpC,EADI,cACapC,YAAgBwE,GAAc,GAAI,GAAG,GADlD,YAC4DnC,IACrE,OAGN,8BACGmC,GAAY,YACJnC,GADI,cACcrC,YAAgBmH,GAAsB,GAAI,GAAG,GAD3D,YACqE/E,GAC9E,SAMZ,kBAACpD,GAAD,KACE,kBAAC,IAAD,CACE8K,UAAW7I,IAAYsG,IAAmC,YAAxB+B,GAClC9c,QAjnBgD,4CAknBhDud,QAAS1C,IAAuB5B,IAAgD,YAAxB6D,IAE/B,YAAxBA,GACG9d,EAAE,eACF0c,OAAO3I,GAAehP,gBAAkBsW,KAAe1R,GAAoB,KAAK5E,eA/3BzE,IAg4BP2R,EACA1W,EAAE,UAGAA,EAFFwa,GACAE,GACI,eACA,UACJwB,GACE,aACA,WAGTJ,IACC,yBAAKuC,UAAU,qBACZvC,GAAmB0C,WAAW,KAC3Bxe,EAAE,aAAc,CAAE4b,UAAWE,KAC7B9b,EAAE,aAAc,CAAE4b,UAAWE,MAGpCjB,GACC,yBAAKwD,UAAU,oBACb,0BAAMxjB,KAAK,MAAMC,aAAW,WAA5B,gBADF,iDAIiDigB,GAC/C,kBAAC,IAAD,CACE9Z,MAAM,yFACNtG,MAAO,CACLuG,WAAY,wBACZC,MAAO,QACPC,OAAQ,OACRC,aAAc,OACdC,QAAS,YACTC,UAAW,UAGb,kBAAC,GAAD,CAAO5G,MAAO,CAAE8jB,WAAY,QAAUvjB,IAAI,YAAYC,IAAKujB,KAAU1kB,KAAK,WAG5E,KAkBH6b,EACC,kBAACpE,GAAD,CACEvO,OAAQyS,EACRxS,UAAW,WACT2S,EAAqB,IACrBF,GAAe,IAEjBhL,QAASiL,IAET,M,iDEr9BJ8I,GAAe7kB,UAAOkC,IAAV,iGACP,cAAGQ,SAAH,IAAab,EAAb,EAAaA,MAAb,OAAqCA,EAAMc,aAKhDmiB,GAAQ9kB,UAAOkC,IAAV,oaAcC,gBAAGL,EAAH,EAAGA,MAAH,0BAA4BA,EAAMe,gBACxB,qBAAGf,MAAkBW,gBAGrCuiB,GAAS/kB,UAAOkC,IAAV,iDAKN8iB,GAAahlB,mBAFO,SAAC,GAAD,EAAGmZ,UAAH,EAAcC,OAAd,IAAyB5Y,EAAzB,yBAAoC,kBAAC,GAAD,iBAAeA,EAAf,CAAqBykB,UAAU,mBAE1EjlB,CAAH,6GACL,qBAAG6B,MAAkBG,cAMzB,SAASkjB,GAAU/lB,GACxB,IAAQ+G,EAAMC,cAAND,EACA2J,EAAY6L,cAAZ7L,QAEFmT,EAAQ7jB,EAAM6jB,MAGdE,EAAaF,EAAME,aAAeiC,KAAYla,cAAgB,MAAQzJ,IAAOgZ,MAAMgH,WAAWwB,EAAME,YACpGC,EACJH,EAAMG,cAAgBgC,KAAYla,cAAgB,MAAQzJ,IAAOgZ,MAAMgH,WAAWwB,EAAMG,aAE1F,EAAuD1c,aAAgByc,GAAvDkC,EAAhB,EAAQpc,OAA8Bqc,EAAtC,EAA4B/a,SAC5B,EAAmD7D,aAAgB0c,GAAnDmC,EAAhB,EAAQtc,OAA4Buc,EAApC,EAA0Bjb,SAC1B,EAAwBkb,aAAqBxC,GAArC/S,EAAR,EAAQA,MAAOwV,EAAf,EAAeA,KAETC,EAAYzV,IAAU0V,KACtBC,EAAU3V,IAAU8T,KAEpB3H,EAAmBC,cACnBxV,EAAiBC,eAnBQ,4CAqB/B,WAAwBkc,EAAO4C,GAA/B,qBAAAvd,EAAA,6DACUgb,EAA8BL,EAA9BK,QAASwC,EAAqB7C,EAArB6C,iBADnB,SAEyB7N,GAAYoE,EAAiBnE,UAFtD,cAEQC,EAFR,gBAGuBkE,EAAiByG,YAAYiD,YAChDzC,EACAwC,EACA,CACE3N,aAPN,OAUEvP,GAPIA,EAHN,QAUsBmN,IAAItU,IAAOC,UAAUC,KAAK,MAE9C0a,EACG0J,YACCzC,EACAwC,EACA,CACEld,WACAuP,aAGHrP,MAAK,SAAAC,GACJjC,EAAeiC,EAAU,CAAEwR,OAAQqL,KAAqB3C,MAAOA,OAtBrE,4CArB+B,sBA+C/B,IAAM3N,EAAc7T,IAAOC,UAAUC,KACb,MAAtBshB,EAAM3N,aAAwB2N,EAAM+C,eAAqC/C,EAAM+C,eAA1B/C,EAAM3N,aAEvD+N,EAAkB5hB,IAAOC,UAAUC,KAAKshB,EAAMI,iBAC9CX,EAAiBjhB,IAAOC,UAAUC,KAAKshB,EAAMP,gBAE7CuD,EAAeP,EAAOQ,YAAiBpW,EAAS4V,EAAK3c,SAASgb,KAAM,oBAAiB7iB,EAErFilB,EAAa7P,GAAgBhB,EAAagQ,EAAcjC,EAAiBmC,GAAY,GACrFY,EAAa9P,GAAgBhB,EAAagQ,EAAcjC,EAAiBmC,GAAY,GAE3F,EAAsC9kB,mBAAS,IAA/C,mBAAO2lB,EAAP,KAAoBC,EAApB,KAEMC,EAAU,uCAAG,kCAAAje,EAAA,sEACQ+T,EAAiBmK,cAAcvD,EAAME,YAD7C,cACXsD,EADW,gBAESpK,EAAiBqK,iBAAiBzD,EAAME,YAFjD,OAEXwD,EAFW,OAIXC,EAAoB3L,OAAOwL,GAAc,EAC7ChlB,IAAOC,UAAUC,KAAKshB,EAAM4D,QACzBhQ,IAAIpV,IAAOC,UAAUC,KAAK8kB,IAC1BtkB,IAAIV,IAAOC,UAAUC,KAAKglB,IAC3BllB,IAAOC,UAAUC,KAAK,KAEpB0kB,EAAcO,EAAkBtb,GAAG,GAAKsb,EAAkBvL,IAAI/F,GAAe7T,IAAOC,UAAUC,KAAK,KACzG2kB,EAAeD,GAXE,2CAAH,qDA8DhB,OACE,kBAACtB,GAAD,CAAOP,UAAS,gBAAWvB,EAAM6D,SAC/B,yBAAKtC,UAAU,UACb,kBAAC9hB,GAAD,CAAgBC,UAAU,GACxB,kBAACI,GAAD,KACG,kBAACzC,EAAD,CAAWC,QAAS4iB,EAAY3iB,QAAQ,KACxC,kBAACwE,GAAD,KAAkBqgB,KAGvB,kBAACtiB,GAAD,KACE,kBAACkiB,GAAD,CAAYC,UAAU,iBAExB,kBAACxiB,GAAD,CAAgBC,UAAU,GACxB,kBAACI,GAAD,KACG,kBAACzC,EAAD,CAAWC,QAAS6iB,EAAa5iB,QAAQ,KACzC,kBAACwE,GAAD,KAAkBugB,KAGvB,kBAACP,GAAD,MACA,kBAACtiB,GAAD,CACEC,UAAU,EACV8hB,SAAUkB,EACVxe,QAAS,kBAhJc,6CAgJR4f,CAAS9D,EAAO4C,KAE/B,kBAACf,GAAD,KACEa,GACED,GACAA,EAAK3c,SAASie,YAAY/D,MAAMK,UAAYL,EAAMK,QAChD,iBACAnd,EAAE,aAGL,IACP,2CACYwU,YAAgBrF,EAAagQ,EAAc,IADvD,IAC8DD,GAE9D,8CACe1K,YAAgB0I,EAAiBmC,EAAY,IAD5D,IACmED,GAEnE,+CACgB5K,YAAgB+H,EAAgB8C,EAAY,IAD5D,IACmED,GAEnE,2CACY5K,YAAgBwL,EAAY,GAAI,IAD5C,IACmDd,EADnD,IACgEE,EADhE,MAC6E5K,YAAgByL,EAAY,GAAI,GAAI,IAC9Gb,EAFH,IAEcF,GAEd,2BACE,oDACA,8BACGgB,EAAc,EACb,wCAAU1L,YAAgB0L,EAAaf,EAAc,IAArD,IAA4DD,EAA5D,0BAEA,0BACE1iB,UAAU,EACVwE,QAAS,kBAAMof,KACfzlB,MAAO,CAAEmmB,OAAQ,UAAWC,eAAgB,YAAa5f,MAAO,YAHlE,WAuBN,2BACGoe,GACCA,EAAK3c,SAASie,YAAY/D,MAAMK,UAAYL,EAAMK,SAEhD,uBAAG6D,IAAI,sBAAsBtpB,OAAO,SAASupB,KAAMnB,EAAczB,UAAU,cAA3E,4B,wECzPNO,GAAQ9kB,UAAOkC,IAAV,oaAcC,gBAAGL,EAAH,EAAGA,MAAH,0BAA4BA,EAAMe,gBACxB,qBAAGf,MAAkBW,gBAGrCuiB,GAAS/kB,UAAOkC,IAAV,iDAKN8iB,GAAahlB,mBAFO,SAAC,GAAD,EAAGmZ,UAAH,EAAcC,OAAd,IAAyB5Y,EAAzB,yBAAoC,kBAAC,GAAD,iBAAeA,EAAf,CAAqBykB,UAAU,mBAE1EjlB,CAAH,6GACL,qBAAG6B,MAAkBG,cAMzB,SAASolB,GAAcjoB,GAC5B,IAAQ0Q,EAAY6L,cAAZ7L,QAEFmT,EAAQ7jB,EAAMmP,KAEd4U,EAAaF,EAAME,aAAeiC,KAAYla,cAAgB,MAAQzJ,IAAOgZ,MAAMgH,WAAWwB,EAAME,YACpGC,EACJH,EAAMG,cAAgBgC,KAAYla,cAAgB,MAAQzJ,IAAOgZ,MAAMgH,WAAWwB,EAAMG,aAE1F,EAAuD1c,aAAgByc,GAAvDkC,EAAhB,EAAQpc,OAA8Bqc,EAAtC,EAA4B/a,SAC5B,EAAmD7D,aAAgB0c,GAAnDmC,EAAhB,EAAQtc,OAA4Buc,EAApC,EAA0Bjb,SAEpB+c,EAA6B,cAAjBrE,EAAM6D,OAClBS,EAA4B,aAAjBtE,EAAM6D,OAEjBxR,EAAc7T,IAAOC,UAAUC,KAAKshB,EAAM3N,aAC1C+N,EAAkB5hB,IAAOC,UAAUC,KAAKshB,EAAMI,iBAE9C4C,EAAeC,YACnBpW,EACAwX,EAAYrE,EAAMuE,gBAAkBvE,EAAMwE,eAC1C,eAGF,OACE,kBAAC,GAAD,CAAOjD,UAAS,gBAAWvB,EAAM6D,SAC/B,yBAAKtC,UAAU,UACb,kBAAC9hB,GAAD,CAAgBC,UAAU,GACxB,kBAACI,GAAD,KACG,kBAACzC,EAAD,CAAWC,QAAS4iB,EAAY3iB,QAAQ,KACxC,kBAACwE,GAAD,KAAkBqgB,KAGvB,kBAACtiB,GAAD,KACE,kBAAC,GAAD,CAAYmiB,UAAU,iBAExB,kBAACxiB,GAAD,CAAgBC,UAAU,GACxB,kBAACI,GAAD,KACG,kBAACzC,EAAD,CAAWC,QAAS6iB,EAAa5iB,QAAQ,KACzC,kBAACwE,GAAD,KAAkBugB,KAGvB,kBAAC,GAAD,OAEDgC,GACC,oCACE,2CACY5M,YAAgBrF,EAAagQ,EAAc,IADvD,IAC8DD,GAQ9D,2CAAa,IAAIqC,KAAuB,IAAlBzE,EAAM0E,WAAkBC,uBAC9C,uBAAGT,IAAI,sBAAsBtpB,OAAO,SAASupB,KAAMnB,EAAczB,UAAU,cAA3E,aAKH8C,GACC,oCACE,2CACY3M,YAAgBrF,EAAagQ,EAAc,IADvD,IAC8DD,GAE9D,+CACgB1K,YAAgB0I,EAAiBmC,EAAY,IAD7D,IACoED,GAEpE,2CAAa,IAAImC,KAAuB,IAAlBzE,EAAM0E,WAAkBC,uBAC9C,uBAAGT,IAAI,sBAAsBtpB,OAAO,SAASupB,KAAMnB,EAAczB,UAAU,cAA3E,eC5GH,SAASqD,KACd,MAA6BlM,cACvBmM,EAWR,SAAuBlM,EAAS9L,GAC9B,MAA0BpP,mBAAS,IAAnC,mBAAOwP,EAAP,KAAc6X,EAAd,KAUA,OARA/W,qBAAU,WACJ4K,GAAWza,YAAUya,I,8CACvBoM,CAAoBpM,EAAS9L,GAAShH,MAAK,SAAAgf,GACzCC,EAASD,QAGZ,CAAClM,EAAS9L,IAENI,EAtBQ+X,CADf,EAAQrM,QAAR,EAAiB9L,SAEjB,OAAOgY,EAAO9pB,OAAS,EACrB,oCACE,uBAAG8C,MAAO,CAAE4G,UAAW,OAAQyB,SAAU,SAAzC,WACC2e,EAAOhe,KAAI,SAAAmZ,GAAK,OACf,kBAACoE,GAAD,CAAenpB,IAAK+kB,EAAMnW,GAAIyB,KAAM0U,QAGtC,K,8CAiBN,WAAmCrH,EAAS9L,GAA5C,mBAAAxH,EAAA,qcAqBsBgQ,MAAM4P,KAAYpY,GAAU,CAC5CqY,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM1X,KAAKC,UAAU,CAAE0X,MAxB7B,uXAwBoCC,UAAW,CAAEC,MAAO5M,EAAQ1Q,mBAxBhE,cAqBUqF,EArBV,gBA2B2BA,EAAIgI,OA3B/B,uBA2BYhK,EA3BZ,EA2BYA,KA3BZ,kBA4BWA,EAAKuZ,QA5BhB,yCA8BIjX,QAAQ4X,KAAK,qCAAb,MA9BJ,kBA+BW,IA/BX,2D,sBCnBA,IAAMxjB,GAAiBhF,kBAAOiF,IAAPjF,CAAH,8D,SAqBLyoB,G,mFAAf,WAA+B9M,EAAS9L,GAAxC,mBAAAxH,EAAA,6eAwBsBgQ,MAAM4P,KAAYpY,GAAU,CAC5CqY,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM1X,KAAKC,UAAU,CAAE0X,MA3B7B,+ZA2BoCC,UAAW,CAAEC,MAAO5M,EAAQ1Q,mBA3BhE,cAwBUqF,EAxBV,gBA8B2BA,EAAIgI,OA9B/B,uBA8BYhK,EA9BZ,EA8BYA,KA9BZ,kBAgCW,CACLoa,UAAW,GACXC,WAAYra,EAAKuZ,SAlCvB,yCAqCIjX,QAAQ4X,KAAK,qCAAb,MArCJ,kBAsCW,CACLE,UAAW,GACXC,WAAY,KAxClB,2D,sBAoHe,SAASC,KACtB,IAAQ1iB,EAAMC,cAAND,EACR,EAA6BwV,cAArBC,EAAR,EAAQA,QAAS9L,EAAjB,EAAiBA,QAEjB,EAA4BpP,mBAAS,IAArC,mBAAOonB,EAAP,KAAegB,EAAf,KACA,EAA8BpoB,oBAAS,GAAvC,mBAAOgO,EAAP,KAAgBqa,EAAhB,KAEA/X,qBAAU,WACR+X,GAAYnN,KACX,CAACA,IAEJ,IAAIoN,EAAgBC,eAChBC,EAAsBC,eAMpBC,EAhER,SAAwBxN,EAAS9L,GAAqB,IAAZuZ,EAAW,uDAAJ,GAC/C,EAA0B3oB,mBAAS,CAAEkoB,WAAY,GAAID,UAAW,GAAIW,aAAc,KAAlF,mBAAOpZ,EAAP,KAAc6X,EAAd,KAqBA,OAnBA/W,qBAAU,WACRH,QAAQC,IAAR,yCACI8K,GAAWza,YAAUya,IACvB2N,YAAW,WACTb,GAAgB9M,EAAS9L,GAAShH,KAAlC,uCAAuC,WAAOgf,GAAP,SAAAxf,EAAA,sDACrCuI,QAAQC,IAAR,kBAAuBgX,EAAOa,UAAU3qB,OAAxC,YAAkD8pB,EAAOc,WAAW5qB,OAApE,2BAGA+pB,EAAS,CAEPY,UAAWb,EAAOa,UAClBC,WAAYd,EAAOc,aAPgB,2CAAvC,yDAUC,OAdE,uBAiBFS,GAjBE,CAiBIzN,EAAS9L,KAEfI,EA0COsZ,CAAe5N,EAAS9L,EAAS,CAACkZ,EAAchrB,OAAQkrB,EAAoBlrB,SAuB1F,OApBAgT,qBAAU,WAUR8X,EAAUM,EAAMR,cAEf,CAIDQ,EAAMR,WAAW5qB,OACjBgrB,EAAchrB,SAId,oCACG4d,GACC,oCACE,oCACE,uBAAG4I,UAAU,gBAAb,UAAgCre,EAAE,UAAlC,YAA+C2hB,EAAO9pB,OAAS,EAAhB,WAAwB8pB,EAAO9pB,OAA/B,KAA2C,KACzF0Q,GACC,oCACE,kBAAC,GAAD,CAAgBpN,IAAKyL,KAAQ1L,IAAI,WADnC,eAEE,6BACA,8BAGe,IAAlBymB,EAAO9pB,SAAiB0Q,GAAW,2BAAIvI,EAAE,iBAExC,6BACG2hB,EAAOhe,KAAI,SAACmZ,GAAD,OACV,kBAAC,GAAD,CACE/kB,IAAK+kB,EAAMK,QACXL,MAAOA,SASjB,kBAAC4E,GAAD,QCzNK,SAAS4B,GAAT,GAAoC,IAApB/N,EAAmB,EAAnBA,gBAC7B,OAAO,oCACL,kBAAC,GAAD,CAAcA,gBAAiBA,IAC/B,kBAACmN,GAAD","file":"static/js/6.0332aa32.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgDropdown = function SvgDropdown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#AEAEAE\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown.7d32d2fa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from '../../utils'\n\n// import { ReactComponent as EthereumLogo } from '../../assets/images/ethereum-logo.svg'\n\nconst TOKEN_ICON_API = address =>\n  `https://raw.githubusercontent.com/sushiswap/assets/master/blockchains/polygon/assets/${isAddress(address)}/logo.png`\nconst BAD_IMAGES = {}\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 1rem;\n`\n\nconst Emoji = styled.span`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\n// const StyledEthereumLogo = styled(EthereumLogo)`\n//   width: ${({ size }) => size};\n//   height: ${({ size }) => size};\n// `\n\nexport default function TokenLogo({ address, logoURI, size = '1rem', ...rest }) {\n  const [error, setError] = useState(false)\n\n  let path = ''\n  if (address === 'ETH') {\n    // return <StyledEthereumLogo size={size} />\n    path = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0/logo.png\"\n  } else if (!error && !BAD_IMAGES[address]) {\n    path = logoURI === \"\" || logoURI === undefined ? TOKEN_ICON_API(address) : logoURI;\n  } else {\n    return (\n      <Emoji {...rest} size={size}>\n        <span style={{ lineHeight: 0 }} role=\"img\" aria-label=\"Thinking\">\n          🌕\n        </span>\n      </Emoji>\n    )\n  }\n\n  return (\n    <Image\n      {...rest}\n      alt={address}\n      src={path}\n      size={size}\n      onError={() => {\n        BAD_IMAGES[address] = true\n        setError(true)\n      }}\n    />\n  )\n}\n","import React, { useState, useRef, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport escapeStringRegex from 'escape-string-regexp'\nimport { darken } from 'polished'\nimport Tooltip from '@reach/tooltip'\nimport '@reach/tooltip/styles.css'\nimport { isMobile } from 'react-device-detect'\n\nimport { BorderlessInput } from '../../theme'\nimport { useTokenContract } from '../../hooks'\nimport { isAddress, calculateGasMargin, formatToUsd, formatTokenBalance, formatEthBalance } from '../../utils'\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport Modal from '../Modal'\nimport TokenLogo from '../TokenLogo'\nimport SearchIcon from '../../assets/images/magnifying-glass.svg'\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions'\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { transparentize } from 'polished'\nimport { Spinner } from '../../theme'\nimport Circle from '../../assets/images/circle-grey.svg'\nimport { useUSDPrice } from '../../contexts/Application'\n\nconst GAS_MARGIN = ethers.BigNumber.from(1000)\n\nconst SubCurrencySelect = styled.button`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 4px 50px 4px 15px;\n  margin-right: -40px;\n  line-height: 0;\n  height: 2rem;\n  align-items: center;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  background: ${({ theme }) => theme.zumthorBlue};\n  border: 1px solid ${({ theme }) => theme.royalGreen};\n  color: ${({ theme }) => theme.royalGreen};\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  background-color: ${({ theme }) => theme.inputBackground};\n  -moz-appearance: textfield;\n`\n\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 2.5rem;\n  flex-shrink: 0;\n  text-align: left;\n  padding-left: 1.6rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport const CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalGreen)};\n  height: 2rem;\n  border: 1px solid ${({ selected, theme }) => (selected ? theme.mercuryGray : theme.royalGreen)};\n  border-radius: 2.5rem;\n  background-color: #fafafa;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({ selected, theme }) => (selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalGreen))};\n  }\n\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.1, theme.royalGreen)};\n  }\n`\n\nexport const Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalGreen)};\n  }\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n  :focus-within {\n    border: 1px solid ${({ theme }) => theme.malibuGreen};\n  }\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.doveGray)};\n  }\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst ErrorSpan = styled.span`\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({ error, theme }) => error && darken(0.1, theme.salmonRed)};\n  }\n`\n\nconst TokenModal = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  width: 100%;\n`\n\nconst ModalHeader = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 0px 0px 1rem;\n  height: 60px;\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.textColor};\n  }\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst SearchContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: flex-start;\n  padding: 0.5rem 1.5rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst TokenModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`\n\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst TokenModalRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({ theme }) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.tokenRowHover};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0.8rem 1rem;`}\n`\n\nconst TokenRowLeft = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items : center;\n`\n\nconst TokenSymbolGroup = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  margin-left: 1rem;\n`\n\nconst TokenFullName = styled.div`\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowBalance = styled.div`\n  font-size: 1rem;\n  line-height: 20px;\n`\n\nconst TokenRowUsd = styled.div`\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowRight = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: flex-end;\n`\n\nexport const StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n  color: ${({ theme }) => theme.chaliceGray};\n  opacity: 0.6;\n`\n\nexport default function CurrencyInputPanel({\n  onValueChange = () => { },\n  allBalances,\n  renderInput,\n  onCurrencySelected = () => { },\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => { },\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value,\n  showCurrencySelector = true,\n  orderValue\n}) {\n  const { t } = useTranslation()\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const tokenContract = useTokenContract(selectedTokenAddress)\n  const { exchangeAddress: selectedTokenExchangeAddress } = useTokenDetails(selectedTokenAddress)\n\n  const pendingApproval = usePendingApproval(selectedTokenAddress)\n\n  const addTransaction = useTransactionAdder()\n\n  const allTokens = useAllTokenDetails()\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null\n    } else {\n      if (!pendingApproval) {\n        return (\n          <SubCurrencySelect\n            onClick={async () => {\n              const estimatedGas = await tokenContract.estimate.approve(\n                selectedTokenExchangeAddress,\n                ethers.constants.MaxUint256\n              )\n              tokenContract\n                .approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256, {\n                  gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n                })\n                .then(response => {\n                  addTransaction(response, { approval: selectedTokenAddress })\n                })\n            }}\n          >\n            {t('unlock')}\n          </SubCurrencySelect>\n        )\n      } else {\n        return <SubCurrencySelect>{t('pending')}</SubCurrencySelect>\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput()\n    }\n\n    return (\n      <InputRow>\n        <Input\n          type=\"number\"\n          min=\"0\"\n          error={!!errorMessage}\n          placeholder=\"0.0\"\n          step=\"0.000000000000000001\"\n          onChange={e => onValueChange(e.target.value)}\n          onKeyPress={e => {\n            const charCode = e.which ? e.which : e.keyCode\n\n            // Prevent 'minus' character\n            if (charCode === 45) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n          }}\n          value={value}\n        />\n        {renderUnlockButton()}\n        {showCurrencySelector ? (\n          <CurrencySelect\n            selected={!!selectedTokenAddress}\n            onClick={() => {\n              if (!disableTokenSelect) {\n                setModalIsOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {selectedTokenAddress ? <TokenLogo address={selectedTokenAddress} logoURI={allTokens[selectedTokenAddress].logoURI} /> : null}\n              {\n                <StyledTokenName>\n                  {(allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol) || t('selectToken')}\n                </StyledTokenName>\n              }\n              {!disableTokenSelect && <StyledDropDown selected={!!selectedTokenAddress} />}\n            </Aligner>\n          </CurrencySelect>\n        ) : null}\n      </InputRow>\n    )\n  }\n\n  return (\n    <InputPanel>\n      <Container error={!!errorMessage}>\n        <LabelRow>\n          <LabelContainer>\n            <span>{title}</span> <span>{description}</span>\n          </LabelContainer>\n\n          <ErrorSpan\n            data-tip={'Enter max'}\n            error={!!errorMessage}\n            onClick={() => {\n              extraTextClickHander()\n            }}\n          >\n            <Tooltip\n              label=\"Enter Max\"\n              style={{\n                background: 'hsla(0, 0%, 0%, 0.75)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '24px',\n                padding: '0.5em 1em',\n                marginTop: '-64px'\n              }}\n            >\n              <span>{extraText}</span>\n            </Tooltip>\n          </ErrorSpan>\n        </LabelRow>\n        {_renderInput()}\n\n        <LabelRow style={{ paddingTop: 0 }}>\n          <LabelContainer>\n            <span style={{ fontSize: '0.9rem' }}>{orderValue}</span>\n          </LabelContainer>\n        </LabelRow>\n\n      </Container>\n      {!disableTokenSelect && (\n        <CurrencySelectModal\n          isOpen={modalIsOpen}\n          // isOpen={true}\n          onDismiss={() => {\n            setModalIsOpen(false)\n          }}\n          onTokenSelect={onCurrencySelected}\n          allBalances={allBalances}\n        />\n      )}\n    </InputPanel>\n  )\n}\n\nfunction CurrencySelectModal({ isOpen, onDismiss, onTokenSelect, allBalances }) {\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const { name } = useTokenDetails(searchQuery)\n\n  const allTokens = useAllTokenDetails()\n\n  // BigNumber.js instance\n  const ethPrice = useUSDPrice()\n\n  const _usdAmounts = Object.keys(allTokens).map(k => {\n    if (\n      ethPrice &&\n      allBalances &&\n      allBalances[k] &&\n      allBalances[k].ethRate &&\n      !allBalances[k].ethRate.isNaN() &&\n      allBalances[k].balance\n    ) {\n      const USDRate = ethPrice.times(allBalances[k].ethRate)\n      const balanceBigNumber = ethers.BigNumber.from(allBalances[k].balance.toString())\n      const usdBalance = balanceBigNumber.times(USDRate).div(ethers.BigNumber.from(10).pow(allTokens[k].decimals))\n      return usdBalance\n    } else {\n      return null\n    }\n  })\n  const usdAmounts =\n    _usdAmounts &&\n    Object.keys(allTokens).reduce(\n      (accumulator, currentValue, i) => Object.assign({ [currentValue]: _usdAmounts[i] }, accumulator),\n      {}\n    )\n\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens)\n      .filter(k => allTokens[k].symbol)\n      .sort((a, b) => {\n        const aSymbol = allTokens[a].symbol.toLowerCase()\n        const bSymbol = allTokens[b].symbol.toLowerCase()\n\n        if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n          return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1\n        }\n\n        // if (aSymbol === 'WETH'.toLowerCase() || bSymbol === 'WETH'.toLowerCase()) {\n        //   return aSymbol === bSymbol ? 0 : aSymbol === 'WETH'.toLowerCase() ? -1 : 1\n        // }\n\n        if (allBalances) {\n          const aBalance = allBalances[a] ? allBalances[a].balance : null\n          const bBalance = allBalances[b] ? allBalances[b].balance : null\n\n          if (aBalance && !bBalance) {\n            return -1\n          } else if (!aBalance && bBalance) {\n            return 1\n          }\n\n          if (aBalance && aBalance) {\n            if (aBalance.gt(bBalance)) {\n              return -1\n            } else {\n              return 1\n            }\n          }\n        }\n\n        return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0\n      })\n      .map(k => {\n        let balance\n        let usdBalance\n        // only update if we have data\n        if (k === 'ETH' && allBalances && allBalances[k]) {\n          balance = formatEthBalance(allBalances[k].balance)\n          usdBalance = usdAmounts[k]\n        } else if (allBalances && allBalances[k]) {\n          balance = formatTokenBalance(allBalances[k].balance, allTokens[k].decimals)\n          usdBalance = usdAmounts[k]\n        }\n        return {\n          name: allTokens[k].name,\n          symbol: allTokens[k].symbol,\n          address: k,\n          balance: balance,\n          usdBalance: usdBalance,\n          logoURI: allTokens[k].logoURI,\n        }\n      })\n  }, [allBalances, allTokens, usdAmounts])\n\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return (\n          typeof tokenEntry[tokenEntryKey] === 'string' &&\n          !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\n        )\n      })\n\n      return regexMatches.some(m => m)\n    })\n  }, [tokenList, searchQuery])\n\n  function _onTokenSelect(address) {\n    setSearchQuery('')\n    onTokenSelect(address)\n    onDismiss()\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && name === undefined) {\n      return <TokenModalInfo>Searching for Exchange...</TokenModalInfo>\n    }\n    if (!filteredTokenList.length) {\n      return <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n    }\n\n    return filteredTokenList.map(({ address, symbol, name, balance, usdBalance, logoURI }) => {\n      return (\n        <TokenModalRow key={address} onClick={() => _onTokenSelect(address)}>\n          <TokenRowLeft>\n            <TokenLogo address={address} logoURI={logoURI} size={'2rem'} />\n            <TokenSymbolGroup>\n              <span id=\"symbol\">{symbol}</span>\n              <TokenFullName>{name}</TokenFullName>\n            </TokenSymbolGroup>\n          </TokenRowLeft>\n          <TokenRowRight>\n            {balance ? (\n              <TokenRowBalance>{balance && (balance > 0 || balance === '<0.0001') ? balance : '-'}</TokenRowBalance>\n            ) : (\n              <SpinnerWrapper src={Circle} alt=\"loader\" />\n            )}\n            <TokenRowUsd>\n              {usdBalance ? (usdBalance.lt(0.01) ? '<$0.01' : '$' + formatToUsd(usdBalance)) : ''}\n            </TokenRowUsd>\n          </TokenRowRight>\n        </TokenModalRow>\n      )\n    })\n  }\n\n  // manage focus on modal show\n  const inputRef = useRef()\n\n  function onInput(event) {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }\n\n  function clearInputAndDismiss() {\n    setSearchQuery('')\n    onDismiss()\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={clearInputAndDismiss}\n      minHeight={60}\n      initialFocusRef={isMobile ? undefined : inputRef}\n    >\n      <TokenModal>\n        <ModalHeader>\n          <p>Select Token</p>\n          <CloseIcon onClick={clearInputAndDismiss}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n        </ModalHeader>\n        <SearchContainer>\n          <img src={SearchIcon} alt=\"search\" />\n          <StyledBorderlessInput\n            ref={inputRef}\n            type=\"text\"\n            placeholder={isMobile ? t('searchOrPasteMobile') : t('searchOrPaste')}\n            onChange={onInput}\n          />\n        </SearchContainer>\n        <TokenList>{renderTokenList()}</TokenList>\n      </TokenModal>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React from 'react'\n\nconst SVGDiv = props => (\n  <svg version=\"1.1\" style={{ padding: '13px', width: '11px', height: '11px' }} {...props}>\n    <line x1=\"1\" y1=\"9\" x2=\"9\" y2=\"1\" strokeWidth=\"1\" />\n    <line x1=\"1\" y1=\"1\" x2=\"9\" y2=\"9\" strokeWidth=\"1\" />\n  </svg>\n)\n\nexport default SVGDiv\n","import React from 'react'\n\nconst SVGClose = props => (\n  <svg version=\"1.1\" style={{ padding: '13px', width: '11px', height: '11px' }} {...props}>\n    <line x1=\"1\" y1=\"9\" x2=\"9\" y2=\"1\" strokeWidth=\"1\" />\n  </svg>\n)\n\nexport default SVGClose\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React, useBlockNumber } from '../../hooks'\n\nimport { addMulticallListeners, removeMulticallListeners, parseCallKey, toCallKey } from './actions'\n\nfunction isMethodArg(x) {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x) {\n  return (\n    x === undefined || (Array.isArray(x) && x.every(y => isMethodArg(y) || (Array.isArray(y) && y.every(isMethodArg))))\n  )\n}\n\nconst INVALID_RESULT = { valid: false, blockNumber: undefined, data: undefined }\nconst INVALID_CALL_STATE = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(callResult, contractInterface, fragment, latestBlockNumber) {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ? blockNumber : 0) < latestBlockNumber\n  let result = undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result: result,\n    error: !success\n  }\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls, options) {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector(state => state.multicall.callResults)\n  const dispatch = useDispatch()\n\n  const serializedCallKeys = useMemo(() => {\n    try {\n      const res = calls\n        .filter(c => Boolean(c))\n        .map(toCallKey)\n        .sort()\n\n      return JSON.stringify(res ? res : [])\n    } catch (e) {\n      console.log('error ', e.message)\n      return undefined\n    }\n  }, [calls])\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    if (!serializedCallKeys) {\n      return\n    }\n    const callKeys = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return\n    const calls = callKeys.map(key => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options\n      })\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options\n        })\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map(call => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId] ? callResults[chainId][toCallKey(call)] : undefined\n        let data\n        if (result && result.data && result.data !== '0x') {\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result ? result.blockNumber : undefined }\n      }),\n    [callResults, calls, chainId]\n  )\n}\n\nexport function useMultipleContractSingleData(addresses, contractInterface, methodName, callInputs, options) {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n\n  const callData = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map(address => {\n            return address && callData\n              ? {\n                  address,\n                  callData\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map(result => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n","import { Trade, Token, JSBI, Pair, CurrencyAmount, FACTORY_ADDRESS, computePairAddress } from '@sushiswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\nimport { Interface } from '@ethersproject/abi'\nimport { parseUnits } from '@ethersproject/units'\n\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, BETTER_TRADE_LESS_HOPS_THRESHOLD, CUSTOM_BASES, ONE_HUNDRED_PERCENT, ZERO_PERCENT } from '../constants'\nimport PAIR_ABI from '../constants/abis/pair.json'\nimport { useActiveWeb3React } from './index'\nimport { useTokenDetails } from '../contexts/Tokens'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\n\nexport const PairState = {\n  LOADING: 'LOADING',\n  NOT_EXISTS: 'NOT_EXISTS',\n  EXISTS: 'EXISTS',\n  INVALID: 'INVALID'\n}\n\nconst ETHER = {\n  address: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n  chainId: 137,\n  decimals: 18,\n  isNative: false,\n  isToken: true,\n  name: \"Matic Token\",\n  symbol: \"MATIC\"\n}\n\nconst PAIR_INTERFACE = new Interface(PAIR_ABI)\n\nfunction useAllCommonPairs(currencyA, currencyB) {\n  const allCurrencyCombinations = useAllCurrencyCombinations(currencyA, currencyB)\n\n  const allPairs = useV2Pairs(allCurrencyCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result) => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(\n  currencyAddressIn,\n  currencyAmountIn,\n  currencyAddressOut,\n  { maxHops = MAX_HOPS } = {}\n) {\n  const currencyIn = useTokenDetails(currencyAddressIn)\n\n  const currencyOutDetail = useTokenDetails(currencyAddressOut)\n  const currencyOut = currencyAddressOut && currencyOutDetail && currencyOutDetail.decimals\n    ? currencyAddressOut === 'ETH'\n      ? new Token(ETHER.chainId, ETHER.address, ETHER.decimals, ETHER.symbol, ETHER.name)\n      : new Token(\n        currencyOutDetail.chainId,\n        currencyAddressOut,\n        currencyOutDetail.decimals,\n        currencyOutDetail.symbol,\n        currencyOutDetail.name\n      )\n    : undefined\n\n  const currencyInputAmount = tryParseAmount(\n    currencyAmountIn,\n    currencyAddressIn\n      ? currencyAddressIn === 'ETH'\n        ? new Token(ETHER.chainId, ETHER.address, ETHER.decimals, ETHER.symbol, ETHER.name)\n        : new Token(currencyIn.chainId, currencyAddressIn, currencyIn.decimals, currencyIn.symbol, currencyIn.name)\n      : undefined\n  )\n\n  const allowedPairs = useAllCommonPairs(currencyInputAmount ? currencyInputAmount.currency : undefined, currencyOut)\n\n  return useMemo(() => {\n    if (currencyInputAmount && currencyOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyInputAmount, currencyOut, {\n            maxHops: 1,\n            maxNumResults: 1,\n          })[0] ?? null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar = null\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade =\n          Trade.bestTradeExactIn(allowedPairs, currencyInputAmount, currencyOut, {\n            maxHops: i,\n            maxNumResults: 1,\n          })[0] ?? null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyOut, maxHops, currencyInputAmount])\n}\n\nexport function useV2Pairs(currencies) {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          FACTORY_ADDRESS[tokenA.chainId]\n          ? computePairAddress({\n            factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n            tokenA,\n            tokenB,\n          })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { _reserve0, _reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, _reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, _reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA, tokenB) {\n  const inputs = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n\nexport function useAllCurrencyCombinations(currencyA, currencyB) {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId ? [currencyA, currencyB] : [undefined, undefined]\n\n  const bases = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs = useMemo(\n    () => flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase])),\n    [bases]\n  )\n\n  return useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n          // the direct pair\n          [tokenA, tokenB],\n          // token A against all bases\n          ...bases.map((base) => [tokenA, base]),\n          // token B against all bases\n          ...bases.map((base) => [tokenB, base]),\n          // each base against all bases\n          ...basePairs,\n        ]\n          .filter(([t0, t1]) => t0.address !== t1.address)\n          .filter(([tokenA, tokenB]) => {\n            if (!chainId) return true\n            const customBases = CUSTOM_BASES[chainId]\n\n            const customBasesA = customBases?.[tokenA.address]\n            const customBasesB = customBases?.[tokenB.address]\n\n            if (!customBasesA && !customBasesB) return true\n\n            if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n            if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n            return true\n          })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n}\n\nexport function isTradeBetter(\n  tradeA,\n  tradeB,\n  minimumDelta = ZERO_PERCENT\n) {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeB.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Comparing incomparable trades')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  } else {\n    return tradeA.executionPrice.asFraction\n      .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n      .lessThan(tradeB.executionPrice)\n  }\n}\n\nexport function tryParseAmount(value, currency) {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n","import { ethers } from 'ethers'\n\nexport function getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from '../Row'\nimport { AlertTriangle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { ButtonPrimary } from '../Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport Modal from '../Modal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nexport function ConfirmationModalContent({\n  title,\n  onDismiss,\n  message\n}) {\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            {title}\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        {message}\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorModal({ message, isOpen, onDismiss }) {\n  const { chainId } = useActiveWeb3React()\n\n  console.log(message);\n\n  if (!chainId) return null\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      <Wrapper>\n        <Section>\n          <RowBetween>\n            <Text fontWeight={500} fontSize={20}>\n              Error\n          </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n            <AlertTriangle color='#FD4040' style={{ strokeWidth: 1.5 }} size={64} />\n            <p fontWeight={500} fontSize={16} color='#FD4040' style={{ textAlign: 'center', width: '85%' }}>\n              {message}\n            </p>\n          </AutoColumn>\n        </Section>\n        <BottomSection gap=\"12px\">\n          <ButtonPrimary onClick={onDismiss}>Dismiss</ButtonPrimary>\n        </BottomSection>\n      </Wrapper>\n    </Modal>\n  )\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  content\n}) {\n  console.log(content())\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {(\n        content()\n      )}\n    </Modal>\n  )\n}","import fetch from 'isomorphic-fetch'\nimport { BigNumber } from 'ethers'\n\nexport async function getGasPrice(provider) {\n    let gasPrice = BigNumber.from(10e9);\n\n    // Chain Id should be polygon to fetch gas data\n    try {\n        return await getBlockMeanGas(provider);\n    } catch (_) {\n        try {\n            gasPrice = BigNumber.from(await getGasTracker());\n            gasPrice = gasPrice.add(BigNumber.from(1))\n            gasPrice = gasPrice.mul(BigNumber.from(1e9));\n        } catch (e) {\n            console.log('Error when fetching gas data:', e.message)\n        }\n    }\n\n    return gasPrice\n}\n\n// function getGasStation() {\n//     return new Promise(async (resolve, reject) => {\n//         try {\n//             const res = await fetch('https://gasstation-mainnet.matic.network')\n//             const data = await res.json()\n//             const gasPrice = Math.ceil(data.fast)\n//             resolve(gasPrice)\n//         } catch (error) {\n//             reject(error)\n//         }\n//     })\n// }\n\nasync function getGasTracker() {\n    try {\n        const res = await fetch(\n            'https://gpoly.blockscan.com/gasapi.ashx?apikey=key&method=pendingpooltxgweidata'\n        )\n        const data = await res.json()\n        const gasPrice = Math.ceil(data.result.standardgaspricegwei)\n        return gasPrice\n    } catch (e) {\n        console.log('Error when fetching gas data from gas tracker:', e.message)\n        return 0\n    }\n}\n\nconst getBlockMeanGas = async (provider) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            const { transactions } = await provider.getBlockWithTransactions('latest')\n            const txLength = transactions.length\n            if (txLength > 0) {\n                resolve(transactions[Math.ceil(txLength / 2)].gasPrice)\n            } else {\n                reject('no transaction')\n            }\n        } catch (e) {\n            reject(e)\n        }\n    })\n}\n","import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\n// import * as ls from 'local-storage'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport Tooltip from '@reach/tooltip'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport OversizedPanel from '../OversizedPanel'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport SVGClose from '../../assets/svg/SVGClose'\nimport SVGDiv from '../../assets/svg/SVGDiv'\nimport InfoIcon from '../../assets/images/info-icon.png'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { useTradeExactIn } from '../../hooks/trade'\nimport { getExchangeRate } from '../../utils/rate'\n// import { useGasPrice } from '../../contexts/GasPrice'\nimport { TransactionErrorModal } from '../TransactionConfirmationModal'\nimport { useSymphonyContract, useWETHGatewayContract, useWETHContract } from '../../hooks'\nimport { ACTION_PLACE_ORDER, useTransactionAdder } from '../../contexts/Transactions'\nimport { amountFormatter, getERC20Contract, getTokenAllowance, getOrderId } from '../../utils'\nimport {\n  // ETH_ADDRESS,\n  WETH_ADDRESSES,\n  SYMPHONY_ADDRESSES,\n  // GENERIC_GAS_LIMIT_ORDER_EXECUTE,\n  ZERO_BYTES32,\n} from '../../constants'\n\nimport './ExchangePage.css'\nimport { getGasPrice } from '../../utils/gas'\nimport { SUPPORTED_ASSETS } from '../../contexts/supportedTokens'\nimport { getTokenValueInUsd } from '../../utils/price'\n\n// Use to detach input from output\nlet inputValue\n\nconst INPUT = 0\nconst OUTPUT = 1\nconst RATE = 2\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// Denominated in bips\nconst SLIPPAGE_WARNING = '30' // [30+%\nconst EXECUTION_WARNING = '3' // [10+%\n\nconst RATE_OP_MULT = 'x'\nconst RATE_OP_DIV = '/'\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\nconst DownArrow = styled(WrappedArrowDown)`\n  color: ${({ theme, active }) => (active ? theme.royalGreen : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst WrappedRateIcon = ({ RateIconSVG, clickable, active, icon, ...rest }) => <RateIconSVG {...rest} />\n\nconst RateIcon = styled(WrappedRateIcon)`\n  stroke: ${({ theme, active }) => (active ? theme.royalGreen : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  background-color: transparent;\n`\n\n// ///\n// Local storage\n// ///\n// const LS_ORDERS = 'orders_'\n\n// function lsKey(key, account, chainId) {\n//   return key + account.toString() + chainId\n// }\n\n// function saveOrder(account, orderData, chainId) {\n//   if (!account) return\n\n//   const key = lsKey(LS_ORDERS, account, chainId)\n//   const prev = ls.get(key)\n\n//   if (prev === null) {\n//     ls.set(key, [orderData])\n//   } else {\n//     if (prev.indexOf(orderData) === -1) {\n//       prev.push(orderData)\n//       ls.set(key, prev)\n//     }\n//   }\n// }\n\n// ///\n// Helpers\n// ///\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\nfunction getInitialSwapState(outputCurrency) {\n  return {\n    independentValue: '', // this is a user input\n    dependentValue: '', // this is a calculated number\n    independentField: INPUT,\n    prevIndependentField: OUTPUT,\n    inputCurrency: 'ETH',\n    outputCurrency: outputCurrency ? outputCurrency : '',\n    rateOp: RATE_OP_MULT,\n    inputRateValue: '',\n    stoplossValue: '',\n  }\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: INPUT,\n        independentValue: '',\n        inputRateValue: '',\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency,\n        stoplossValue: '',\n      }\n    }\n    case 'FLIP_RATE_OP': {\n      const { rateOp, inputRateValue } = state\n\n      const rate = inputRateValue ? ethers.BigNumber.from(ethers.utils.parseUnits(inputRateValue, 18)) : undefined\n      const flipped = rate ? amountFormatter(flipRate(rate), 18, 18, false) : ''\n\n      return {\n        ...state,\n        inputRateValue: flipped,\n        rateOp: rateOp === RATE_OP_DIV ? RATE_OP_MULT : RATE_OP_DIV,\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : '',\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency,\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue, independentField, prevIndependentField, inputRateValue } = state\n\n      return {\n        ...state,\n        independentValue: field !== RATE ? value : independentValue,\n        dependentValue: Number(value) === Number(independentValue) ? dependentValue : '',\n        independentField: field,\n        inputRateValue: field === RATE ? value : inputRateValue,\n        prevIndependentField: independentField === field ? prevIndependentField : independentField,\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload === null ? inputValue : action.payload,\n      }\n    }\n    case 'UPDATE_STOPLOSS': {\n      return {\n        ...state,\n        stoplossValue: action.payload === null ? inputValue : !action.payload ? 0 : action.payload,\n      }\n    }\n    default: {\n      return getInitialSwapState()\n    }\n  }\n}\n\nfunction applyExchangeRateTo(inputValue, exchangeRate, inputDecimals, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      exchangeRate &&\n      (inputDecimals || inputDecimals === 0) &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(exchangeRate)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      } else {\n        return exchangeRate\n          .mul(inputValue)\n          .div(factor)\n          .mul(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(outputDecimals)))\n          .div(ethers.BigNumber.from(10).pow(ethers.BigNumber.from(inputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction exchangeRateDiff(exchangeRateA, exchangeRateB) {\n  try {\n    if (exchangeRateA && exchangeRateB) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n      const deltaRaw = factor.mul(exchangeRateA).div(exchangeRateB)\n\n      if (false && deltaRaw < factor) {\n        return factor.sub(deltaRaw)\n      } else {\n        return deltaRaw.sub(factor)\n      }\n    }\n  } catch {}\n}\n\nfunction flipRate(rate) {\n  try {\n    if (rate) {\n      const factor = ethers.BigNumber.from(10).pow(ethers.BigNumber.from(18))\n      return factor.mul(factor).div(rate)\n    }\n  } catch {}\n}\n\nfunction safeParseUnits(number, units) {\n  try {\n    return ethers.utils.parseUnits(number, units)\n  } catch {\n    const margin = units * 8\n    const decimals = ethers.utils.parseUnits(number, margin)\n    return decimals.div(ethers.BigNumber.from(10).pow(margin - units))\n  }\n}\n\nexport default function ExchangePage({ initialCurrency }) {\n  const { t } = useTranslation()\n  const { account, library, chainId } = useWeb3React()\n\n  let [showConfirm, setShowConfirm] = useState(false)\n  let [orderErrorMessage, setOrderErrorMessage] = useState('')\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialCurrency, getInitialSwapState)\n\n  let {\n    independentValue,\n    independentField,\n    inputCurrency,\n    outputCurrency,\n    rateOp,\n    inputRateValue,\n    stoplossValue,\n  } = swapState\n\n  const symphonyContract = useSymphonyContract()\n  const wethGatewayContract = useWETHGatewayContract()\n  const wethContract = useWETHContract()\n  const [inputError, setInputError] = useState()\n\n  const addTransaction = useTransactionAdder()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange address for each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals } = useTokenDetails(inputCurrency)\n  const { symbol: outputSymbol, decimals: outputDecimals } = useTokenDetails(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT || independentField === RATE ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : inputValue\n  const inputValueFormatted =\n    independentField === INPUT ? independentValue : amountFormatter(inputValue, inputDecimals, inputDecimals, false)\n\n  let outputValueFormatted\n  let outputValueParsed\n  let rateRaw\n\n  const bestTradeExactIn = useTradeExactIn(\n    inputCurrency,\n    independentField === INPUT ? independentValue : inputValueFormatted,\n    outputCurrency\n  )\n\n  if (bestTradeExactIn) {\n    inputValue = ethers.BigNumber.from(ethers.utils.parseUnits(bestTradeExactIn.inputAmount.toExact(), inputDecimals))\n  } else if (independentField === INPUT && independentValue) {\n    inputValue = ethers.BigNumber.from(ethers.utils.parseUnits(independentValue, inputDecimals))\n  }\n\n  switch (independentField) {\n    case OUTPUT:\n      outputValueParsed = independentValueParsed\n      outputValueFormatted = independentValue\n      rateRaw = getExchangeRate(\n        inputValueParsed,\n        inputDecimals,\n        outputValueParsed,\n        outputDecimals,\n        rateOp === RATE_OP_DIV\n      )\n      break\n    case RATE:\n      if (!inputRateValue || Number(inputRateValue) === 0) {\n        outputValueParsed = ''\n        outputValueFormatted = ''\n      } else {\n        rateRaw = safeParseUnits(inputRateValue, 18)\n        outputValueParsed = applyExchangeRateTo(\n          inputValueParsed,\n          rateRaw,\n          inputDecimals,\n          outputDecimals,\n          rateOp === RATE_OP_DIV\n        )\n        outputValueFormatted = amountFormatter(\n          outputValueParsed,\n          dependentDecimals,\n          Math.min(4, dependentDecimals),\n          false\n        )\n      }\n      break\n    case INPUT:\n      outputValueParsed = bestTradeExactIn\n        ? ethers.utils.parseUnits(bestTradeExactIn.outputAmount.toExact(), dependentDecimals)\n        : null\n      outputValueFormatted = bestTradeExactIn ? bestTradeExactIn.outputAmount.toSignificant(6) : ''\n      stoplossValue = stoplossValue !== '' ? stoplossValue : outputValueFormatted\n      rateRaw = getExchangeRate(\n        inputValueParsed,\n        inputDecimals,\n        outputValueParsed,\n        outputDecimals,\n        rateOp === RATE_OP_DIV\n      )\n      break\n    default:\n      break\n  }\n\n  // rate info\n  const rateFormatted = independentField === RATE ? inputRateValue : amountFormatter(rateRaw, 18, 4, false)\n  const inverseRateInputSymbol = rateOp === RATE_OP_DIV ? inputSymbol : outputSymbol\n  const inverseRateOutputSymbol = rateOp === RATE_OP_DIV ? outputSymbol : inputSymbol\n  const inverseRate = flipRate(rateRaw)\n\n  // load required gas\n  // const gasPrice = useGasPrice()\n  // const gasLimit = GENERIC_GAS_LIMIT_ORDER_EXECUTE\n  // const requiredGas = gasPrice?.mul(gasLimit)\n\n  // const gasInInputTokens = useTradeExactIn('ETH', amountFormatter(requiredGas, 18, 18), inputCurrency)\n\n  let usedInput = ethers.BigNumber.from(0)\n  // if (inputSymbol === 'ETH') {\n  //   usedInput = requiredGas\n  // } else if (gasInInputTokens) {\n  //   usedInput = ethers.utils.parseUnits(gasInInputTokens.outputAmount.toExact(), inputDecimals)\n  // }\n\n  const realInputValue = usedInput && inputValueParsed?.sub(usedInput)\n  const executionRate =\n    realInputValue &&\n    getExchangeRate(realInputValue, inputDecimals, outputValueParsed, outputDecimals, rateOp === RATE_OP_DIV)\n\n  const limitSlippage = ethers.BigNumber.from(SLIPPAGE_WARNING).mul(\n    ethers.BigNumber.from(10).pow(ethers.BigNumber.from(16))\n  )\n\n  const limitExecution = ethers.BigNumber.from(EXECUTION_WARNING).mul(\n    ethers.BigNumber.from(10).pow(ethers.BigNumber.from(16))\n  )\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n\n  const executionRateDelta = executionRate && exchangeRateDiff(executionRate, rateRaw)\n  const executionRateNegative = executionRate?.lt(ethers.constants.Zero)\n  const executionRateWarning = executionRateNegative || executionRateDelta?.abs()?.gt(limitExecution)\n\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // validate input balance\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = inputValueParsed\n    if (inputBalance && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n    }\n  }, [inputBalance, inputCurrency, t, inputValueParsed])\n\n  const [showApprove, setShowApprove] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n\n  const [orderValue, setOrderValue] = useState('')\n  const [minValueWarning, setMinValueWarning] = useState(false)\n  const orderMinValue = Number(process.env.REACT_APP_ORDER_MIN_VALUE) || 100\n\n  useEffect(() => {\n    async function fetchData() {\n      if (account && inputCurrency && inputCurrency !== 'ETH') {\n        const inputValueCalculation = inputValueParsed\n        const allowance = await getTokenAllowance(\n          account.toLowerCase(),\n          inputCurrency,\n          SYMPHONY_ADDRESSES[chainId],\n          library\n        )\n\n        if (inputBalance && inputValueCalculation) {\n          if (inputBalance.gt(allowance)) {\n            setShowApprove(true)\n          } else {\n            setShowApprove(false)\n          }\n        }\n      }\n\n      if (inputCurrency && inputValueParsed) {\n        const inputValueUsd = await getTokenValueInUsd(\n          inputCurrency === 'ETH' ? WETH_ADDRESSES[chainId] : ethers.utils.getAddress(inputCurrency),\n          inputValueParsed\n        )\n        setOrderValue(inputValueUsd)\n\n        if (Number(inputValueUsd) < orderMinValue) {\n          setMinValueWarning(true)\n        } else {\n          setMinValueWarning(false)\n        }\n      } else {\n        setMinValueWarning(false)\n        setOrderValue('')\n      }\n    }\n    fetchData()\n  }, [inputBalance, inputCurrency, t, inputValueParsed, account, chainId, library, orderMinValue])\n\n  // calculate dependent value\n  useEffect(() => {\n    if (independentField === OUTPUT || independentField === RATE) {\n      return () => {\n        dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: null })\n      }\n    }\n  }, [independentField])\n\n  const [inverted, setInverted] = useState(false)\n\n  const marketRate = getExchangeRate(\n    inputValueParsed,\n    inputDecimals,\n    bestTradeExactIn ? ethers.utils.parseUnits(bestTradeExactIn.outputAmount.toExact(), outputDecimals) : null,\n    outputDecimals,\n    rateOp === RATE_OP_DIV\n  )\n\n  const exchangeRate = marketRate\n  const exchangeRateInverted = flipRate(exchangeRate)\n\n  const rateDelta =\n    rateOp === RATE_OP_DIV\n      ? exchangeRateDiff(inverseRate, exchangeRateInverted)\n      : exchangeRateDiff(rateRaw, exchangeRate)\n\n  const highSlippageWarning = rateDelta && rateDelta.lt(ethers.BigNumber.from(0).sub(limitSlippage))\n  const rateDeltaFormatted = amountFormatter(rateDelta, 16, 2, true)\n\n  const isValid = outputValueParsed && !inputError && !independentError\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n  const [isPlacing, setIsPlacing] = useState(false)\n\n  async function onPlace() {\n    let fromCurrency, toCurrency, inputAmount, minimumReturn, stoplossAmount\n    ReactGA.event({\n      category: 'place',\n      action: 'place',\n    })\n\n    inputAmount = inputValueParsed\n    minimumReturn = outputValueParsed\n    stoplossAmount = stoplossValue\n      ? ethers.BigNumber.from(ethers.utils.parseUnits(stoplossValue, outputDecimals))\n      : ethers.BigNumber.from(0)\n\n    try {\n      let res\n      let gasLimit = ethers.BigNumber.from(50000)\n      const gasPrice = await getGasPrice(symphonyContract.provider)\n\n      if (swapType === ETH_TO_TOKEN) {\n        fromCurrency = WETH_ADDRESSES[chainId]\n        toCurrency = outputCurrency\n      } else if (swapType === TOKEN_TO_ETH) {\n        if (String(inputCurrency).toLowerCase() === WETH_ADDRESSES[chainId].toLowerCase()) {\n          gasLimit = gasLimit.add(await wethContract.estimateGas.withdraw(inputAmount, { gasPrice }))\n          res = await wethContract.withdraw(inputAmount, {\n            gasLimit,\n            gasPrice,\n          })\n          return\n        } else {\n          // fromCurrency = inputCurrency\n          // toCurrency = WETH_ADDRESSES[chainId]\n          setOrderErrorMessage('Protocol only allows MATIC token for input. Use WMATIC instead.')\n          setShowConfirm(true)\n          return\n        }\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        fromCurrency = inputCurrency\n        toCurrency = outputCurrency\n      }\n\n      if (!SUPPORTED_ASSETS.includes(toCurrency.toLowerCase())) {\n        setOrderErrorMessage(\n          'Output asset is not supported !! You can reach in Discord if you think this should be added.'\n        )\n        setShowConfirm(true)\n        return\n      }\n\n      if (fromCurrency.toLowerCase() === toCurrency.toLowerCase()) {\n        setOrderErrorMessage(\"Input and output asset shouldn't be same !!\")\n        setShowConfirm(true)\n        return\n      }\n\n      let order = {\n        recipient: account.toLowerCase(),\n        inputToken: fromCurrency.toLowerCase(),\n        outputToken: toCurrency.toLowerCase(),\n        inputAmount: inputAmount,\n        minReturnAmount: minimumReturn,\n        stoplossAmount: stoplossAmount,\n      }\n\n      const orderId = getOrderId(order)\n      const orderHash = await symphonyContract.orderHash(orderId)\n\n      if (orderHash === ZERO_BYTES32) {\n        if (swapType === ETH_TO_TOKEN) {\n          gasLimit = gasLimit.add(\n            await wethGatewayContract.estimateGas.createMaticOrder(\n              account.toLowerCase(),\n              toCurrency.toLowerCase(),\n              minimumReturn,\n              stoplossAmount,\n              {\n                value: inputAmount,\n                gasPrice,\n              }\n            )\n          )\n\n          res = await wethGatewayContract.createMaticOrder(\n            account.toLowerCase(),\n            toCurrency.toLowerCase(),\n            minimumReturn,\n            stoplossAmount,\n            {\n              value: inputAmount,\n              gasLimit,\n              gasPrice,\n            }\n          )\n        } else {\n          const allowance = await getTokenAllowance(\n            account.toLowerCase(),\n            fromCurrency,\n            SYMPHONY_ADDRESSES[chainId],\n            library\n          )\n\n          if (allowance.lt(inputAmount)) {\n            const tokenContract = await getERC20Contract(fromCurrency, library, account)\n\n            gasLimit = gasLimit.add(\n              await tokenContract.estimateGas.approve(SYMPHONY_ADDRESSES[chainId], ethers.constants.MaxUint256, {\n                gasPrice,\n              })\n            )\n\n            const tx = await tokenContract.approve(SYMPHONY_ADDRESSES[chainId], ethers.constants.MaxUint256, {\n              gasLimit,\n              gasPrice,\n            })\n            setIsApproving(true)\n            await tx.wait()\n            setShowApprove(false)\n            setIsApproving(false)\n          }\n\n          gasLimit = gasLimit.add(\n            await symphonyContract.estimateGas.createOrder(\n              account.toLowerCase(),\n              fromCurrency.toLowerCase(),\n              toCurrency.toLowerCase(),\n              inputAmount,\n              minimumReturn,\n              stoplossAmount,\n              {\n                gasPrice,\n              }\n            )\n          )\n\n          res = await symphonyContract.createOrder(\n            account.toLowerCase(),\n            fromCurrency.toLowerCase(),\n            toCurrency.toLowerCase(),\n            inputAmount,\n            minimumReturn,\n            stoplossAmount,\n            {\n              gasLimit,\n              gasPrice,\n            }\n          )\n        }\n\n        if (res.hash) {\n          setIsPlacing(true)\n\n          order.orderId = orderId\n          // saveOrder(account, order, chainId)\n          addTransaction(res, { action: ACTION_PLACE_ORDER, order: order })\n\n          await res.wait()\n          setIsPlacing(false)\n        }\n      } else {\n        setOrderErrorMessage('There is already an order with same order id')\n        setShowConfirm(true)\n      }\n    } catch (e) {\n      setOrderErrorMessage(e.data ? e.data.message : e.message)\n      setShowConfirm(true)\n      setIsApproving(false)\n      setIsPlacing(false)\n    }\n  }\n\n  const [customSlippageError] = useState('')\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        allBalances={allBalances}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT },\n              })\n            }\n          }\n        }}\n        onCurrencySelected={(inputCurrency) => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\n        }}\n        onValueChange={(inputValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\n        }}\n        orderValue={orderValue ? '$ ' + orderValue.toFixed(2) : null}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n\n      <OversizedPanel>\n        <DownArrowBackground>\n          <RateIcon\n            RateIconSVG={rateOp === RATE_OP_MULT ? SVGClose : SVGDiv}\n            icon={rateOp}\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_RATE_OP' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n\n      <CurrencyInputPanel\n        title={t('rate')}\n        showCurrencySelector={false}\n        extraText={\n          inverseRateInputSymbol && inverseRate && inverseRateOutputSymbol\n            ? `1 ${inverseRateInputSymbol} = ${amountFormatter(inverseRate, 18, 4, false)} ${inverseRateOutputSymbol}`\n            : '-'\n        }\n        extraTextClickHander={() => {\n          dispatchSwapState({ type: 'FLIP_RATE_OP' })\n        }}\n        value={rateFormatted || ''}\n        onValueChange={(rateValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: rateValue, field: RATE } })\n        }}\n      />\n\n      <OversizedPanel>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted((inverted) => !inverted)\n          }}\n        >\n          {/* <ExchangeRate>\n            Execution rate at {gasPrice ? amountFormatter(gasPrice, 9, 0, false) : '...'} GWEI\n          </ExchangeRate> */}\n          {executionRateNegative ? (\n            'Never executes'\n          ) : rateOp !== RATE_OP_DIV ? (\n            <span>\n              {executionRate\n                ? `1 ${inputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : rateOp !== RATE_OP_DIV ? (\n            <span>\n              {executionRate\n                ? `1 ${inputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {executionRate\n                ? `1 ${outputSymbol} = ${amountFormatter(executionRate, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n\n      <CurrencyInputPanel\n        title={t('output')}\n        allBalances={allBalances}\n        description={estimatedText}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={(outputCurrency) => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValueFormatted, field: INPUT } })\n        }}\n        onValueChange={(outputValue) => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n\n      <div className=\"stop-loss\">\n        <div className=\"sc-cQFLBn gigTmf\"></div>\n        <div className=\"sc-gojNiO OVrhN\"></div>\n      </div>\n\n      <CurrencyInputPanel\n        title={t('Stop Loss')}\n        showCurrencySelector={false}\n        onValueChange={(outputValue) => {\n          dispatchSwapState({ type: 'UPDATE_STOPLOSS', payload: outputValue })\n        }}\n        value={stoplossValue}\n        disableUnlock\n      >\n        {' '}\n      </CurrencyInputPanel>\n\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted((inverted) => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n\n      <Flex>\n        <Button\n          disabled={!account || !isValid || customSlippageError === 'invalid'}\n          onClick={onPlace}\n          warning={highSlippageWarning || executionRateWarning || customSlippageError === 'warning'}\n        >\n          {customSlippageError === 'warning'\n            ? t('placeAnyway')\n            : String(inputCurrency).toLowerCase() === WETH_ADDRESSES[chainId ? chainId : 137].toLowerCase() &&\n              swapType === TOKEN_TO_ETH\n            ? t('Unwrap')\n            : showApprove\n            ? isApproving\n              ? t('Approving...')\n              : t('Approve')\n            : isPlacing\n            ? t('Placing...')\n            : t('Place')}\n        </Button>\n      </Flex>\n      {rateDeltaFormatted && (\n        <div className=\"market-delta-info\">\n          {rateDeltaFormatted.startsWith('-')\n            ? t('placeBelow', { rateDelta: rateDeltaFormatted })\n            : t('placeAbove', { rateDelta: rateDeltaFormatted })}\n        </div>\n      )}\n      {minValueWarning ? (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          Order might not execute. create with minimum ${orderMinValue}\n          <Tooltip\n            label=\"Relayer will only execute profitable orders so to be safe create order with more value\"\n            style={{\n              background: 'hsla(0, 0%, 0%, 0.75)',\n              color: 'white',\n              border: 'none',\n              borderRadius: '24px',\n              padding: '0.5em 1em',\n              marginTop: '-64px',\n            }}\n          >\n            <Image style={{ marginLeft: '10px' }} alt=\"info-icon\" src={InfoIcon} size=\"20px\" />\n          </Tooltip>\n        </div>\n      ) : null}\n      {/* {highSlippageWarning && (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          {t('highSlippageWarning')}\n        </div>\n      )}\n      {executionRateWarning && (\n        <div className=\"slippage-warning\">\n          <span role=\"img\" aria-label=\"warning\">\n            ⚠️\n          </span>\n          Order too small, extreme execution rate\n        </div>\n      )} */}\n\n      {orderErrorMessage ? (\n        <TransactionErrorModal\n          isOpen={showConfirm}\n          onDismiss={() => {\n            setOrderErrorMessage('')\n            setShowConfirm(false)\n          }}\n          message={orderErrorMessage}\n        />\n      ) : null}\n    </>\n  )\n}\n","export const SUPPORTED_ASSETS = [\n    \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\", // USDC\n    \"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063\", // DAI\n    \"0xc2132d05d31c914a87c6611c10748aeb04b58e8f\", // USDT\n    \"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619\", // WETH\n    \"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6\", // WBTC\n    \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\", // WMATIC\n    \"0xd6df932a45c0f255f85145f286ea0b292b21c90b\", // AAVE\n    \"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57\", // LUNA\n]\n","import React, { useState } from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\n// import Tooltip from '@reach/tooltip'\nimport { getEtherscanLink } from '../../utils'\nimport { CurrencySelect, Aligner, StyledTokenName } from '../CurrencyInputPanel'\nimport TokenLogo from '../TokenLogo'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter } from '../../utils'\nimport { useSymphonyContract } from '../../hooks'\n// import { useTradeExactIn } from '../../hooks/trade'\nimport { useTokenDetails } from '../../contexts/Tokens'\n// import { useGasPrice } from '../../contexts/GasPrice'\nimport {\n  ACTION_PLACE_ORDER,\n  ACTION_CANCEL_ORDER,\n  useTransactionAdder,\n  useOrderPendingState\n} from '../../contexts/Transactions'\nimport { ETH_ADDRESS } from '../../constants'\nimport { getExchangeRate } from '../../utils/rate'\n\nimport './OrderCard.css'\nimport { getGasPrice } from '../../utils/gas'\n\nconst CancelButton = styled.div`\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.textColor)};\n  padding: 0px 6px 0px 6px;\n  font-size: 0.85rem;\n`\n\nconst Order = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-radius: 1.25rem;\n  z-index: 1;\n  padding: 20px;\n  margin-bottom: 40px;\n  border: ${({ theme }) => `1px solid ${theme.mercuryGray}`};\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`\nconst WrappedArrowRight = ({ clickable, active, ...rest }) => <ArrowDown {...rest} transform=\"rotate(-90)\" />\n\nconst RightArrow = styled(WrappedArrowRight)`\n  color: ${({ theme }) => theme.royalGreen};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n`\n\nexport function OrderCard(props) {\n  const { t } = useTranslation()\n  const { chainId } = useWeb3React()\n\n  const order = props.order\n  // const inputAssetDetails = props.inputAssetDetails[0]\n\n  const inputToken = order.inputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.inputToken)\n  const outputToken =\n    order.outputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.outputToken)\n\n  const { symbol: fromSymbol, decimals: fromDecimals } = useTokenDetails(inputToken)\n  const { symbol: toSymbol, decimals: toDecimals } = useTokenDetails(outputToken)\n  const { state, last } = useOrderPendingState(order)\n\n  const canceling = state === ACTION_CANCEL_ORDER\n  const pending = state === ACTION_PLACE_ORDER\n\n  const symphonyContract = useSymphonyContract()\n  const addTransaction = useTransactionAdder()\n\n  async function onCancel(order, pending) {\n    const { orderId, orderEncodedData } = order\n    const gasPrice = await getGasPrice(symphonyContract.provider);\n    let gasLimit = await symphonyContract.estimateGas.cancelOrder(\n      orderId,\n      orderEncodedData,\n      {\n        gasPrice\n      }\n    );\n    gasLimit = gasLimit.add(ethers.BigNumber.from(50000))\n\n    symphonyContract\n      .cancelOrder(\n        orderId,\n        orderEncodedData,\n        {\n          gasLimit,\n          gasPrice,\n        }\n      )\n      .then(response => {\n        addTransaction(response, { action: ACTION_CANCEL_ORDER, order: order })\n      });\n  }\n\n  const inputAmount = ethers.BigNumber.from(\n    order.inputAmount !== '0' || !order.creationAmount ? order.inputAmount : order.creationAmount\n  )\n  const minReturnAmount = ethers.BigNumber.from(order.minReturnAmount)\n  const stoplossAmount = ethers.BigNumber.from(order.stoplossAmount)\n\n  const explorerLink = last ? getEtherscanLink(chainId, last.response.hash, 'transaction') : undefined\n\n  const rateFromTo = getExchangeRate(inputAmount, fromDecimals, minReturnAmount, toDecimals, false)\n  const rateToFrom = getExchangeRate(inputAmount, fromDecimals, minReturnAmount, toDecimals, true)\n\n  const [yieldEarned, setYieldEarned] = useState(\"\");\n\n  const checkYield = async () => {\n    const totalFunds = await symphonyContract.getTotalFunds(order.inputToken);\n    const totalShares = await symphonyContract.totalAssetShares(order.inputToken);\n\n    const currentOrderValue = Number(totalFunds) > 0 ?\n      ethers.BigNumber.from(order.shares)\n        .mul(ethers.BigNumber.from(totalFunds))\n        .div(ethers.BigNumber.from(totalShares))\n      : ethers.BigNumber.from(\"0\");\n\n    const yieldEarned = currentOrderValue.gt(0) ? currentOrderValue.sub(inputAmount) : ethers.BigNumber.from(\"0\");\n    setYieldEarned(yieldEarned);\n  }\n\n  // const gasPrice = useGasPrice()\n  // const gasLimit = GENERIC_GAS_LIMIT_ORDER_EXECUTE\n  // const requiredGas = gasPrice?.mul(gasLimit)\n\n  // const gasInInputTokens = useTradeExactIn('ETH', amountFormatter(requiredGas, 18, 18), inputToken)\n\n  // let tooltipText = ''\n  // let executionRateText = ''\n\n  // try {\n  //   const [virtualRateFromTo, virtualRateToFrom] = useMemo(() => {\n  //     if (!gasPrice) return [undefined, undefined]\n\n  //     let usedInput\n\n  //     try {\n  //       if (inputToken === 'ETH') {\n  //         usedInput = requiredGas\n  //       } else if (!gasInInputTokens || !requiredGas) {\n  //         return [undefined, undefined]\n  //       } else {\n  //         usedInput = ethers.utils.parseUnits(gasInInputTokens.outputAmount.toExact(), fromDecimals)\n  //       }\n\n  //       return [\n  //         getExchangeRate(inputAmount.sub(usedInput), fromDecimals, minReturnAmount, toDecimals, false),\n  //         getExchangeRate(inputAmount.sub(usedInput), fromDecimals, minReturnAmount, toDecimals, true)\n  //       ]\n  //     } catch {\n  //       return [undefined, undefined]\n  //     }\n  //   }, [fromDecimals, inputAmount, minReturnAmount, requiredGas, toDecimals, inputToken, gasInInputTokens, gasPrice])\n\n  //   if (virtualRateFromTo?.gt(ethers.constants.Zero)) {\n  //     executionRateText = `Execution rate: ${virtualRateFromTo ? amountFormatter(virtualRateFromTo, 18, 3) : '...'\n  //       } ${fromSymbol}/${toSymbol} -\n  //       ${virtualRateToFrom ? amountFormatter(virtualRateToFrom, 18, 3) : '...'} ${toSymbol}/${fromSymbol}* `\n  //   } else if (virtualRateFromTo) {\n  //     executionRateText = 'Execution rate: never executes'\n  //   } else {\n  //     executionRateText = ''\n  //   }\n\n  //   tooltipText = `Required rate to execute order assuming gas price of ${gasPrice ? amountFormatter(gasPrice, 9, 2) : '...'\n  //     } GWEI`\n  // } catch (e) {\n  //   console.warn('Error computing virtual rate', e)\n  // }\n  return (\n    <Order className={`order ${order.status}`}>\n      <div className=\"tokens\">\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={inputToken} logoURI=\"\" />}\n            {<StyledTokenName>{fromSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Aligner>\n          <RightArrow transform=\"rotate(-90)\" />\n        </Aligner>\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={outputToken} logoURI=\"\" />}\n            {<StyledTokenName>{toSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Spacer />\n        <CurrencySelect\n          selected={true}\n          disabled={canceling}\n          onClick={() => onCancel(order, pending)}\n        >\n          <CancelButton>{\n            canceling &&\n              last &&\n              last.response.CUSTOM_DATA.order.orderId === order.orderId\n              ? 'Cancelling ...'\n              : t('cancel')}\n          </CancelButton>\n        </CurrencySelect>\n      </div>{' '}\n      <p>\n        {`Sell: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n      </p>\n      <p>\n        {`Receive: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n      </p>\n      <p>\n        {`Stoploss: ${amountFormatter(stoplossAmount, toDecimals, 6)}`} {toSymbol}\n      </p>\n      <p>\n        {`Rate: ${amountFormatter(rateFromTo, 18, 6)}`} {fromSymbol}/{toSymbol} - {amountFormatter(rateToFrom, 18, 6)}{' '}\n        {toSymbol}/{fromSymbol}\n      </p>\n      <p>\n        <span>Yield Earned: &nbsp;</span>\n        <span>\n          {yieldEarned > 0 ?\n            <span>{`${amountFormatter(yieldEarned, fromDecimals, 6)}`} {fromSymbol} + Extra WMATIC (Aave)</span>\n            :\n            <span\n              selected={true}\n              onClick={() => checkYield()}\n              style={{ cursor: 'pointer', textDecoration: 'underline', color: \"#87c122\" }}\n            >\n              check\n            </span>\n          }\n        </span>\n      </p>\n      {/* <Tooltip\n        label={tooltipText}\n        style={{\n          background: 'hsla(0, 0%, 0%, 0.75)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '24px',\n          padding: '0.5em 1em',\n          marginTop: '-64px'\n        }}\n      >\n        <p>{executionRateText}</p>\n      </Tooltip> */}\n      <p>\n        {last &&\n          last.response.CUSTOM_DATA.order.orderId === order.orderId\n          && (\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n              Pending transaction...\n            </a>\n          )}\n      </p>\n    </Order>\n  )\n}\n","import React from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { getEtherscanLink } from '../../utils'\nimport { CurrencySelect, Aligner, StyledTokenName } from '../CurrencyInputPanel'\nimport TokenLogo from '../TokenLogo'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter } from '../../utils'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { ETH_ADDRESS } from '../../constants'\n\nimport './OrderCard.css'\n\nconst Order = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-flow: column nowrap;\n  -ms-flex-flow: column nowrap;\n  flex-flow: column nowrap;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-radius: 1.25rem;\n  z-index: 1;\n  padding: 20px;\n  margin-bottom: 40px;\n  border: ${({ theme }) => `1px solid ${theme.mercuryGray}`};\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`\nconst WrappedArrowRight = ({ clickable, active, ...rest }) => <ArrowDown {...rest} transform=\"rotate(-90)\" />\n\nconst RightArrow = styled(WrappedArrowRight)`\n  color: ${({ theme }) => theme.royalGreen};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n`\n\nexport function PastOrderCard(props) {\n  const { chainId } = useWeb3React()\n\n  const order = props.data\n\n  const inputToken = order.inputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.inputToken)\n  const outputToken =\n    order.outputToken === ETH_ADDRESS.toLowerCase() ? 'ETH' : ethers.utils.getAddress(order.outputToken)\n\n  const { symbol: fromSymbol, decimals: fromDecimals } = useTokenDetails(inputToken)\n  const { symbol: toSymbol, decimals: toDecimals } = useTokenDetails(outputToken)\n\n  const cancelled = order.status === 'CANCELLED'\n  const executed = order.status === 'EXECUTED'\n  // const bought = ethers.BigNumber.from(executed ? order.bought : 0)\n  const inputAmount = ethers.BigNumber.from(order.inputAmount)\n  const minReturnAmount = ethers.BigNumber.from(order.minReturnAmount)\n\n  const explorerLink = getEtherscanLink(\n    chainId,\n    cancelled ? order.cancelledTxHash : order.executedTxHash,\n    'transaction'\n  )\n\n  return (\n    <Order className={`order ${order.status}`}>\n      <div className=\"tokens\">\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={inputToken} logoURI=\"\" />}\n            {<StyledTokenName>{fromSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Aligner>\n          <RightArrow transform=\"rotate(-90)\" />\n        </Aligner>\n        <CurrencySelect selected={true}>\n          <Aligner>\n            {<TokenLogo address={outputToken} logoURI=\"\" />}\n            {<StyledTokenName>{toSymbol}</StyledTokenName>}\n          </Aligner>\n        </CurrencySelect>\n        <Spacer />\n      </div>\n      {executed && (\n        <>\n          <p>\n            {`Sold: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n          </p>\n          {/* <p>\n            {`Expected: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n          </p>\n          <p>\n            {`Received: ${amountFormatter(bought, toDecimals, 6)}`} {toSymbol}\n          </p> */}\n          <p>{`Date: ${new Date(order.updatedAt * 1000).toLocaleDateString()}`}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n            Executed\n          </a>\n        </>\n      )}\n      {cancelled && (\n        <>\n          <p>\n            {`Sell: ${amountFormatter(inputAmount, fromDecimals, 6)}`} {fromSymbol}\n          </p>\n          <p>\n            {`Expected: ${amountFormatter(minReturnAmount, toDecimals, 6)}`} {toSymbol}\n          </p>\n          <p>{`Date: ${new Date(order.updatedAt * 1000).toLocaleDateString()}`}</p>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={explorerLink} className=\"order-link\">\n            Cancelled\n          </a>\n        </>\n      )}\n    </Order>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { PastOrderCard } from '../PastOrderCard'\nimport { isAddress } from '../../utils'\nimport { ORDER_GRAPH } from '../../constants'\n\nexport function OrdersHistory() {\n  const { account, chainId } = useWeb3React()\n  const orders = usePastOrders(account, chainId)\n  return orders.length > 0 ? (\n    <>\n      <p style={{ marginTop: '40px', fontSize: '24px' }}>History</p>\n      {orders.map(order => (\n        <PastOrderCard key={order.id} data={order} />\n      ))}\n    </>\n  ) : null\n}\n\nfunction usePastOrders(account, chainId) {\n  const [state, setState] = useState([])\n\n  useEffect(() => {\n    if (account && isAddress(account)) {\n      fetchUserPastOrders(account, chainId).then(orders => {\n        setState(orders)\n      })\n    }\n  }, [account, chainId])\n\n  return state\n}\n\nasync function fetchUserPastOrders(account, chainId) {\n  const query = `\n  query GetOrdersByOwner($owner: String) {\n    orders(\n      where:{recipient:$owner,status_not:ACTIVE},\n      orderBy: updatedAt, \n      orderDirection: desc\n    ) {\n      id\n      inputToken\n      outputToken\n      inputAmount\n      minReturnAmount\n      stoplossAmount\n      status\n      updatedAt\n      executedTxHash\n      cancelledTxHash\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query, variables: { owner: account.toLowerCase() } })\n    })\n\n    const { data } = await res.json()\n    return data.orders\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return []\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React } from '@web3-react/core'\n// import * as ls from 'local-storage'\nimport styled from 'styled-components'\n\nimport { isAddress } from '../../utils'\nimport { OrderCard } from '../OrderCard'\nimport Circle from '../../assets/images/circle.svg'\n// import { useSymphonyContract } from '../../hooks'\nimport { OrdersHistory } from '../OrdersHistory'\nimport { Spinner } from '../../theme'\nimport { useAllPendingOrders, useAllPendingCancelOrders } from '../../contexts/Transactions'\nimport { ORDER_GRAPH } from '../../constants'\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\n// ///\n// Local storage\n// ///\n// const LS_ORDERS = 'orders_'\n\n// function lsKey(key, account, chainId) {\n//   return key + account.toString() + chainId\n// }\n\n// function getSavedOrders(account, chainId) {\n//   if (!account) return []\n\n//   console.log('Loading saved orders from storage location', account, lsKey(LS_ORDERS, account, chainId))\n//   const raw = ls.get(lsKey(LS_ORDERS, account, chainId))\n//   return raw == null ? [] : raw\n// }\n\nasync function fetchUserOrders(account, chainId) {\n  const query = `\n  query GetOrdersByOwner($owner: String) {\n    orders(\n      where:{recipient:$owner,status:ACTIVE},\n      orderBy: createdAtBlock, \n      orderDirection: desc\n    ) {\n      id\n      orderId\n      recipient {\n        id\n      }\n      inputToken\n      outputToken\n      inputAmount\n      minReturnAmount\n      stoplossAmount\n      orderEncodedData\n      shares\n      createdAtBlock\n    }\n  }`\n  try {\n    const res = await fetch(ORDER_GRAPH[chainId], {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query, variables: { owner: account.toLowerCase() } }),\n    })\n\n    const { data } = await res.json()\n\n    return {\n      allOrders: [],\n      openOrders: data.orders,\n    }\n  } catch (e) {\n    console.warn('Error loading orders from TheGraph', e)\n    return {\n      allOrders: [],\n      openOrders: [],\n    }\n  }\n}\n\n// async function getAllAssetsDetail(chainId) {\n//   const query = `\n//   query {\n//     assetDetails {\n//       asset\n//       totalFunds\n//       totalShares\n//     }\n//   }`\n//   try {\n//     const res = await fetch(ORDER_GRAPH[chainId], {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ query }),\n//     })\n\n//     const { data } = await res.json()\n\n//     return data.assetDetails\n//   } catch (e) {\n//     console.warn('Error loading orders from TheGraph', e)\n//     return []\n//   }\n// }\n\nfunction useGraphOrders(account, chainId, deps = []) {\n  const [state, setState] = useState({ openOrders: [], allOrders: [], assetDetails: [] })\n\n  useEffect(() => {\n    console.log(`Requesting load orders from the graph`)\n    if (account && isAddress(account)) {\n      setTimeout(() => {\n        fetchUserOrders(account, chainId).then(async (orders) => {\n          console.log(`Fetched ${orders.allOrders.length} ${orders.openOrders.length} orders from the graph`)\n\n          // const allAssetDetails = await getAllAssetsDetail(chainId)\n          setState({\n            // allAssetDetails,\n            allOrders: orders.allOrders,\n            openOrders: orders.openOrders,\n          })\n        })\n      }, 4000)\n    }\n    // eslint-disable-next-line\n  }, [...deps, account, chainId])\n\n  return state\n}\n\n// function useSavedOrders(account, chainId, symphonyContract, deps = []) {\n//   const [state, setState] = useState({ allOrders: [], openOrders: [] })\n\n//   useEffect(() => {\n//     console.log(`Requesting load orders from storage`)\n//     if (isAddress(account)) {\n//       const allOrders = getSavedOrders(account, chainId)\n//       // console.log(`Loaded ${allOrders.length} orders from local storage`)\n//       if (allOrders.length > 0) {\n//         setState({\n//           allOrders: allOrders,\n//           openOrders: allOrders.filter((o) => o.inputAmount !== '0'),\n//         })\n//       }\n//     }\n//     // eslint-disable-next-line\n//   }, [...deps, account, chainId, symphonyContract])\n\n//   return state\n// }\n\nexport default function Orders() {\n  const { t } = useTranslation()\n  const { account, chainId } = useWeb3React()\n  // const symphonyContract = useSymphonyContract()\n  const [orders, setOrders] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(!account)\n  }, [account])\n\n  let pendingOrders = useAllPendingOrders()\n  let pendingCancelOrders = useAllPendingCancelOrders()\n\n  // Get locally saved orders and the graph orders\n  // const local = useSavedOrders(account, chainId, symphonyContract, [pendingOrders.length, pendingCancelOrders.length])\n\n  // TODO: Remove deps if necessary\n  const graph = useGraphOrders(account, chainId, [pendingOrders.length, pendingCancelOrders.length])\n\n  // Define orders to show as openOrders + pending orders\n  useEffect(() => {\n    // Aggregate graph and local orders, local orders have priority\n    // const allOrders = local.allOrders.concat(\n    //   graph.allOrders.filter((o) => !local.allOrders.find((c) => c.orderId === o.orderId))\n    // )\n    // const openOrders = local.openOrders.concat(\n    //   graph.openOrders.filter((o) => !local.allOrders.find((c) => c.orderId === o.orderId))\n    // )\n\n    // setOrders(openOrders.concat(allOrders.filter((o) => pendingOrders.find((p) => p.orderId === o.orderId))))\n    setOrders(graph.openOrders)\n    // eslint-disable-next-line\n  }, [\n    // local.allOrders.length,\n    // local.openOrders.length,\n    // graph.allOrders.length,\n    graph.openOrders.length,\n    pendingOrders.length,\n  ])\n\n  return (\n    <>\n      {account && (\n        <>\n          <>\n            <p className=\"orders-title\">{`${t('Orders')} ${orders.length > 0 ? `(${orders.length})` : ''}`}</p>\n            {loading && (\n              <>\n                <SpinnerWrapper src={Circle} alt=\"loader\" /> Loading ...\n                <br />\n                <br />\n              </>\n            )}\n            {orders.length === 0 && !loading && <p>{t('noOpenOrders')}</p>}\n            {\n              <div>\n                {orders.map((order) => (\n                  <OrderCard\n                    key={order.orderId}\n                    order={order}\n                    // inputAssetDetails={graph.allAssetDetails.filter(\n                    //   (assetDetails) => assetDetails.asset.toLowerCase() === order.inputToken.toLowerCase()\n                    // )}\n                  />\n                ))}\n              </div>\n            }\n          </>\n          <OrdersHistory />\n        </>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport ExchangePage from '../../components/ExchangePage'\nimport Orders from '../../components/Orders'\n\nexport default function Swap({ initialCurrency }) {\n  return <>\n    <ExchangePage initialCurrency={initialCurrency} />\n    <Orders />\n  </>\n}\n"],"sourceRoot":""}